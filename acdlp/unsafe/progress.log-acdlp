Starting experiments at Fri  7 Apr 19:47:22 BST 2017 on dkr10.cs.ox.ac.uk
Starting to processing b01/main.c at Fri  7 Apr 19:47:22 BST 2017
runsolver Copyright (C) 2010-2013 Olivier ROUSSEL

This is runsolver version 3.3.4 (svn: 1649) [AEATK2]

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

command line: runsolver -C 2000 -W 2000 -d 1 -M 32768 /users/rajdeep/acdlp/2ls/src/2ls/2ls --verbosity 10 --acdl --decision equality --learning first-uip --propagate forward --inline --unwind 1 main.c 

[AEATK] No environment variable "AEATK_SET_TASK_AFFINITY" detected, cores will be treated normally

running on 8 cores: 0-7

Enforcing CPUTime limit (soft limit, will send SIGTERM then SIGKILL): 2000 seconds
Enforcing CPUTime limit (hard limit, will send SIGXCPU): 2030 seconds
Enforcing wall clock limit (soft limit, will send SIGTERM then SIGKILL): 2000 seconds
Enforcing VSIZE limit (soft limit, will send SIGTERM then SIGKILL): 33554432 KiB
Enforcing VSIZE limit (hard limit, stack expansion will fail with SIGSEGV, brk() and mmap() will return ENOMEM): 33605632 KiB
Current StackSize limit: 8192 KiB

2LS version 0.5.1 (based on CBMC 5.6)
Parsing main.c

[startup+0 s]
/proc/loadavg: 0.29 0.13 0.05 3/410 21048
/proc/meminfo: memFree=21452568/49446312 swapFree=0/4731340
[pid=21048] ppid=21046 vsize=18108 CPUtime=0 cores=0-7
/proc/21048/stat : 21048 (2ls) S 21046 21048 20874 34816 21040 4210688 223 0 0 0 0 0 0 0 20 0 1 0 933307213 18542592 966 18446744073709551615 4194304 8965104 140728309787952 140728309779480 139873731357648 0 24578 0 16384 1 0 0 17 0 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 4527 966 900 1165 0 151 0
Converting
Type-checking main
Generating GOTO Program
Stop Solver Thread: Started
[AEATK] No environment variable "AEATK_PORT" detected not sending updates


[startup+0.0997431 s]
/proc/loadavg: 0.29 0.13 0.05 3/410 21048
/proc/meminfo: memFree=21452568/49446312 swapFree=0/4731340
[pid=21048] ppid=21046 vsize=41256 CPUtime=0.08 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6163 850 0 0 7 1 0 0 20 0 1 0 933307213 42246144 7138 18446744073709551615 4194304 8965104 140728309787952 140728309778080 139873730883503 0 24578 0 16384 0 0 0 17 3 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10314 7138 1345 1165 0 5938 0
Current children cumulated CPU time (s) 0.08
Current children cumulated vsize (KiB) 41256

[startup+0.100236 s]
/proc/loadavg: 0.29 0.13 0.05 3/410 21048
/proc/meminfo: memFree=21452568/49446312 swapFree=0/4731340
[pid=21048] ppid=21046 vsize=41256 CPUtime=0.08 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6163 850 0 0 7 1 0 0 20 0 1 0 933307213 42246144 7138 18446744073709551615 4194304 8965104 140728309787952 140728309778080 139873730883503 0 24578 0 16384 0 0 0 17 3 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10314 7138 1345 1165 0 5938 0
Current children cumulated CPU time (s) 0.08
Current children cumulated vsize (KiB) 41256
Adding CPROVER library
Function Pointer Removal
Performing full inlining
Generic Property Instrumentation
Constant Propagation
Using intervals domain with binary search solver
Computing SSA of _start
Simplifying
(E) $guard#0 == TRUE

(E) __CPROVER_dead_object#2 == NULL

(E) __CPROVER_deallocated#3 == NULL

(E) __CPROVER_malloc_is_new_array#4 == FALSE

(E) __CPROVER_malloc_object#5 == NULL

(E) __CPROVER_malloc_size#6 == 0ul

(E) __CPROVER_memory_leak#7 == NULL

(E) __CPROVER_next_thread_id#8 == 0ul

(E) __CPROVER_pipe_count#9 == 0u

(E) __CPROVER_rounding_mode#10 == 0

(E) __CPROVER_thread_id#11 == 0ul

(E) __CPROVER_threads_exited#12 == ARRAY_OF(FALSE)

(E) a#13 == 0

(E) b#14 == 1

(E) c#15 == 2

(E) e#16 == 3

(E) f#17 == 4

(E) g#18 == 5

(E) smain.OUTP#19 == FALSE
(E) smain.OVERFLW#19 == FALSE
(E) smain.stato#19 == 0

(E) wf0#20 == 6

(E) wf1#21 == 7

(E) LINE1#25 == nondet_symbol(ssa::nondet25.1)

(E) LINE2#27 == nondet_symbol(ssa::nondet27.1)

(E) OUTP#29 == nondet_symbol(ssa::nondet29.1)

(E) OVERFLW#31 == nondet_symbol(ssa::nondet31.1)

(E) clock#33 == nondet_symbol(ssa::nondet33.1)

(E) smain.stato#35 == 0

(E) smain.OUTP#36 == FALSE

(E) smain.OVERFLW#37 == FALSE

(E) OUTP#phi39 == ($guard#ls292 ? OUTP#lb292 : OUTP#29)
(E) OVERFLW#phi39 == ($guard#ls292 ? OVERFLW#lb292 : OVERFLW#31)
(E) smain.OUTP#phi39 == ($guard#ls292 ? smain.OUTP#lb292 : smain.OUTP#36)
(E) smain.OVERFLW#phi39 == ($guard#ls292 ? smain.OVERFLW#lb292 : smain.OVERFLW#37)
(E) smain.stato#phi39 == ($guard#ls292 ? smain.stato#lb292 : smain.stato#35)
(E) $cond#39 == FALSE
(E) $guard#39 == $guard#0

(E) $guard#40 == (!$cond#39 && $guard#39)

(E) LINE1#42 == LINE1#25

(E) LINE2#44 == LINE2#27

(E) OUTP#46 == &OUTP

(E) OVERFLW#48 == &OVERFLW

(E) clock#50 == clock#33

(E) $cond#51 == ((signed int)smain.stato#phi39 == 0)

(E) $cond#52 == ((signed int)smain.stato#phi39 == 3)
(E) $guard#52 == (!$cond#51 && $guard#40)

(E) $cond#53 == ((signed int)smain.stato#phi39 == 1)
(E) $guard#53 == (!$cond#52 && $guard#52)

(E) $cond#54 == ((signed int)smain.stato#phi39 == 4)
(E) $guard#54 == (!$cond#53 && $guard#53)

(E) $cond#55 == ((signed int)smain.stato#phi39 == 2)
(E) $guard#55 == (!$cond#54 && $guard#54)

(E) $cond#56 == ((signed int)smain.stato#phi39 == 5)
(E) $guard#56 == (!$cond#55 && $guard#55)

(E) $cond#57 == ((signed int)smain.stato#phi39 == 6)
(E) $guard#57 == (!$cond#56 && $guard#56)

(E) $cond#58 == ((signed int)smain.stato#phi39 == 7)
(E) $guard#58 == (!$cond#57 && $guard#57)

(E) $cond#59 == TRUE
(E) $guard#59 == (!$cond#58 && $guard#58)

(E) $cond#60 == (((signed int)LINE1#42 & (signed int)LINE2#44) == 0)
(E) $guard#60 == ($cond#51 && $guard#40)

(E) smain.stato#61 == 4
(E) $guard#61 == (!$cond#60 && $guard#60)

(E) $cond#62 == TRUE

(E) smain.stato#63 == 1
(E) $guard#63 == ($cond#60 && $guard#60)

(E) smain.OUTP#64 == !(((signed int)LINE1#42 ^ (signed int)LINE2#44) == 0)
(E) smain.stato#phi64 == ($guard#63 ? smain.stato#63 : smain.stato#61)
(E) $guard#64 == ($cond#62 && $guard#61 || $guard#63)

(E) smain.OVERFLW#65 == FALSE

(E) $cond#66 == TRUE

(E) $cond#67 == (((signed int)LINE1#42 & (signed int)LINE2#44) == 0)
(E) $guard#67 == ($cond#52 && $guard#52)

(E) smain.stato#68 == 4
(E) $guard#68 == (!$cond#67 && $guard#67)

(E) $cond#69 == TRUE

(E) smain.stato#70 == 1
(E) $guard#70 == ($cond#67 && $guard#67)

(E) smain.OUTP#71 == !(((signed int)LINE1#42 ^ (signed int)LINE2#44) == 0)
(E) smain.stato#phi71 == ($guard#70 ? smain.stato#70 : smain.stato#68)
(E) $guard#71 == ($cond#69 && $guard#68 || $guard#70)

(E) smain.OVERFLW#72 == TRUE

(E) $cond#73 == TRUE

(E) $cond#74 == (((signed int)LINE1#42 & (signed int)LINE2#44) == 0)
(E) $guard#74 == ($cond#53 && $guard#53)

(E) smain.stato#75 == 5
(E) $guard#75 == (!$cond#74 && $guard#74)

(E) $cond#76 == TRUE

(E) smain.stato#77 == 2
(E) $guard#77 == ($cond#74 && $guard#74)

(E) smain.OUTP#78 == !(((signed int)LINE1#42 ^ (signed int)LINE2#44) == 0)
(E) smain.stato#phi78 == ($guard#77 ? smain.stato#77 : smain.stato#75)
(E) $guard#78 == ($cond#76 && $guard#75 || $guard#77)

(E) smain.OVERFLW#79 == FALSE

(E) $cond#80 == TRUE

(E) $cond#81 == (((signed int)LINE1#42 | (signed int)LINE2#44) == 0)
(E) $guard#81 == ($cond#54 && $guard#54)

(E) smain.stato#82 == 5
(E) $guard#82 == (!$cond#81 && $guard#81)

(E) $cond#83 == TRUE

(E) smain.stato#84 == 2
(E) $guard#84 == ($cond#81 && $guard#81)

(E) smain.OUTP#85 == !(~((signed int)LINE1#42 ^ (signed int)LINE2#44) == 0)
(E) smain.stato#phi85 == ($guard#84 ? smain.stato#84 : smain.stato#82)
(E) $guard#85 == ($cond#83 && $guard#82 || $guard#84)

(E) smain.OVERFLW#86 == FALSE

(E) $cond#87 == TRUE

(E) $cond#88 == (((signed int)LINE1#42 & (signed int)LINE2#44) == 0)
(E) $guard#88 == ($cond#55 && $guard#55)

(E) smain.stato#89 == 7
(E) $guard#89 == (!$cond#88 && $guard#88)

(E) $cond#90 == TRUE

(E) smain.stato#91 == 6
(E) $guard#91 == ($cond#88 && $guard#88)

(E) smain.OUTP#92 == !(((signed int)LINE1#42 ^ (signed int)LINE2#44) == 0)
(E) smain.stato#phi92 == ($guard#91 ? smain.stato#91 : smain.stato#89)
(E) $guard#92 == ($cond#90 && $guard#89 || $guard#91)

(E) smain.OVERFLW#93 == FALSE

(E) $cond#94 == TRUE

(E) $cond#95 == (((signed int)LINE1#42 | (signed int)LINE2#44) == 0)
(E) $guard#95 == ($cond#56 && $guard#56)

(E) smain.stato#96 == 7
(E) $guard#96 == (!$cond#95 && $guard#95)

(E) $cond#97 == TRUE

(E) smain.stato#98 == 6
(E) $guard#98 == ($cond#95 && $guard#95)

(E) smain.OUTP#99 == !(~((signed int)LINE1#42 ^ (signed int)LINE2#44) == 0)
(E) smain.stato#phi99 == ($guard#98 ? smain.stato#98 : smain.stato#96)
(E) $guard#99 == ($cond#97 && $guard#96 || $guard#98)

(E) smain.OVERFLW#100 == FALSE

(E) $cond#101 == TRUE

(E) $cond#102 == (((signed int)LINE1#42 & (signed int)LINE2#44) == 0)
(E) $guard#102 == ($cond#57 && $guard#57)

(E) smain.stato#103 == 3
(E) $guard#103 == (!$cond#102 && $guard#102)

(E) $cond#104 == TRUE

(E) smain.stato#105 == 0
(E) $guard#105 == ($cond#102 && $guard#102)

(E) smain.OUTP#106 == !(((signed int)LINE1#42 ^ (signed int)LINE2#44) == 0)
(E) smain.stato#phi106 == ($guard#105 ? smain.stato#105 : smain.stato#103)
(E) $guard#106 == ($cond#104 && $guard#103 || $guard#105)

(E) smain.OVERFLW#107 == FALSE

(E) $cond#108 == TRUE

(E) $cond#109 == (((signed int)LINE1#42 | (signed int)LINE2#44) == 0)
(E) $guard#109 == ($cond#58 && $guard#58)

(E) smain.stato#110 == 3
(E) $guard#110 == (!$cond#109 && $guard#109)

(E) $cond#111 == TRUE

(E) smain.stato#112 == 0
(E) $guard#112 == ($cond#109 && $guard#109)

(E) smain.OUTP#113 == !(~((signed int)LINE1#42 ^ (signed int)LINE2#44) == 0)
(E) smain.stato#phi113 == ($guard#112 ? smain.stato#112 : smain.stato#110)
(E) $guard#113 == ($cond#111 && $guard#110 || $guard#112)

(E) smain.OVERFLW#114 == FALSE

(E) OUTP#115 == smain.OUTP#phi115
(E) smain.OUTP#phi115 == ($guard#113 ? smain.OUTP#113 : ($cond#108 && $guard#106 ? smain.OUTP#106 : ($cond#101 && $guard#99 ? smain.OUTP#99 : ($cond#94 && $guard#92 ? smain.OUTP#92 : ($cond#87 && $guard#85 ? smain.OUTP#85 : ($cond#80 && $guard#78 ? smain.OUTP#78 : ($cond#73 && $guard#71 ? smain.OUTP#71 : ($cond#66 && $guard#64 ? smain.OUTP#64 : smain.OUTP#phi39))))))))
(E) smain.OVERFLW#phi115 == ($guard#113 ? smain.OVERFLW#114 : ($cond#108 && $guard#106 ? smain.OVERFLW#107 : ($cond#101 && $guard#99 ? smain.OVERFLW#100 : ($cond#94 && $guard#92 ? smain.OVERFLW#93 : ($cond#87 && $guard#85 ? smain.OVERFLW#86 : ($cond#80 && $guard#78 ? smain.OVERFLW#79 : ($cond#73 && $guard#71 ? smain.OVERFLW#72 : ($cond#66 && $guard#64 ? smain.OVERFLW#65 : smain.OVERFLW#phi39))))))))
(E) smain.stato#phi115 == ($guard#113 ? smain.stato#phi113 : ($cond#108 && $guard#106 ? smain.stato#phi106 : ($cond#101 && $guard#99 ? smain.stato#phi99 : ($cond#94 && $guard#92 ? smain.stato#phi92 : ($cond#87 && $guard#85 ? smain.stato#phi85 : ($cond#80 && $guard#78 ? smain.stato#phi78 : ($cond#73 && $guard#71 ? smain.stato#phi71 : ($cond#66 && $guard#64 ? smain.stato#phi64 : smain.stato#phi39))))))))
(E) $guard#115 == ($cond#101 && $guard#99 || $cond#108 && $guard#106 || $cond#59 && $guard#59 || $cond#66 && $guard#64 || $cond#73 && $guard#71 || $cond#80 && $guard#78 || $cond#87 && $guard#85 || $cond#94 && $guard#92 || $guard#113)

(E) OVERFLW#116 == smain.OVERFLW#phi115

(E) $cond#123 == !((signed int)smain.OVERFLW#phi115 == 1)

(E) $guard#124 == (!$cond#123 && $guard#115)

(E) LINE1#126 == LINE1#25

(E) LINE2#128 == LINE2#27

(E) OUTP#130 == &OUTP

(E) OVERFLW#132 == &OVERFLW

(E) clock#134 == clock#33

(E) $cond#135 == ((signed int)smain.stato#phi115 == 0)

(E) $cond#136 == ((signed int)smain.stato#phi115 == 3)
(E) $guard#136 == (!$cond#135 && $guard#124)

(E) $cond#137 == ((signed int)smain.stato#phi115 == 1)
(E) $guard#137 == (!$cond#136 && $guard#136)

(E) $cond#138 == ((signed int)smain.stato#phi115 == 4)
(E) $guard#138 == (!$cond#137 && $guard#137)

(E) $cond#139 == ((signed int)smain.stato#phi115 == 2)
(E) $guard#139 == (!$cond#138 && $guard#138)

(E) $cond#140 == ((signed int)smain.stato#phi115 == 5)
(E) $guard#140 == (!$cond#139 && $guard#139)

(E) $cond#141 == ((signed int)smain.stato#phi115 == 6)
(E) $guard#141 == (!$cond#140 && $guard#140)

(E) $cond#142 == ((signed int)smain.stato#phi115 == 7)
(E) $guard#142 == (!$cond#141 && $guard#141)

(E) $cond#143 == TRUE
(E) $guard#143 == (!$cond#142 && $guard#142)

(E) $cond#144 == (((signed int)LINE1#126 & (signed int)LINE2#128) == 0)
(E) $guard#144 == ($cond#135 && $guard#124)

(E) smain.stato#145 == 4
(E) $guard#145 == (!$cond#144 && $guard#144)

(E) $cond#146 == TRUE

(E) smain.stato#147 == 1
(E) $guard#147 == ($cond#144 && $guard#144)

(E) smain.OUTP#148 == !(((signed int)LINE1#126 ^ (signed int)LINE2#128) == 0)
(E) smain.stato#phi148 == ($guard#147 ? smain.stato#147 : smain.stato#145)
(E) $guard#148 == ($cond#146 && $guard#145 || $guard#147)

(E) smain.OVERFLW#149 == FALSE

(E) $cond#150 == TRUE

(E) $cond#151 == (((signed int)LINE1#126 & (signed int)LINE2#128) == 0)
(E) $guard#151 == ($cond#136 && $guard#136)

(E) smain.stato#152 == 4
(E) $guard#152 == (!$cond#151 && $guard#151)

(E) $cond#153 == TRUE

(E) smain.stato#154 == 1
(E) $guard#154 == ($cond#151 && $guard#151)

(E) smain.OUTP#155 == !(((signed int)LINE1#126 ^ (signed int)LINE2#128) == 0)
(E) smain.stato#phi155 == ($guard#154 ? smain.stato#154 : smain.stato#152)
(E) $guard#155 == ($cond#153 && $guard#152 || $guard#154)

(E) smain.OVERFLW#156 == TRUE

(E) $cond#157 == TRUE

(E) $cond#158 == (((signed int)LINE1#126 & (signed int)LINE2#128) == 0)
(E) $guard#158 == ($cond#137 && $guard#137)

(E) smain.stato#159 == 5
(E) $guard#159 == (!$cond#158 && $guard#158)

(E) $cond#160 == TRUE

(E) smain.stato#161 == 2
(E) $guard#161 == ($cond#158 && $guard#158)

(E) smain.OUTP#162 == !(((signed int)LINE1#126 ^ (signed int)LINE2#128) == 0)
(E) smain.stato#phi162 == ($guard#161 ? smain.stato#161 : smain.stato#159)
(E) $guard#162 == ($cond#160 && $guard#159 || $guard#161)

(E) smain.OVERFLW#163 == FALSE

(E) $cond#164 == TRUE

(E) $cond#165 == (((signed int)LINE1#126 | (signed int)LINE2#128) == 0)
(E) $guard#165 == ($cond#138 && $guard#138)

(E) smain.stato#166 == 5
(E) $guard#166 == (!$cond#165 && $guard#165)

(E) $cond#167 == TRUE

(E) smain.stato#168 == 2
(E) $guard#168 == ($cond#165 && $guard#165)

(E) smain.OUTP#169 == !(~((signed int)LINE1#126 ^ (signed int)LINE2#128) == 0)
(E) smain.stato#phi169 == ($guard#168 ? smain.stato#168 : smain.stato#166)
(E) $guard#169 == ($cond#167 && $guard#166 || $guard#168)

(E) smain.OVERFLW#170 == FALSE

(E) $cond#171 == TRUE

(E) $cond#172 == (((signed int)LINE1#126 & (signed int)LINE2#128) == 0)
(E) $guard#172 == ($cond#139 && $guard#139)

(E) smain.stato#173 == 7
(E) $guard#173 == (!$cond#172 && $guard#172)

(E) $cond#174 == TRUE

(E) smain.stato#175 == 6
(E) $guard#175 == ($cond#172 && $guard#172)

(E) smain.OUTP#176 == !(((signed int)LINE1#126 ^ (signed int)LINE2#128) == 0)
(E) smain.stato#phi176 == ($guard#175 ? smain.stato#175 : smain.stato#173)
(E) $guard#176 == ($cond#174 && $guard#173 || $guard#175)

(E) smain.OVERFLW#177 == FALSE

(E) $cond#178 == TRUE

(E) $cond#179 == (((signed int)LINE1#126 | (signed int)LINE2#128) == 0)
(E) $guard#179 == ($cond#140 && $guard#140)

(E) smain.stato#180 == 7
(E) $guard#180 == (!$cond#179 && $guard#179)

(E) $cond#181 == TRUE

(E) smain.stato#182 == 6
(E) $guard#182 == ($cond#179 && $guard#179)

(E) smain.OUTP#183 == !(~((signed int)LINE1#126 ^ (signed int)LINE2#128) == 0)
(E) smain.stato#phi183 == ($guard#182 ? smain.stato#182 : smain.stato#180)
(E) $guard#183 == ($cond#181 && $guard#180 || $guard#182)

(E) smain.OVERFLW#184 == FALSE

(E) $cond#185 == TRUE

(E) $cond#186 == (((signed int)LINE1#126 & (signed int)LINE2#128) == 0)
(E) $guard#186 == ($cond#141 && $guard#141)

(E) smain.stato#187 == 3
(E) $guard#187 == (!$cond#186 && $guard#186)

(E) $cond#188 == TRUE

(E) smain.stato#189 == 0
(E) $guard#189 == ($cond#186 && $guard#186)

(E) smain.OUTP#190 == !(((signed int)LINE1#126 ^ (signed int)LINE2#128) == 0)
(E) smain.stato#phi190 == ($guard#189 ? smain.stato#189 : smain.stato#187)
(E) $guard#190 == ($cond#188 && $guard#187 || $guard#189)

(E) smain.OVERFLW#191 == FALSE

(E) $cond#192 == TRUE

(E) $cond#193 == (((signed int)LINE1#126 | (signed int)LINE2#128) == 0)
(E) $guard#193 == ($cond#142 && $guard#142)

(E) smain.stato#194 == 3
(E) $guard#194 == (!$cond#193 && $guard#193)

(E) $cond#195 == TRUE

(E) smain.stato#196 == 0
(E) $guard#196 == ($cond#193 && $guard#193)

(E) smain.OUTP#197 == !(~((signed int)LINE1#126 ^ (signed int)LINE2#128) == 0)
(E) smain.stato#phi197 == ($guard#196 ? smain.stato#196 : smain.stato#194)
(E) $guard#197 == ($cond#195 && $guard#194 || $guard#196)

(E) smain.OVERFLW#198 == FALSE

(E) OUTP#199 == smain.OUTP#phi199
(E) smain.OUTP#phi199 == ($guard#197 ? smain.OUTP#197 : ($cond#192 && $guard#190 ? smain.OUTP#190 : ($cond#185 && $guard#183 ? smain.OUTP#183 : ($cond#178 && $guard#176 ? smain.OUTP#176 : ($cond#171 && $guard#169 ? smain.OUTP#169 : ($cond#164 && $guard#162 ? smain.OUTP#162 : ($cond#157 && $guard#155 ? smain.OUTP#155 : ($cond#150 && $guard#148 ? smain.OUTP#148 : smain.OUTP#phi115))))))))
(E) smain.OVERFLW#phi199 == ($guard#197 ? smain.OVERFLW#198 : ($cond#192 && $guard#190 ? smain.OVERFLW#191 : ($cond#185 && $guard#183 ? smain.OVERFLW#184 : ($cond#178 && $guard#176 ? smain.OVERFLW#177 : ($cond#171 && $guard#169 ? smain.OVERFLW#170 : ($cond#164 && $guard#162 ? smain.OVERFLW#163 : ($cond#157 && $guard#155 ? smain.OVERFLW#156 : ($cond#150 && $guard#148 ? smain.OVERFLW#149 : smain.OVERFLW#phi115))))))))
(E) smain.stato#phi199 == ($guard#197 ? smain.stato#phi197 : ($cond#192 && $guard#190 ? smain.stato#phi190 : ($cond#185 && $guard#183 ? smain.stato#phi183 : ($cond#178 && $guard#176 ? smain.stato#phi176 : ($cond#171 && $guard#169 ? smain.stato#phi169 : ($cond#164 && $guard#162 ? smain.stato#phi162 : ($cond#157 && $guard#155 ? smain.stato#phi155 : ($cond#150 && $guard#148 ? smain.stato#phi148 : smain.stato#phi115))))))))
(E) $guard#199 == ($cond#143 && $guard#143 || $cond#150 && $guard#148 || $cond#157 && $guard#155 || $cond#164 && $guard#162 || $cond#171 && $guard#169 || $cond#178 && $guard#176 || $cond#185 && $guard#183 || $cond#192 && $guard#190 || $guard#197)

(E) OVERFLW#200 == smain.OVERFLW#phi199

(E) LINE1#209 == LINE1#25

(E) LINE2#211 == LINE2#27

(E) OUTP#213 == &OUTP

(E) OVERFLW#215 == &OVERFLW

(E) clock#217 == clock#33

(E) $cond#218 == ((signed int)smain.stato#phi199 == 0)

(E) $cond#219 == ((signed int)smain.stato#phi199 == 3)
(E) $guard#219 == (!$cond#218 && $guard#199)

(E) $cond#220 == ((signed int)smain.stato#phi199 == 1)
(E) $guard#220 == (!$cond#219 && $guard#219)

(E) $cond#221 == ((signed int)smain.stato#phi199 == 4)
(E) $guard#221 == (!$cond#220 && $guard#220)

(E) $cond#222 == ((signed int)smain.stato#phi199 == 2)
(E) $guard#222 == (!$cond#221 && $guard#221)

(E) $cond#223 == ((signed int)smain.stato#phi199 == 5)
(E) $guard#223 == (!$cond#222 && $guard#222)

(E) $cond#224 == ((signed int)smain.stato#phi199 == 6)
(E) $guard#224 == (!$cond#223 && $guard#223)

(E) $cond#225 == ((signed int)smain.stato#phi199 == 7)
(E) $guard#225 == (!$cond#224 && $guard#224)

(E) $cond#226 == TRUE
(E) $guard#226 == (!$cond#225 && $guard#225)

(E) $cond#227 == (((signed int)LINE1#209 & (signed int)LINE2#211) == 0)
(E) $guard#227 == ($cond#218 && $guard#199)

(E) smain.stato#228 == 4
(E) $guard#228 == (!$cond#227 && $guard#227)

(E) $cond#229 == TRUE

(E) smain.stato#230 == 1
(E) $guard#230 == ($cond#227 && $guard#227)

(E) smain.OUTP#231 == !(((signed int)LINE1#209 ^ (signed int)LINE2#211) == 0)
(E) smain.stato#phi231 == ($guard#230 ? smain.stato#230 : smain.stato#228)
(E) $guard#231 == ($cond#229 && $guard#228 || $guard#230)

(E) smain.OVERFLW#232 == FALSE

(E) $cond#233 == TRUE

(E) $cond#234 == (((signed int)LINE1#209 & (signed int)LINE2#211) == 0)
(E) $guard#234 == ($cond#219 && $guard#219)

(E) smain.stato#235 == 4
(E) $guard#235 == (!$cond#234 && $guard#234)

(E) $cond#236 == TRUE

(E) smain.stato#237 == 1
(E) $guard#237 == ($cond#234 && $guard#234)

(E) smain.OUTP#238 == !(((signed int)LINE1#209 ^ (signed int)LINE2#211) == 0)
(E) smain.stato#phi238 == ($guard#237 ? smain.stato#237 : smain.stato#235)
(E) $guard#238 == ($cond#236 && $guard#235 || $guard#237)

(E) smain.OVERFLW#239 == TRUE

(E) $cond#240 == TRUE

(E) $cond#241 == (((signed int)LINE1#209 & (signed int)LINE2#211) == 0)
(E) $guard#241 == ($cond#220 && $guard#220)

(E) smain.stato#242 == 5
(E) $guard#242 == (!$cond#241 && $guard#241)

(E) $cond#243 == TRUE

(E) smain.stato#244 == 2
(E) $guard#244 == ($cond#241 && $guard#241)

(E) smain.OUTP#245 == !(((signed int)LINE1#209 ^ (signed int)LINE2#211) == 0)
(E) smain.stato#phi245 == ($guard#244 ? smain.stato#244 : smain.stato#242)
(E) $guard#245 == ($cond#243 && $guard#242 || $guard#244)

(E) smain.OVERFLW#246 == FALSE

(E) $cond#247 == TRUE

(E) $cond#248 == (((signed int)LINE1#209 | (signed int)LINE2#211) == 0)
(E) $guard#248 == ($cond#221 && $guard#221)

(E) smain.stato#249 == 5
(E) $guard#249 == (!$cond#248 && $guard#248)

(E) $cond#250 == TRUE

(E) smain.stato#251 == 2
(E) $guard#251 == ($cond#248 && $guard#248)

(E) smain.OUTP#252 == !(~((signed int)LINE1#209 ^ (signed int)LINE2#211) == 0)
(E) smain.stato#phi252 == ($guard#251 ? smain.stato#251 : smain.stato#249)
(E) $guard#252 == ($cond#250 && $guard#249 || $guard#251)

(E) smain.OVERFLW#253 == FALSE

(E) $cond#254 == TRUE

(E) $cond#255 == (((signed int)LINE1#209 & (signed int)LINE2#211) == 0)
(E) $guard#255 == ($cond#222 && $guard#222)

(E) smain.stato#256 == 7
(E) $guard#256 == (!$cond#255 && $guard#255)

(E) $cond#257 == TRUE

(E) smain.stato#258 == 6
(E) $guard#258 == ($cond#255 && $guard#255)

(E) smain.OUTP#259 == !(((signed int)LINE1#209 ^ (signed int)LINE2#211) == 0)
(E) smain.stato#phi259 == ($guard#258 ? smain.stato#258 : smain.stato#256)
(E) $guard#259 == ($cond#257 && $guard#256 || $guard#258)

(E) smain.OVERFLW#260 == FALSE

(E) $cond#261 == TRUE

(E) $cond#262 == (((signed int)LINE1#209 | (signed int)LINE2#211) == 0)
(E) $guard#262 == ($cond#223 && $guard#223)

(E) smain.stato#263 == 7
(E) $guard#263 == (!$cond#262 && $guard#262)

(E) $cond#264 == TRUE

(E) smain.stato#265 == 6
(E) $guard#265 == ($cond#262 && $guard#262)

(E) smain.OUTP#266 == !(~((signed int)LINE1#209 ^ (signed int)LINE2#211) == 0)
(E) smain.stato#phi266 == ($guard#265 ? smain.stato#265 : smain.stato#263)
(E) $guard#266 == ($cond#264 && $guard#263 || $guard#265)

(E) smain.OVERFLW#267 == FALSE

(E) $cond#268 == TRUE

(E) $cond#269 == (((signed int)LINE1#209 & (signed int)LINE2#211) == 0)
(E) $guard#269 == ($cond#224 && $guard#224)

(E) smain.stato#270 == 3
(E) $guard#270 == (!$cond#269 && $guard#269)

(E) $cond#271 == TRUE

(E) smain.stato#272 == 0
(E) $guard#272 == ($cond#269 && $guard#269)

(E) smain.OUTP#273 == !(((signed int)LINE1#209 ^ (signed int)LINE2#211) == 0)
(E) smain.stato#phi273 == ($guard#272 ? smain.stato#272 : smain.stato#270)
(E) $guard#273 == ($cond#271 && $guard#270 || $guard#272)

(E) smain.OVERFLW#274 == FALSE

(E) $cond#275 == TRUE

(E) $cond#276 == (((signed int)LINE1#209 | (signed int)LINE2#211) == 0)
(E) $guard#276 == ($cond#225 && $guard#225)

(E) smain.stato#277 == 3
(E) $guard#277 == (!$cond#276 && $guard#276)

(E) $cond#278 == TRUE

(E) smain.stato#279 == 0
(E) $guard#279 == ($cond#276 && $guard#276)

(E) smain.OUTP#280 == !(~((signed int)LINE1#209 ^ (signed int)LINE2#211) == 0)
(E) smain.stato#phi280 == ($guard#279 ? smain.stato#279 : smain.stato#277)
(E) $guard#280 == ($cond#278 && $guard#277 || $guard#279)

(E) smain.OVERFLW#281 == FALSE

(E) OUTP#282 == smain.OUTP#phi282
(E) smain.OUTP#phi282 == ($guard#280 ? smain.OUTP#280 : ($cond#275 && $guard#273 ? smain.OUTP#273 : ($cond#268 && $guard#266 ? smain.OUTP#266 : ($cond#261 && $guard#259 ? smain.OUTP#259 : ($cond#254 && $guard#252 ? smain.OUTP#252 : ($cond#247 && $guard#245 ? smain.OUTP#245 : ($cond#240 && $guard#238 ? smain.OUTP#238 : ($cond#233 && $guard#231 ? smain.OUTP#231 : smain.OUTP#phi199))))))))
(E) smain.OVERFLW#phi282 == ($guard#280 ? smain.OVERFLW#281 : ($cond#275 && $guard#273 ? smain.OVERFLW#274 : ($cond#268 && $guard#266 ? smain.OVERFLW#267 : ($cond#261 && $guard#259 ? smain.OVERFLW#260 : ($cond#254 && $guard#252 ? smain.OVERFLW#253 : ($cond#247 && $guard#245 ? smain.OVERFLW#246 : ($cond#240 && $guard#238 ? smain.OVERFLW#239 : ($cond#233 && $guard#231 ? smain.OVERFLW#232 : smain.OVERFLW#phi199))))))))
(E) smain.stato#phi282 == ($guard#280 ? smain.stato#phi280 : ($cond#275 && $guard#273 ? smain.stato#phi273 : ($cond#268 && $guard#266 ? smain.stato#phi266 : ($cond#261 && $guard#259 ? smain.stato#phi259 : ($cond#254 && $guard#252 ? smain.stato#phi252 : ($cond#247 && $guard#245 ? smain.stato#phi245 : ($cond#240 && $guard#238 ? smain.stato#phi238 : ($cond#233 && $guard#231 ? smain.stato#phi231 : smain.stato#phi199))))))))
(E) $guard#282 == ($cond#226 && $guard#226 || $cond#233 && $guard#231 || $cond#240 && $guard#238 || $cond#247 && $guard#245 || $cond#254 && $guard#252 || $cond#261 && $guard#259 || $cond#268 && $guard#266 || $cond#275 && $guard#273 || $guard#280)

(E) OVERFLW#283 == smain.OVERFLW#phi282

(A) !((signed int)smain.OVERFLW#phi282 == 0) || !$guard#282

(E) $cond#291 == ((signed int)smain.OVERFLW#phi282 == 0)

(E) OUTP#phi292 == ($cond#291 && $guard#282 ? OUTP#282 : OUTP#115)
(E) OVERFLW#phi292 == ($cond#291 && $guard#282 ? OVERFLW#283 : OVERFLW#116)
(E) smain.OUTP#phi292 == ($cond#291 && $guard#282 ? smain.OUTP#phi282 : smain.OUTP#phi115)
(E) smain.OVERFLW#phi292 == ($cond#291 && $guard#282 ? smain.OVERFLW#phi282 : smain.OVERFLW#phi115)
(E) smain.stato#phi292 == ($cond#291 && $guard#282 ? smain.stato#phi282 : smain.stato#phi115)
(E) $cond#292 == TRUE
(E) $guard#292 == (!$cond#291 && $guard#282 || $cond#123 && $guard#115 || $cond#291 && $guard#282)

(E) $guard#293 == ($cond#39 && $guard#39)


Unwinding
_start
The number of assertions are: 2
********************************
Pre-processing SSA
********************************
Printing the SSA enabling expression:: !enable0 && enable1
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $guard#0 == TRUE
Original statement: $guard#0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is __CPROVER_dead_object#2 == NULL
Original statement: __CPROVER_dead_object#2 == NULL
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is __CPROVER_deallocated#3 == NULL
Original statement: __CPROVER_deallocated#3 == NULL
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is __CPROVER_malloc_is_new_array#4 == FALSE
Original statement: __CPROVER_malloc_is_new_array#4 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is __CPROVER_malloc_object#5 == NULL
Original statement: __CPROVER_malloc_object#5 == NULL
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is __CPROVER_malloc_size#6 == 0ul
Original statement: __CPROVER_malloc_size#6 == 0ul
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is __CPROVER_memory_leak#7 == NULL
Original statement: __CPROVER_memory_leak#7 == NULL
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is __CPROVER_next_thread_id#8 == 0ul
Original statement: __CPROVER_next_thread_id#8 == 0ul
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is __CPROVER_pipe_count#9 == 0u
Original statement: __CPROVER_pipe_count#9 == 0u
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is __CPROVER_rounding_mode#10 == 0
Original statement: __CPROVER_rounding_mode#10 == 0
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is __CPROVER_thread_id#11 == 0ul
Original statement: __CPROVER_thread_id#11 == 0ul
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is __CPROVER_threads_exited#12 == ARRAY_OF(FALSE)
Original statement: __CPROVER_threads_exited#12 == ARRAY_OF(FALSE)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is a#13 == 0
Original statement: a#13 == 0
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is b#14 == 1
Original statement: b#14 == 1
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is c#15 == 2
Original statement: c#15 == 2
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is e#16 == 3
Original statement: e#16 == 3
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is f#17 == 4
Original statement: f#17 == 4
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is g#18 == 5
Original statement: g#18 == 5
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#19 == FALSE
Original statement: smain.OUTP#19 == FALSE
The statement pushed is smain.OVERFLW#19 == FALSE
Original statement: smain.OVERFLW#19 == FALSE
The statement pushed is smain.stato#19 == 0
Original statement: smain.stato#19 == 0
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is wf0#20 == 6
Original statement: wf0#20 == 6
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is wf1#21 == 7
Original statement: wf1#21 == 7
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE1#25 == nondet_symbol(ssa::nondet25.1)
Original statement: LINE1#25 == nondet_symbol(ssa::nondet25.1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE2#27 == nondet_symbol(ssa::nondet27.1)
Original statement: LINE2#27 == nondet_symbol(ssa::nondet27.1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#29 == nondet_symbol(ssa::nondet29.1)
Original statement: OUTP#29 == nondet_symbol(ssa::nondet29.1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OVERFLW#31 == nondet_symbol(ssa::nondet31.1)
Original statement: OVERFLW#31 == nondet_symbol(ssa::nondet31.1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is clock#33 == nondet_symbol(ssa::nondet33.1)
Original statement: clock#33 == nondet_symbol(ssa::nondet33.1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#35 == 0
Original statement: smain.stato#35 == 0
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#36 == FALSE
Original statement: smain.OUTP#36 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#37 == FALSE
Original statement: smain.OVERFLW#37 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $guard#293 == ($cond#39 && $guard#39)
Original statement: $guard#293 == ($cond#39 && $guard#39)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $guard#40%0 == (!$cond#39%0 && $guard#39%0)
Original statement: $guard#40%0 == (!$cond#39%0 && $guard#39%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE1#42%0 == LINE1#25
Original statement: LINE1#42%0 == LINE1#25
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE2#44%0 == LINE2#27
Original statement: LINE2#44%0 == LINE2#27
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#46%0 == &OUTP
Original statement: OUTP#46%0 == &OUTP
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OVERFLW#48%0 == &OVERFLW
Original statement: OVERFLW#48%0 == &OVERFLW
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is clock#50%0 == clock#33
Original statement: clock#50%0 == clock#33
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#51%0 == ((signed int)smain.stato#phi39%0 == 0)
Original statement: $cond#51%0 == ((signed int)smain.stato#phi39%0 == 0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#52%0 == ((signed int)smain.stato#phi39%0 == 3)
Original statement: $cond#52%0 == ((signed int)smain.stato#phi39%0 == 3)
The statement pushed is $guard#52%0 == (!$cond#51%0 && $guard#40%0)
Original statement: $guard#52%0 == (!$cond#51%0 && $guard#40%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#53%0 == ((signed int)smain.stato#phi39%0 == 1)
Original statement: $cond#53%0 == ((signed int)smain.stato#phi39%0 == 1)
The statement pushed is $guard#53%0 == (!$cond#52%0 && $guard#52%0)
Original statement: $guard#53%0 == (!$cond#52%0 && $guard#52%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#54%0 == ((signed int)smain.stato#phi39%0 == 4)
Original statement: $cond#54%0 == ((signed int)smain.stato#phi39%0 == 4)
The statement pushed is $guard#54%0 == (!$cond#53%0 && $guard#53%0)
Original statement: $guard#54%0 == (!$cond#53%0 && $guard#53%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#55%0 == ((signed int)smain.stato#phi39%0 == 2)
Original statement: $cond#55%0 == ((signed int)smain.stato#phi39%0 == 2)
The statement pushed is $guard#55%0 == (!$cond#54%0 && $guard#54%0)
Original statement: $guard#55%0 == (!$cond#54%0 && $guard#54%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#56%0 == ((signed int)smain.stato#phi39%0 == 5)
Original statement: $cond#56%0 == ((signed int)smain.stato#phi39%0 == 5)
The statement pushed is $guard#56%0 == (!$cond#55%0 && $guard#55%0)
Original statement: $guard#56%0 == (!$cond#55%0 && $guard#55%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#57%0 == ((signed int)smain.stato#phi39%0 == 6)
Original statement: $cond#57%0 == ((signed int)smain.stato#phi39%0 == 6)
The statement pushed is $guard#57%0 == (!$cond#56%0 && $guard#56%0)
Original statement: $guard#57%0 == (!$cond#56%0 && $guard#56%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#58%0 == ((signed int)smain.stato#phi39%0 == 7)
Original statement: $cond#58%0 == ((signed int)smain.stato#phi39%0 == 7)
The statement pushed is $guard#58%0 == (!$cond#57%0 && $guard#57%0)
Original statement: $guard#58%0 == (!$cond#57%0 && $guard#57%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#59%0 == TRUE
Original statement: $cond#59%0 == TRUE
The statement pushed is $guard#59%0 == (!$cond#58%0 && $guard#58%0)
Original statement: $guard#59%0 == (!$cond#58%0 && $guard#58%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#60%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
Original statement: $cond#60%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
The statement pushed is $guard#60%0 == ($cond#51%0 && $guard#40%0)
Original statement: $guard#60%0 == ($cond#51%0 && $guard#40%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#61%0 == 4
Original statement: smain.stato#61%0 == 4
The statement pushed is $guard#61%0 == (!$cond#60%0 && $guard#60%0)
Original statement: $guard#61%0 == (!$cond#60%0 && $guard#60%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#62%0 == TRUE
Original statement: $cond#62%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#63%0 == 1
Original statement: smain.stato#63%0 == 1
The statement pushed is $guard#63%0 == ($cond#60%0 && $guard#60%0)
Original statement: $guard#63%0 == ($cond#60%0 && $guard#60%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#64%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Original statement: smain.OUTP#64%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
The statement pushed is smain.stato#phi64%0 == ($guard#63%0 ? smain.stato#63%0 : smain.stato#61%0)
Original statement: smain.stato#phi64%0 == ($guard#63%0 ? smain.stato#63%0 : smain.stato#61%0)
The statement pushed is $guard#64%0 == ($cond#62%0 && $guard#61%0 || $guard#63%0)
Original statement: $guard#64%0 == ($cond#62%0 && $guard#61%0 || $guard#63%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#65%0 == FALSE
Original statement: smain.OVERFLW#65%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#66%0 == TRUE
Original statement: $cond#66%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#67%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
Original statement: $cond#67%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
The statement pushed is $guard#67%0 == ($cond#52%0 && $guard#52%0)
Original statement: $guard#67%0 == ($cond#52%0 && $guard#52%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#68%0 == 4
Original statement: smain.stato#68%0 == 4
The statement pushed is $guard#68%0 == (!$cond#67%0 && $guard#67%0)
Original statement: $guard#68%0 == (!$cond#67%0 && $guard#67%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#69%0 == TRUE
Original statement: $cond#69%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#70%0 == 1
Original statement: smain.stato#70%0 == 1
The statement pushed is $guard#70%0 == ($cond#67%0 && $guard#67%0)
Original statement: $guard#70%0 == ($cond#67%0 && $guard#67%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#71%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Original statement: smain.OUTP#71%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
The statement pushed is smain.stato#phi71%0 == ($guard#70%0 ? smain.stato#70%0 : smain.stato#68%0)
Original statement: smain.stato#phi71%0 == ($guard#70%0 ? smain.stato#70%0 : smain.stato#68%0)
The statement pushed is $guard#71%0 == ($cond#69%0 && $guard#68%0 || $guard#70%0)
Original statement: $guard#71%0 == ($cond#69%0 && $guard#68%0 || $guard#70%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#72%0 == TRUE
Original statement: smain.OVERFLW#72%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#73%0 == TRUE
Original statement: $cond#73%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#74%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
Original statement: $cond#74%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
The statement pushed is $guard#74%0 == ($cond#53%0 && $guard#53%0)
Original statement: $guard#74%0 == ($cond#53%0 && $guard#53%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#75%0 == 5
Original statement: smain.stato#75%0 == 5
The statement pushed is $guard#75%0 == (!$cond#74%0 && $guard#74%0)
Original statement: $guard#75%0 == (!$cond#74%0 && $guard#74%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#76%0 == TRUE
Original statement: $cond#76%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#77%0 == 2
Original statement: smain.stato#77%0 == 2
The statement pushed is $guard#77%0 == ($cond#74%0 && $guard#74%0)
Original statement: $guard#77%0 == ($cond#74%0 && $guard#74%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#78%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Original statement: smain.OUTP#78%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
The statement pushed is smain.stato#phi78%0 == ($guard#77%0 ? smain.stato#77%0 : smain.stato#75%0)
Original statement: smain.stato#phi78%0 == ($guard#77%0 ? smain.stato#77%0 : smain.stato#75%0)
The statement pushed is $guard#78%0 == ($cond#76%0 && $guard#75%0 || $guard#77%0)
Original statement: $guard#78%0 == ($cond#76%0 && $guard#75%0 || $guard#77%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#79%0 == FALSE
Original statement: smain.OVERFLW#79%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#80%0 == TRUE
Original statement: $cond#80%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#81%0 == (((signed int)LINE1#42%0 | (signed int)LINE2#44%0) == 0)
Original statement: $cond#81%0 == (((signed int)LINE1#42%0 | (signed int)LINE2#44%0) == 0)
The statement pushed is $guard#81%0 == ($cond#54%0 && $guard#54%0)
Original statement: $guard#81%0 == ($cond#54%0 && $guard#54%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#82%0 == 5
Original statement: smain.stato#82%0 == 5
The statement pushed is $guard#82%0 == (!$cond#81%0 && $guard#81%0)
Original statement: $guard#82%0 == (!$cond#81%0 && $guard#81%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#83%0 == TRUE
Original statement: $cond#83%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#84%0 == 2
Original statement: smain.stato#84%0 == 2
The statement pushed is $guard#84%0 == ($cond#81%0 && $guard#81%0)
Original statement: $guard#84%0 == ($cond#81%0 && $guard#81%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#85%0 == !(~((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Original statement: smain.OUTP#85%0 == !(~((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
The statement pushed is smain.stato#phi85%0 == ($guard#84%0 ? smain.stato#84%0 : smain.stato#82%0)
Original statement: smain.stato#phi85%0 == ($guard#84%0 ? smain.stato#84%0 : smain.stato#82%0)
The statement pushed is $guard#85%0 == ($cond#83%0 && $guard#82%0 || $guard#84%0)
Original statement: $guard#85%0 == ($cond#83%0 && $guard#82%0 || $guard#84%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#86%0 == FALSE
Original statement: smain.OVERFLW#86%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#87%0 == TRUE
Original statement: $cond#87%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#88%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
Original statement: $cond#88%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
The statement pushed is $guard#88%0 == ($cond#55%0 && $guard#55%0)
Original statement: $guard#88%0 == ($cond#55%0 && $guard#55%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#89%0 == 7
Original statement: smain.stato#89%0 == 7
The statement pushed is $guard#89%0 == (!$cond#88%0 && $guard#88%0)
Original statement: $guard#89%0 == (!$cond#88%0 && $guard#88%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#90%0 == TRUE
Original statement: $cond#90%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#91%0 == 6
Original statement: smain.stato#91%0 == 6
The statement pushed is $guard#91%0 == ($cond#88%0 && $guard#88%0)
Original statement: $guard#91%0 == ($cond#88%0 && $guard#88%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#92%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Original statement: smain.OUTP#92%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
The statement pushed is smain.stato#phi92%0 == ($guard#91%0 ? smain.stato#91%0 : smain.stato#89%0)
Original statement: smain.stato#phi92%0 == ($guard#91%0 ? smain.stato#91%0 : smain.stato#89%0)
The statement pushed is $guard#92%0 == ($cond#90%0 && $guard#89%0 || $guard#91%0)
Original statement: $guard#92%0 == ($cond#90%0 && $guard#89%0 || $guard#91%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#93%0 == FALSE
Original statement: smain.OVERFLW#93%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#94%0 == TRUE
Original statement: $cond#94%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#95%0 == (((signed int)LINE1#42%0 | (signed int)LINE2#44%0) == 0)
Original statement: $cond#95%0 == (((signed int)LINE1#42%0 | (signed int)LINE2#44%0) == 0)
The statement pushed is $guard#95%0 == ($cond#56%0 && $guard#56%0)
Original statement: $guard#95%0 == ($cond#56%0 && $guard#56%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#96%0 == 7
Original statement: smain.stato#96%0 == 7
The statement pushed is $guard#96%0 == (!$cond#95%0 && $guard#95%0)
Original statement: $guard#96%0 == (!$cond#95%0 && $guard#95%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#97%0 == TRUE
Original statement: $cond#97%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#98%0 == 6
Original statement: smain.stato#98%0 == 6
The statement pushed is $guard#98%0 == ($cond#95%0 && $guard#95%0)
Original statement: $guard#98%0 == ($cond#95%0 && $guard#95%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#99%0 == !(~((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Original statement: smain.OUTP#99%0 == !(~((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
The statement pushed is smain.stato#phi99%0 == ($guard#98%0 ? smain.stato#98%0 : smain.stato#96%0)
Original statement: smain.stato#phi99%0 == ($guard#98%0 ? smain.stato#98%0 : smain.stato#96%0)
The statement pushed is $guard#99%0 == ($cond#97%0 && $guard#96%0 || $guard#98%0)
Original statement: $guard#99%0 == ($cond#97%0 && $guard#96%0 || $guard#98%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#100%0 == FALSE
Original statement: smain.OVERFLW#100%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#101%0 == TRUE
Original statement: $cond#101%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#102%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
Original statement: $cond#102%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
The statement pushed is $guard#102%0 == ($cond#57%0 && $guard#57%0)
Original statement: $guard#102%0 == ($cond#57%0 && $guard#57%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#103%0 == 3
Original statement: smain.stato#103%0 == 3
The statement pushed is $guard#103%0 == (!$cond#102%0 && $guard#102%0)
Original statement: $guard#103%0 == (!$cond#102%0 && $guard#102%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#104%0 == TRUE
Original statement: $cond#104%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#105%0 == 0
Original statement: smain.stato#105%0 == 0
The statement pushed is $guard#105%0 == ($cond#102%0 && $guard#102%0)
Original statement: $guard#105%0 == ($cond#102%0 && $guard#102%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#106%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Original statement: smain.OUTP#106%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
The statement pushed is smain.stato#phi106%0 == ($guard#105%0 ? smain.stato#105%0 : smain.stato#103%0)
Original statement: smain.stato#phi106%0 == ($guard#105%0 ? smain.stato#105%0 : smain.stato#103%0)
The statement pushed is $guard#106%0 == ($cond#104%0 && $guard#103%0 || $guard#105%0)
Original statement: $guard#106%0 == ($cond#104%0 && $guard#103%0 || $guard#105%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#107%0 == FALSE
Original statement: smain.OVERFLW#107%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#108%0 == TRUE
Original statement: $cond#108%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#109%0 == (((signed int)LINE1#42%0 | (signed int)LINE2#44%0) == 0)
Original statement: $cond#109%0 == (((signed int)LINE1#42%0 | (signed int)LINE2#44%0) == 0)
The statement pushed is $guard#109%0 == ($cond#58%0 && $guard#58%0)
Original statement: $guard#109%0 == ($cond#58%0 && $guard#58%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#110%0 == 3
Original statement: smain.stato#110%0 == 3
The statement pushed is $guard#110%0 == (!$cond#109%0 && $guard#109%0)
Original statement: $guard#110%0 == (!$cond#109%0 && $guard#109%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#111%0 == TRUE
Original statement: $cond#111%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#112%0 == 0
Original statement: smain.stato#112%0 == 0
The statement pushed is $guard#112%0 == ($cond#109%0 && $guard#109%0)
Original statement: $guard#112%0 == ($cond#109%0 && $guard#109%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#113%0 == !(~((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Original statement: smain.OUTP#113%0 == !(~((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
The statement pushed is smain.stato#phi113%0 == ($guard#112%0 ? smain.stato#112%0 : smain.stato#110%0)
Original statement: smain.stato#phi113%0 == ($guard#112%0 ? smain.stato#112%0 : smain.stato#110%0)
The statement pushed is $guard#113%0 == ($cond#111%0 && $guard#110%0 || $guard#112%0)
Original statement: $guard#113%0 == ($cond#111%0 && $guard#110%0 || $guard#112%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#114%0 == FALSE
Original statement: smain.OVERFLW#114%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#115%0 == smain.OUTP#phi115%0
Original statement: OUTP#115%0 == smain.OUTP#phi115%0
The statement pushed is smain.OUTP#phi115%0 == ($guard#113%0 ? smain.OUTP#113%0 : ($cond#108%0 && $guard#106%0 ? smain.OUTP#106%0 : ($cond#101%0 && $guard#99%0 ? smain.OUTP#99%0 : ($cond#94%0 && $guard#92%0 ? smain.OUTP#92%0 : ($cond#87%0 && $guard#85%0 ? smain.OUTP#85%0 : ($cond#80%0 && $guard#78%0 ? smain.OUTP#78%0 : ($cond#73%0 && $guard#71%0 ? smain.OUTP#71%0 : ($cond#66%0 && $guard#64%0 ? smain.OUTP#64%0 : smain.OUTP#phi39%0))))))))
Original statement: smain.OUTP#phi115%0 == ($guard#113%0 ? smain.OUTP#113%0 : ($cond#108%0 && $guard#106%0 ? smain.OUTP#106%0 : ($cond#101%0 && $guard#99%0 ? smain.OUTP#99%0 : ($cond#94%0 && $guard#92%0 ? smain.OUTP#92%0 : ($cond#87%0 && $guard#85%0 ? smain.OUTP#85%0 : ($cond#80%0 && $guard#78%0 ? smain.OUTP#78%0 : ($cond#73%0 && $guard#71%0 ? smain.OUTP#71%0 : ($cond#66%0 && $guard#64%0 ? smain.OUTP#64%0 : smain.OUTP#phi39%0))))))))
The statement pushed is smain.OVERFLW#phi115%0 == ($guard#113%0 ? smain.OVERFLW#114%0 : ($cond#108%0 && $guard#106%0 ? smain.OVERFLW#107%0 : ($cond#101%0 && $guard#99%0 ? smain.OVERFLW#100%0 : ($cond#94%0 && $guard#92%0 ? smain.OVERFLW#93%0 : ($cond#87%0 && $guard#85%0 ? smain.OVERFLW#86%0 : ($cond#80%0 && $guard#78%0 ? smain.OVERFLW#79%0 : ($cond#73%0 && $guard#71%0 ? smain.OVERFLW#72%0 : ($cond#66%0 && $guard#64%0 ? smain.OVERFLW#65%0 : smain.OVERFLW#phi39%0))))))))
Original statement: smain.OVERFLW#phi115%0 == ($guard#113%0 ? smain.OVERFLW#114%0 : ($cond#108%0 && $guard#106%0 ? smain.OVERFLW#107%0 : ($cond#101%0 && $guard#99%0 ? smain.OVERFLW#100%0 : ($cond#94%0 && $guard#92%0 ? smain.OVERFLW#93%0 : ($cond#87%0 && $guard#85%0 ? smain.OVERFLW#86%0 : ($cond#80%0 && $guard#78%0 ? smain.OVERFLW#79%0 : ($cond#73%0 && $guard#71%0 ? smain.OVERFLW#72%0 : ($cond#66%0 && $guard#64%0 ? smain.OVERFLW#65%0 : smain.OVERFLW#phi39%0))))))))
The statement pushed is smain.stato#phi115%0 == ($guard#113%0 ? smain.stato#phi113%0 : ($cond#108%0 && $guard#106%0 ? smain.stato#phi106%0 : ($cond#101%0 && $guard#99%0 ? smain.stato#phi99%0 : ($cond#94%0 && $guard#92%0 ? smain.stato#phi92%0 : ($cond#87%0 && $guard#85%0 ? smain.stato#phi85%0 : ($cond#80%0 && $guard#78%0 ? smain.stato#phi78%0 : ($cond#73%0 && $guard#71%0 ? smain.stato#phi71%0 : ($cond#66%0 && $guard#64%0 ? smain.stato#phi64%0 : smain.stato#phi39%0))))))))
Original statement: smain.stato#phi115%0 == ($guard#113%0 ? smain.stato#phi113%0 : ($cond#108%0 && $guard#106%0 ? smain.stato#phi106%0 : ($cond#101%0 && $guard#99%0 ? smain.stato#phi99%0 : ($cond#94%0 && $guard#92%0 ? smain.stato#phi92%0 : ($cond#87%0 && $guard#85%0 ? smain.stato#phi85%0 : ($cond#80%0 && $guard#78%0 ? smain.stato#phi78%0 : ($cond#73%0 && $guard#71%0 ? smain.stato#phi71%0 : ($cond#66%0 && $guard#64%0 ? smain.stato#phi64%0 : smain.stato#phi39%0))))))))
The statement pushed is $guard#115%0 == ($cond#101%0 && $guard#99%0 || $cond#108%0 && $guard#106%0 || $cond#59%0 && $guard#59%0 || $cond#66%0 && $guard#64%0 || $cond#73%0 && $guard#71%0 || $cond#80%0 && $guard#78%0 || $cond#87%0 && $guard#85%0 || $cond#94%0 && $guard#92%0 || $guard#113%0)
Original statement: $guard#115%0 == ($cond#101%0 && $guard#99%0 || $cond#108%0 && $guard#106%0 || $cond#59%0 && $guard#59%0 || $cond#66%0 && $guard#64%0 || $cond#73%0 && $guard#71%0 || $cond#80%0 && $guard#78%0 || $cond#87%0 && $guard#85%0 || $cond#94%0 && $guard#92%0 || $guard#113%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OVERFLW#116%0 == smain.OVERFLW#phi115%0
Original statement: OVERFLW#116%0 == smain.OVERFLW#phi115%0
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#123%0 == !((signed int)smain.OVERFLW#phi115%0 == 1)
Original statement: $cond#123%0 == !((signed int)smain.OVERFLW#phi115%0 == 1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $guard#124%0 == (!$cond#123%0 && $guard#115%0)
Original statement: $guard#124%0 == (!$cond#123%0 && $guard#115%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE1#126%0 == LINE1#25
Original statement: LINE1#126%0 == LINE1#25
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE2#128%0 == LINE2#27
Original statement: LINE2#128%0 == LINE2#27
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#130%0 == &OUTP
Original statement: OUTP#130%0 == &OUTP
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OVERFLW#132%0 == &OVERFLW
Original statement: OVERFLW#132%0 == &OVERFLW
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is clock#134%0 == clock#33
Original statement: clock#134%0 == clock#33
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#135%0 == ((signed int)smain.stato#phi115%0 == 0)
Original statement: $cond#135%0 == ((signed int)smain.stato#phi115%0 == 0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#136%0 == ((signed int)smain.stato#phi115%0 == 3)
Original statement: $cond#136%0 == ((signed int)smain.stato#phi115%0 == 3)
The statement pushed is $guard#136%0 == (!$cond#135%0 && $guard#124%0)
Original statement: $guard#136%0 == (!$cond#135%0 && $guard#124%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#137%0 == ((signed int)smain.stato#phi115%0 == 1)
Original statement: $cond#137%0 == ((signed int)smain.stato#phi115%0 == 1)
The statement pushed is $guard#137%0 == (!$cond#136%0 && $guard#136%0)
Original statement: $guard#137%0 == (!$cond#136%0 && $guard#136%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#138%0 == ((signed int)smain.stato#phi115%0 == 4)
Original statement: $cond#138%0 == ((signed int)smain.stato#phi115%0 == 4)
The statement pushed is $guard#138%0 == (!$cond#137%0 && $guard#137%0)
Original statement: $guard#138%0 == (!$cond#137%0 && $guard#137%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#139%0 == ((signed int)smain.stato#phi115%0 == 2)
Original statement: $cond#139%0 == ((signed int)smain.stato#phi115%0 == 2)
The statement pushed is $guard#139%0 == (!$cond#138%0 && $guard#138%0)
Original statement: $guard#139%0 == (!$cond#138%0 && $guard#138%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#140%0 == ((signed int)smain.stato#phi115%0 == 5)
Original statement: $cond#140%0 == ((signed int)smain.stato#phi115%0 == 5)
The statement pushed is $guard#140%0 == (!$cond#139%0 && $guard#139%0)
Original statement: $guard#140%0 == (!$cond#139%0 && $guard#139%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#141%0 == ((signed int)smain.stato#phi115%0 == 6)
Original statement: $cond#141%0 == ((signed int)smain.stato#phi115%0 == 6)
The statement pushed is $guard#141%0 == (!$cond#140%0 && $guard#140%0)
Original statement: $guard#141%0 == (!$cond#140%0 && $guard#140%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#142%0 == ((signed int)smain.stato#phi115%0 == 7)
Original statement: $cond#142%0 == ((signed int)smain.stato#phi115%0 == 7)
The statement pushed is $guard#142%0 == (!$cond#141%0 && $guard#141%0)
Original statement: $guard#142%0 == (!$cond#141%0 && $guard#141%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#143%0 == TRUE
Original statement: $cond#143%0 == TRUE
The statement pushed is $guard#143%0 == (!$cond#142%0 && $guard#142%0)
Original statement: $guard#143%0 == (!$cond#142%0 && $guard#142%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#144%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
Original statement: $cond#144%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
The statement pushed is $guard#144%0 == ($cond#135%0 && $guard#124%0)
Original statement: $guard#144%0 == ($cond#135%0 && $guard#124%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#145%0 == 4
Original statement: smain.stato#145%0 == 4
The statement pushed is $guard#145%0 == (!$cond#144%0 && $guard#144%0)
Original statement: $guard#145%0 == (!$cond#144%0 && $guard#144%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#146%0 == TRUE
Original statement: $cond#146%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#147%0 == 1
Original statement: smain.stato#147%0 == 1
The statement pushed is $guard#147%0 == ($cond#144%0 && $guard#144%0)
Original statement: $guard#147%0 == ($cond#144%0 && $guard#144%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#148%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Original statement: smain.OUTP#148%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
The statement pushed is smain.stato#phi148%0 == ($guard#147%0 ? smain.stato#147%0 : smain.stato#145%0)
Original statement: smain.stato#phi148%0 == ($guard#147%0 ? smain.stato#147%0 : smain.stato#145%0)
The statement pushed is $guard#148%0 == ($cond#146%0 && $guard#145%0 || $guard#147%0)
Original statement: $guard#148%0 == ($cond#146%0 && $guard#145%0 || $guard#147%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#149%0 == FALSE
Original statement: smain.OVERFLW#149%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#150%0 == TRUE
Original statement: $cond#150%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#151%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
Original statement: $cond#151%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
The statement pushed is $guard#151%0 == ($cond#136%0 && $guard#136%0)
Original statement: $guard#151%0 == ($cond#136%0 && $guard#136%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#152%0 == 4
Original statement: smain.stato#152%0 == 4
The statement pushed is $guard#152%0 == (!$cond#151%0 && $guard#151%0)
Original statement: $guard#152%0 == (!$cond#151%0 && $guard#151%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#153%0 == TRUE
Original statement: $cond#153%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#154%0 == 1
Original statement: smain.stato#154%0 == 1
The statement pushed is $guard#154%0 == ($cond#151%0 && $guard#151%0)
Original statement: $guard#154%0 == ($cond#151%0 && $guard#151%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#155%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Original statement: smain.OUTP#155%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
The statement pushed is smain.stato#phi155%0 == ($guard#154%0 ? smain.stato#154%0 : smain.stato#152%0)
Original statement: smain.stato#phi155%0 == ($guard#154%0 ? smain.stato#154%0 : smain.stato#152%0)
The statement pushed is $guard#155%0 == ($cond#153%0 && $guard#152%0 || $guard#154%0)
Original statement: $guard#155%0 == ($cond#153%0 && $guard#152%0 || $guard#154%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#156%0 == TRUE
Original statement: smain.OVERFLW#156%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#157%0 == TRUE
Original statement: $cond#157%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#158%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
Original statement: $cond#158%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
The statement pushed is $guard#158%0 == ($cond#137%0 && $guard#137%0)
Original statement: $guard#158%0 == ($cond#137%0 && $guard#137%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#159%0 == 5
Original statement: smain.stato#159%0 == 5
The statement pushed is $guard#159%0 == (!$cond#158%0 && $guard#158%0)
Original statement: $guard#159%0 == (!$cond#158%0 && $guard#158%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#160%0 == TRUE
Original statement: $cond#160%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#161%0 == 2
Original statement: smain.stato#161%0 == 2
The statement pushed is $guard#161%0 == ($cond#158%0 && $guard#158%0)
Original statement: $guard#161%0 == ($cond#158%0 && $guard#158%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#162%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Original statement: smain.OUTP#162%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
The statement pushed is smain.stato#phi162%0 == ($guard#161%0 ? smain.stato#161%0 : smain.stato#159%0)
Original statement: smain.stato#phi162%0 == ($guard#161%0 ? smain.stato#161%0 : smain.stato#159%0)
The statement pushed is $guard#162%0 == ($cond#160%0 && $guard#159%0 || $guard#161%0)
Original statement: $guard#162%0 == ($cond#160%0 && $guard#159%0 || $guard#161%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#163%0 == FALSE
Original statement: smain.OVERFLW#163%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#164%0 == TRUE
Original statement: $cond#164%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#165%0 == (((signed int)LINE1#126%0 | (signed int)LINE2#128%0) == 0)
Original statement: $cond#165%0 == (((signed int)LINE1#126%0 | (signed int)LINE2#128%0) == 0)
The statement pushed is $guard#165%0 == ($cond#138%0 && $guard#138%0)
Original statement: $guard#165%0 == ($cond#138%0 && $guard#138%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#166%0 == 5
Original statement: smain.stato#166%0 == 5
The statement pushed is $guard#166%0 == (!$cond#165%0 && $guard#165%0)
Original statement: $guard#166%0 == (!$cond#165%0 && $guard#165%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#167%0 == TRUE
Original statement: $cond#167%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#168%0 == 2
Original statement: smain.stato#168%0 == 2
The statement pushed is $guard#168%0 == ($cond#165%0 && $guard#165%0)
Original statement: $guard#168%0 == ($cond#165%0 && $guard#165%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#169%0 == !(~((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Original statement: smain.OUTP#169%0 == !(~((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
The statement pushed is smain.stato#phi169%0 == ($guard#168%0 ? smain.stato#168%0 : smain.stato#166%0)
Original statement: smain.stato#phi169%0 == ($guard#168%0 ? smain.stato#168%0 : smain.stato#166%0)
The statement pushed is $guard#169%0 == ($cond#167%0 && $guard#166%0 || $guard#168%0)
Original statement: $guard#169%0 == ($cond#167%0 && $guard#166%0 || $guard#168%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#170%0 == FALSE
Original statement: smain.OVERFLW#170%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#171%0 == TRUE
Original statement: $cond#171%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#172%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
Original statement: $cond#172%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
The statement pushed is $guard#172%0 == ($cond#139%0 && $guard#139%0)
Original statement: $guard#172%0 == ($cond#139%0 && $guard#139%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#173%0 == 7
Original statement: smain.stato#173%0 == 7
The statement pushed is $guard#173%0 == (!$cond#172%0 && $guard#172%0)
Original statement: $guard#173%0 == (!$cond#172%0 && $guard#172%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#174%0 == TRUE
Original statement: $cond#174%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#175%0 == 6
Original statement: smain.stato#175%0 == 6
The statement pushed is $guard#175%0 == ($cond#172%0 && $guard#172%0)
Original statement: $guard#175%0 == ($cond#172%0 && $guard#172%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#176%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Original statement: smain.OUTP#176%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
The statement pushed is smain.stato#phi176%0 == ($guard#175%0 ? smain.stato#175%0 : smain.stato#173%0)
Original statement: smain.stato#phi176%0 == ($guard#175%0 ? smain.stato#175%0 : smain.stato#173%0)
The statement pushed is $guard#176%0 == ($cond#174%0 && $guard#173%0 || $guard#175%0)
Original statement: $guard#176%0 == ($cond#174%0 && $guard#173%0 || $guard#175%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#177%0 == FALSE
Original statement: smain.OVERFLW#177%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#178%0 == TRUE
Original statement: $cond#178%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#179%0 == (((signed int)LINE1#126%0 | (signed int)LINE2#128%0) == 0)
Original statement: $cond#179%0 == (((signed int)LINE1#126%0 | (signed int)LINE2#128%0) == 0)
The statement pushed is $guard#179%0 == ($cond#140%0 && $guard#140%0)
Original statement: $guard#179%0 == ($cond#140%0 && $guard#140%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#180%0 == 7
Original statement: smain.stato#180%0 == 7
The statement pushed is $guard#180%0 == (!$cond#179%0 && $guard#179%0)
Original statement: $guard#180%0 == (!$cond#179%0 && $guard#179%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#181%0 == TRUE
Original statement: $cond#181%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#182%0 == 6
Original statement: smain.stato#182%0 == 6
The statement pushed is $guard#182%0 == ($cond#179%0 && $guard#179%0)
Original statement: $guard#182%0 == ($cond#179%0 && $guard#179%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#183%0 == !(~((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Original statement: smain.OUTP#183%0 == !(~((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
The statement pushed is smain.stato#phi183%0 == ($guard#182%0 ? smain.stato#182%0 : smain.stato#180%0)
Original statement: smain.stato#phi183%0 == ($guard#182%0 ? smain.stato#182%0 : smain.stato#180%0)
The statement pushed is $guard#183%0 == ($cond#181%0 && $guard#180%0 || $guard#182%0)
Original statement: $guard#183%0 == ($cond#181%0 && $guard#180%0 || $guard#182%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#184%0 == FALSE
Original statement: smain.OVERFLW#184%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#185%0 == TRUE
Original statement: $cond#185%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#186%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
Original statement: $cond#186%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
The statement pushed is $guard#186%0 == ($cond#141%0 && $guard#141%0)
Original statement: $guard#186%0 == ($cond#141%0 && $guard#141%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#187%0 == 3
Original statement: smain.stato#187%0 == 3
The statement pushed is $guard#187%0 == (!$cond#186%0 && $guard#186%0)
Original statement: $guard#187%0 == (!$cond#186%0 && $guard#186%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#188%0 == TRUE
Original statement: $cond#188%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#189%0 == 0
Original statement: smain.stato#189%0 == 0
The statement pushed is $guard#189%0 == ($cond#186%0 && $guard#186%0)
Original statement: $guard#189%0 == ($cond#186%0 && $guard#186%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#190%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Original statement: smain.OUTP#190%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
The statement pushed is smain.stato#phi190%0 == ($guard#189%0 ? smain.stato#189%0 : smain.stato#187%0)
Original statement: smain.stato#phi190%0 == ($guard#189%0 ? smain.stato#189%0 : smain.stato#187%0)
The statement pushed is $guard#190%0 == ($cond#188%0 && $guard#187%0 || $guard#189%0)
Original statement: $guard#190%0 == ($cond#188%0 && $guard#187%0 || $guard#189%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#191%0 == FALSE
Original statement: smain.OVERFLW#191%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#192%0 == TRUE
Original statement: $cond#192%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#193%0 == (((signed int)LINE1#126%0 | (signed int)LINE2#128%0) == 0)
Original statement: $cond#193%0 == (((signed int)LINE1#126%0 | (signed int)LINE2#128%0) == 0)
The statement pushed is $guard#193%0 == ($cond#142%0 && $guard#142%0)
Original statement: $guard#193%0 == ($cond#142%0 && $guard#142%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#194%0 == 3
Original statement: smain.stato#194%0 == 3
The statement pushed is $guard#194%0 == (!$cond#193%0 && $guard#193%0)
Original statement: $guard#194%0 == (!$cond#193%0 && $guard#193%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#195%0 == TRUE
Original statement: $cond#195%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#196%0 == 0
Original statement: smain.stato#196%0 == 0
The statement pushed is $guard#196%0 == ($cond#193%0 && $guard#193%0)
Original statement: $guard#196%0 == ($cond#193%0 && $guard#193%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#197%0 == !(~((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Original statement: smain.OUTP#197%0 == !(~((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
The statement pushed is smain.stato#phi197%0 == ($guard#196%0 ? smain.stato#196%0 : smain.stato#194%0)
Original statement: smain.stato#phi197%0 == ($guard#196%0 ? smain.stato#196%0 : smain.stato#194%0)
The statement pushed is $guard#197%0 == ($cond#195%0 && $guard#194%0 || $guard#196%0)
Original statement: $guard#197%0 == ($cond#195%0 && $guard#194%0 || $guard#196%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#198%0 == FALSE
Original statement: smain.OVERFLW#198%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#199%0 == smain.OUTP#phi199%0
Original statement: OUTP#199%0 == smain.OUTP#phi199%0
The statement pushed is smain.OUTP#phi199%0 == ($guard#197%0 ? smain.OUTP#197%0 : ($cond#192%0 && $guard#190%0 ? smain.OUTP#190%0 : ($cond#185%0 && $guard#183%0 ? smain.OUTP#183%0 : ($cond#178%0 && $guard#176%0 ? smain.OUTP#176%0 : ($cond#171%0 && $guard#169%0 ? smain.OUTP#169%0 : ($cond#164%0 && $guard#162%0 ? smain.OUTP#162%0 : ($cond#157%0 && $guard#155%0 ? smain.OUTP#155%0 : ($cond#150%0 && $guard#148%0 ? smain.OUTP#148%0 : smain.OUTP#phi115%0))))))))
Original statement: smain.OUTP#phi199%0 == ($guard#197%0 ? smain.OUTP#197%0 : ($cond#192%0 && $guard#190%0 ? smain.OUTP#190%0 : ($cond#185%0 && $guard#183%0 ? smain.OUTP#183%0 : ($cond#178%0 && $guard#176%0 ? smain.OUTP#176%0 : ($cond#171%0 && $guard#169%0 ? smain.OUTP#169%0 : ($cond#164%0 && $guard#162%0 ? smain.OUTP#162%0 : ($cond#157%0 && $guard#155%0 ? smain.OUTP#155%0 : ($cond#150%0 && $guard#148%0 ? smain.OUTP#148%0 : smain.OUTP#phi115%0))))))))
The statement pushed is smain.OVERFLW#phi199%0 == ($guard#197%0 ? smain.OVERFLW#198%0 : ($cond#192%0 && $guard#190%0 ? smain.OVERFLW#191%0 : ($cond#185%0 && $guard#183%0 ? smain.OVERFLW#184%0 : ($cond#178%0 && $guard#176%0 ? smain.OVERFLW#177%0 : ($cond#171%0 && $guard#169%0 ? smain.OVERFLW#170%0 : ($cond#164%0 && $guard#162%0 ? smain.OVERFLW#163%0 : ($cond#157%0 && $guard#155%0 ? smain.OVERFLW#156%0 : ($cond#150%0 && $guard#148%0 ? smain.OVERFLW#149%0 : smain.OVERFLW#phi115%0))))))))
Original statement: smain.OVERFLW#phi199%0 == ($guard#197%0 ? smain.OVERFLW#198%0 : ($cond#192%0 && $guard#190%0 ? smain.OVERFLW#191%0 : ($cond#185%0 && $guard#183%0 ? smain.OVERFLW#184%0 : ($cond#178%0 && $guard#176%0 ? smain.OVERFLW#177%0 : ($cond#171%0 && $guard#169%0 ? smain.OVERFLW#170%0 : ($cond#164%0 && $guard#162%0 ? smain.OVERFLW#163%0 : ($cond#157%0 && $guard#155%0 ? smain.OVERFLW#156%0 : ($cond#150%0 && $guard#148%0 ? smain.OVERFLW#149%0 : smain.OVERFLW#phi115%0))))))))
The statement pushed is smain.stato#phi199%0 == ($guard#197%0 ? smain.stato#phi197%0 : ($cond#192%0 && $guard#190%0 ? smain.stato#phi190%0 : ($cond#185%0 && $guard#183%0 ? smain.stato#phi183%0 : ($cond#178%0 && $guard#176%0 ? smain.stato#phi176%0 : ($cond#171%0 && $guard#169%0 ? smain.stato#phi169%0 : ($cond#164%0 && $guard#162%0 ? smain.stato#phi162%0 : ($cond#157%0 && $guard#155%0 ? smain.stato#phi155%0 : ($cond#150%0 && $guard#148%0 ? smain.stato#phi148%0 : smain.stato#phi115%0))))))))
Original statement: smain.stato#phi199%0 == ($guard#197%0 ? smain.stato#phi197%0 : ($cond#192%0 && $guard#190%0 ? smain.stato#phi190%0 : ($cond#185%0 && $guard#183%0 ? smain.stato#phi183%0 : ($cond#178%0 && $guard#176%0 ? smain.stato#phi176%0 : ($cond#171%0 && $guard#169%0 ? smain.stato#phi169%0 : ($cond#164%0 && $guard#162%0 ? smain.stato#phi162%0 : ($cond#157%0 && $guard#155%0 ? smain.stato#phi155%0 : ($cond#150%0 && $guard#148%0 ? smain.stato#phi148%0 : smain.stato#phi115%0))))))))
The statement pushed is $guard#199%0 == ($cond#143%0 && $guard#143%0 || $cond#150%0 && $guard#148%0 || $cond#157%0 && $guard#155%0 || $cond#164%0 && $guard#162%0 || $cond#171%0 && $guard#169%0 || $cond#178%0 && $guard#176%0 || $cond#185%0 && $guard#183%0 || $cond#192%0 && $guard#190%0 || $guard#197%0)
Original statement: $guard#199%0 == ($cond#143%0 && $guard#143%0 || $cond#150%0 && $guard#148%0 || $cond#157%0 && $guard#155%0 || $cond#164%0 && $guard#162%0 || $cond#171%0 && $guard#169%0 || $cond#178%0 && $guard#176%0 || $cond#185%0 && $guard#183%0 || $cond#192%0 && $guard#190%0 || $guard#197%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OVERFLW#200%0 == smain.OVERFLW#phi199%0
Original statement: OVERFLW#200%0 == smain.OVERFLW#phi199%0
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE1#209%0 == LINE1#25
Original statement: LINE1#209%0 == LINE1#25
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE2#211%0 == LINE2#27
Original statement: LINE2#211%0 == LINE2#27
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#213%0 == &OUTP
Original statement: OUTP#213%0 == &OUTP
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OVERFLW#215%0 == &OVERFLW
Original statement: OVERFLW#215%0 == &OVERFLW
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is clock#217%0 == clock#33
Original statement: clock#217%0 == clock#33
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#218%0 == ((signed int)smain.stato#phi199%0 == 0)
Original statement: $cond#218%0 == ((signed int)smain.stato#phi199%0 == 0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#219%0 == ((signed int)smain.stato#phi199%0 == 3)
Original statement: $cond#219%0 == ((signed int)smain.stato#phi199%0 == 3)
The statement pushed is $guard#219%0 == (!$cond#218%0 && $guard#199%0)
Original statement: $guard#219%0 == (!$cond#218%0 && $guard#199%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#220%0 == ((signed int)smain.stato#phi199%0 == 1)
Original statement: $cond#220%0 == ((signed int)smain.stato#phi199%0 == 1)
The statement pushed is $guard#220%0 == (!$cond#219%0 && $guard#219%0)
Original statement: $guard#220%0 == (!$cond#219%0 && $guard#219%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#221%0 == ((signed int)smain.stato#phi199%0 == 4)
Original statement: $cond#221%0 == ((signed int)smain.stato#phi199%0 == 4)
The statement pushed is $guard#221%0 == (!$cond#220%0 && $guard#220%0)
Original statement: $guard#221%0 == (!$cond#220%0 && $guard#220%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#222%0 == ((signed int)smain.stato#phi199%0 == 2)
Original statement: $cond#222%0 == ((signed int)smain.stato#phi199%0 == 2)
The statement pushed is $guard#222%0 == (!$cond#221%0 && $guard#221%0)
Original statement: $guard#222%0 == (!$cond#221%0 && $guard#221%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#223%0 == ((signed int)smain.stato#phi199%0 == 5)
Original statement: $cond#223%0 == ((signed int)smain.stato#phi199%0 == 5)
The statement pushed is $guard#223%0 == (!$cond#222%0 && $guard#222%0)
Original statement: $guard#223%0 == (!$cond#222%0 && $guard#222%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#224%0 == ((signed int)smain.stato#phi199%0 == 6)
Original statement: $cond#224%0 == ((signed int)smain.stato#phi199%0 == 6)
The statement pushed is $guard#224%0 == (!$cond#223%0 && $guard#223%0)
Original statement: $guard#224%0 == (!$cond#223%0 && $guard#223%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#225%0 == ((signed int)smain.stato#phi199%0 == 7)
Original statement: $cond#225%0 == ((signed int)smain.stato#phi199%0 == 7)
The statement pushed is $guard#225%0 == (!$cond#224%0 && $guard#224%0)
Original statement: $guard#225%0 == (!$cond#224%0 && $guard#224%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#226%0 == TRUE
Original statement: $cond#226%0 == TRUE
The statement pushed is $guard#226%0 == (!$cond#225%0 && $guard#225%0)
Original statement: $guard#226%0 == (!$cond#225%0 && $guard#225%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#227%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
Original statement: $cond#227%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
The statement pushed is $guard#227%0 == ($cond#218%0 && $guard#199%0)
Original statement: $guard#227%0 == ($cond#218%0 && $guard#199%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#228%0 == 4
Original statement: smain.stato#228%0 == 4
The statement pushed is $guard#228%0 == (!$cond#227%0 && $guard#227%0)
Original statement: $guard#228%0 == (!$cond#227%0 && $guard#227%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#229%0 == TRUE
Original statement: $cond#229%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#230%0 == 1
Original statement: smain.stato#230%0 == 1
The statement pushed is $guard#230%0 == ($cond#227%0 && $guard#227%0)
Original statement: $guard#230%0 == ($cond#227%0 && $guard#227%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#231%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Original statement: smain.OUTP#231%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
The statement pushed is smain.stato#phi231%0 == ($guard#230%0 ? smain.stato#230%0 : smain.stato#228%0)
Original statement: smain.stato#phi231%0 == ($guard#230%0 ? smain.stato#230%0 : smain.stato#228%0)
The statement pushed is $guard#231%0 == ($cond#229%0 && $guard#228%0 || $guard#230%0)
Original statement: $guard#231%0 == ($cond#229%0 && $guard#228%0 || $guard#230%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#232%0 == FALSE
Original statement: smain.OVERFLW#232%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#233%0 == TRUE
Original statement: $cond#233%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#234%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
Original statement: $cond#234%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
The statement pushed is $guard#234%0 == ($cond#219%0 && $guard#219%0)
Original statement: $guard#234%0 == ($cond#219%0 && $guard#219%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#235%0 == 4
Original statement: smain.stato#235%0 == 4
The statement pushed is $guard#235%0 == (!$cond#234%0 && $guard#234%0)
Original statement: $guard#235%0 == (!$cond#234%0 && $guard#234%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#236%0 == TRUE
Original statement: $cond#236%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#237%0 == 1
Original statement: smain.stato#237%0 == 1
The statement pushed is $guard#237%0 == ($cond#234%0 && $guard#234%0)
Original statement: $guard#237%0 == ($cond#234%0 && $guard#234%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#238%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Original statement: smain.OUTP#238%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
The statement pushed is smain.stato#phi238%0 == ($guard#237%0 ? smain.stato#237%0 : smain.stato#235%0)
Original statement: smain.stato#phi238%0 == ($guard#237%0 ? smain.stato#237%0 : smain.stato#235%0)
The statement pushed is $guard#238%0 == ($cond#236%0 && $guard#235%0 || $guard#237%0)
Original statement: $guard#238%0 == ($cond#236%0 && $guard#235%0 || $guard#237%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#239%0 == TRUE
Original statement: smain.OVERFLW#239%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#240%0 == TRUE
Original statement: $cond#240%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#241%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
Original statement: $cond#241%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
The statement pushed is $guard#241%0 == ($cond#220%0 && $guard#220%0)
Original statement: $guard#241%0 == ($cond#220%0 && $guard#220%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#242%0 == 5
Original statement: smain.stato#242%0 == 5
The statement pushed is $guard#242%0 == (!$cond#241%0 && $guard#241%0)
Original statement: $guard#242%0 == (!$cond#241%0 && $guard#241%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#243%0 == TRUE
Original statement: $cond#243%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#244%0 == 2
Original statement: smain.stato#244%0 == 2
The statement pushed is $guard#244%0 == ($cond#241%0 && $guard#241%0)
Original statement: $guard#244%0 == ($cond#241%0 && $guard#241%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#245%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Original statement: smain.OUTP#245%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
The statement pushed is smain.stato#phi245%0 == ($guard#244%0 ? smain.stato#244%0 : smain.stato#242%0)
Original statement: smain.stato#phi245%0 == ($guard#244%0 ? smain.stato#244%0 : smain.stato#242%0)
The statement pushed is $guard#245%0 == ($cond#243%0 && $guard#242%0 || $guard#244%0)
Original statement: $guard#245%0 == ($cond#243%0 && $guard#242%0 || $guard#244%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#246%0 == FALSE
Original statement: smain.OVERFLW#246%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#247%0 == TRUE
Original statement: $cond#247%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#248%0 == (((signed int)LINE1#209%0 | (signed int)LINE2#211%0) == 0)
Original statement: $cond#248%0 == (((signed int)LINE1#209%0 | (signed int)LINE2#211%0) == 0)
The statement pushed is $guard#248%0 == ($cond#221%0 && $guard#221%0)
Original statement: $guard#248%0 == ($cond#221%0 && $guard#221%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#249%0 == 5
Original statement: smain.stato#249%0 == 5
The statement pushed is $guard#249%0 == (!$cond#248%0 && $guard#248%0)
Original statement: $guard#249%0 == (!$cond#248%0 && $guard#248%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#250%0 == TRUE
Original statement: $cond#250%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#251%0 == 2
Original statement: smain.stato#251%0 == 2
The statement pushed is $guard#251%0 == ($cond#248%0 && $guard#248%0)
Original statement: $guard#251%0 == ($cond#248%0 && $guard#248%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#252%0 == !(~((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Original statement: smain.OUTP#252%0 == !(~((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
The statement pushed is smain.stato#phi252%0 == ($guard#251%0 ? smain.stato#251%0 : smain.stato#249%0)
Original statement: smain.stato#phi252%0 == ($guard#251%0 ? smain.stato#251%0 : smain.stato#249%0)
The statement pushed is $guard#252%0 == ($cond#250%0 && $guard#249%0 || $guard#251%0)
Original statement: $guard#252%0 == ($cond#250%0 && $guard#249%0 || $guard#251%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#253%0 == FALSE
Original statement: smain.OVERFLW#253%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#254%0 == TRUE
Original statement: $cond#254%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#255%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
Original statement: $cond#255%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
The statement pushed is $guard#255%0 == ($cond#222%0 && $guard#222%0)
Original statement: $guard#255%0 == ($cond#222%0 && $guard#222%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#256%0 == 7
Original statement: smain.stato#256%0 == 7
The statement pushed is $guard#256%0 == (!$cond#255%0 && $guard#255%0)
Original statement: $guard#256%0 == (!$cond#255%0 && $guard#255%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#257%0 == TRUE
Original statement: $cond#257%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#258%0 == 6
Original statement: smain.stato#258%0 == 6
The statement pushed is $guard#258%0 == ($cond#255%0 && $guard#255%0)
Original statement: $guard#258%0 == ($cond#255%0 && $guard#255%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#259%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Original statement: smain.OUTP#259%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
The statement pushed is smain.stato#phi259%0 == ($guard#258%0 ? smain.stato#258%0 : smain.stato#256%0)
Original statement: smain.stato#phi259%0 == ($guard#258%0 ? smain.stato#258%0 : smain.stato#256%0)
The statement pushed is $guard#259%0 == ($cond#257%0 && $guard#256%0 || $guard#258%0)
Original statement: $guard#259%0 == ($cond#257%0 && $guard#256%0 || $guard#258%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#260%0 == FALSE
Original statement: smain.OVERFLW#260%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#261%0 == TRUE
Original statement: $cond#261%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#262%0 == (((signed int)LINE1#209%0 | (signed int)LINE2#211%0) == 0)
Original statement: $cond#262%0 == (((signed int)LINE1#209%0 | (signed int)LINE2#211%0) == 0)
The statement pushed is $guard#262%0 == ($cond#223%0 && $guard#223%0)
Original statement: $guard#262%0 == ($cond#223%0 && $guard#223%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#263%0 == 7
Original statement: smain.stato#263%0 == 7
The statement pushed is $guard#263%0 == (!$cond#262%0 && $guard#262%0)
Original statement: $guard#263%0 == (!$cond#262%0 && $guard#262%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#264%0 == TRUE
Original statement: $cond#264%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#265%0 == 6
Original statement: smain.stato#265%0 == 6
The statement pushed is $guard#265%0 == ($cond#262%0 && $guard#262%0)
Original statement: $guard#265%0 == ($cond#262%0 && $guard#262%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#266%0 == !(~((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Original statement: smain.OUTP#266%0 == !(~((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
The statement pushed is smain.stato#phi266%0 == ($guard#265%0 ? smain.stato#265%0 : smain.stato#263%0)
Original statement: smain.stato#phi266%0 == ($guard#265%0 ? smain.stato#265%0 : smain.stato#263%0)
The statement pushed is $guard#266%0 == ($cond#264%0 && $guard#263%0 || $guard#265%0)
Original statement: $guard#266%0 == ($cond#264%0 && $guard#263%0 || $guard#265%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#267%0 == FALSE
Original statement: smain.OVERFLW#267%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#268%0 == TRUE
Original statement: $cond#268%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#269%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
Original statement: $cond#269%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
The statement pushed is $guard#269%0 == ($cond#224%0 && $guard#224%0)
Original statement: $guard#269%0 == ($cond#224%0 && $guard#224%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#270%0 == 3
Original statement: smain.stato#270%0 == 3
The statement pushed is $guard#270%0 == (!$cond#269%0 && $guard#269%0)
Original statement: $guard#270%0 == (!$cond#269%0 && $guard#269%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#271%0 == TRUE
Original statement: $cond#271%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#272%0 == 0
Original statement: smain.stato#272%0 == 0
The statement pushed is $guard#272%0 == ($cond#269%0 && $guard#269%0)
Original statement: $guard#272%0 == ($cond#269%0 && $guard#269%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#273%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Original statement: smain.OUTP#273%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
The statement pushed is smain.stato#phi273%0 == ($guard#272%0 ? smain.stato#272%0 : smain.stato#270%0)
Original statement: smain.stato#phi273%0 == ($guard#272%0 ? smain.stato#272%0 : smain.stato#270%0)
The statement pushed is $guard#273%0 == ($cond#271%0 && $guard#270%0 || $guard#272%0)
Original statement: $guard#273%0 == ($cond#271%0 && $guard#270%0 || $guard#272%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#274%0 == FALSE
Original statement: smain.OVERFLW#274%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#275%0 == TRUE
Original statement: $cond#275%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#276%0 == (((signed int)LINE1#209%0 | (signed int)LINE2#211%0) == 0)
Original statement: $cond#276%0 == (((signed int)LINE1#209%0 | (signed int)LINE2#211%0) == 0)
The statement pushed is $guard#276%0 == ($cond#225%0 && $guard#225%0)
Original statement: $guard#276%0 == ($cond#225%0 && $guard#225%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#277%0 == 3
Original statement: smain.stato#277%0 == 3
The statement pushed is $guard#277%0 == (!$cond#276%0 && $guard#276%0)
Original statement: $guard#277%0 == (!$cond#276%0 && $guard#276%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#278%0 == TRUE
Original statement: $cond#278%0 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#279%0 == 0
Original statement: smain.stato#279%0 == 0
The statement pushed is $guard#279%0 == ($cond#276%0 && $guard#276%0)
Original statement: $guard#279%0 == ($cond#276%0 && $guard#276%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#280%0 == !(~((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Original statement: smain.OUTP#280%0 == !(~((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
The statement pushed is smain.stato#phi280%0 == ($guard#279%0 ? smain.stato#279%0 : smain.stato#277%0)
Original statement: smain.stato#phi280%0 == ($guard#279%0 ? smain.stato#279%0 : smain.stato#277%0)
The statement pushed is $guard#280%0 == ($cond#278%0 && $guard#277%0 || $guard#279%0)
Original statement: $guard#280%0 == ($cond#278%0 && $guard#277%0 || $guard#279%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#281%0 == FALSE
Original statement: smain.OVERFLW#281%0 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#282%0 == smain.OUTP#phi282%0
Original statement: OUTP#282%0 == smain.OUTP#phi282%0
The statement pushed is smain.OUTP#phi282%0 == ($guard#280%0 ? smain.OUTP#280%0 : ($cond#275%0 && $guard#273%0 ? smain.OUTP#273%0 : ($cond#268%0 && $guard#266%0 ? smain.OUTP#266%0 : ($cond#261%0 && $guard#259%0 ? smain.OUTP#259%0 : ($cond#254%0 && $guard#252%0 ? smain.OUTP#252%0 : ($cond#247%0 && $guard#245%0 ? smain.OUTP#245%0 : ($cond#240%0 && $guard#238%0 ? smain.OUTP#238%0 : ($cond#233%0 && $guard#231%0 ? smain.OUTP#231%0 : smain.OUTP#phi199%0))))))))
Original statement: smain.OUTP#phi282%0 == ($guard#280%0 ? smain.OUTP#280%0 : ($cond#275%0 && $guard#273%0 ? smain.OUTP#273%0 : ($cond#268%0 && $guard#266%0 ? smain.OUTP#266%0 : ($cond#261%0 && $guard#259%0 ? smain.OUTP#259%0 : ($cond#254%0 && $guard#252%0 ? smain.OUTP#252%0 : ($cond#247%0 && $guard#245%0 ? smain.OUTP#245%0 : ($cond#240%0 && $guard#238%0 ? smain.OUTP#238%0 : ($cond#233%0 && $guard#231%0 ? smain.OUTP#231%0 : smain.OUTP#phi199%0))))))))
The statement pushed is smain.OVERFLW#phi282%0 == ($guard#280%0 ? smain.OVERFLW#281%0 : ($cond#275%0 && $guard#273%0 ? smain.OVERFLW#274%0 : ($cond#268%0 && $guard#266%0 ? smain.OVERFLW#267%0 : ($cond#261%0 && $guard#259%0 ? smain.OVERFLW#260%0 : ($cond#254%0 && $guard#252%0 ? smain.OVERFLW#253%0 : ($cond#247%0 && $guard#245%0 ? smain.OVERFLW#246%0 : ($cond#240%0 && $guard#238%0 ? smain.OVERFLW#239%0 : ($cond#233%0 && $guard#231%0 ? smain.OVERFLW#232%0 : smain.OVERFLW#phi199%0))))))))
Original statement: smain.OVERFLW#phi282%0 == ($guard#280%0 ? smain.OVERFLW#281%0 : ($cond#275%0 && $guard#273%0 ? smain.OVERFLW#274%0 : ($cond#268%0 && $guard#266%0 ? smain.OVERFLW#267%0 : ($cond#261%0 && $guard#259%0 ? smain.OVERFLW#260%0 : ($cond#254%0 && $guard#252%0 ? smain.OVERFLW#253%0 : ($cond#247%0 && $guard#245%0 ? smain.OVERFLW#246%0 : ($cond#240%0 && $guard#238%0 ? smain.OVERFLW#239%0 : ($cond#233%0 && $guard#231%0 ? smain.OVERFLW#232%0 : smain.OVERFLW#phi199%0))))))))
The statement pushed is smain.stato#phi282%0 == ($guard#280%0 ? smain.stato#phi280%0 : ($cond#275%0 && $guard#273%0 ? smain.stato#phi273%0 : ($cond#268%0 && $guard#266%0 ? smain.stato#phi266%0 : ($cond#261%0 && $guard#259%0 ? smain.stato#phi259%0 : ($cond#254%0 && $guard#252%0 ? smain.stato#phi252%0 : ($cond#247%0 && $guard#245%0 ? smain.stato#phi245%0 : ($cond#240%0 && $guard#238%0 ? smain.stato#phi238%0 : ($cond#233%0 && $guard#231%0 ? smain.stato#phi231%0 : smain.stato#phi199%0))))))))
Original statement: smain.stato#phi282%0 == ($guard#280%0 ? smain.stato#phi280%0 : ($cond#275%0 && $guard#273%0 ? smain.stato#phi273%0 : ($cond#268%0 && $guard#266%0 ? smain.stato#phi266%0 : ($cond#261%0 && $guard#259%0 ? smain.stato#phi259%0 : ($cond#254%0 && $guard#252%0 ? smain.stato#phi252%0 : ($cond#247%0 && $guard#245%0 ? smain.stato#phi245%0 : ($cond#240%0 && $guard#238%0 ? smain.stato#phi238%0 : ($cond#233%0 && $guard#231%0 ? smain.stato#phi231%0 : smain.stato#phi199%0))))))))
The statement pushed is $guard#282%0 == ($cond#226%0 && $guard#226%0 || $cond#233%0 && $guard#231%0 || $cond#240%0 && $guard#238%0 || $cond#247%0 && $guard#245%0 || $cond#254%0 && $guard#252%0 || $cond#261%0 && $guard#259%0 || $cond#268%0 && $guard#266%0 || $cond#275%0 && $guard#273%0 || $guard#280%0)
Original statement: $guard#282%0 == ($cond#226%0 && $guard#226%0 || $cond#233%0 && $guard#231%0 || $cond#240%0 && $guard#238%0 || $cond#247%0 && $guard#245%0 || $cond#254%0 && $guard#252%0 || $cond#261%0 && $guard#259%0 || $cond#268%0 && $guard#266%0 || $cond#275%0 && $guard#273%0 || $guard#280%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OVERFLW#283%0 == smain.OVERFLW#phi282%0
Original statement: OVERFLW#283%0 == smain.OVERFLW#phi282%0
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#291%0 == ((signed int)smain.OVERFLW#phi282%0 == 0)
Original statement: $cond#291%0 == ((signed int)smain.OVERFLW#phi282%0 == 0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#phi292%0 == ($cond#291%0 && $guard#282%0 ? OUTP#282%0 : OUTP#115%0)
Original statement: OUTP#phi292%0 == ($cond#291%0 && $guard#282%0 ? OUTP#282%0 : OUTP#115%0)
The statement pushed is OVERFLW#phi292%0 == ($cond#291%0 && $guard#282%0 ? OVERFLW#283%0 : OVERFLW#116%0)
Original statement: OVERFLW#phi292%0 == ($cond#291%0 && $guard#282%0 ? OVERFLW#283%0 : OVERFLW#116%0)
The statement pushed is smain.OUTP#phi292%0 == ($cond#291%0 && $guard#282%0 ? smain.OUTP#phi282%0 : smain.OUTP#phi115%0)
Original statement: smain.OUTP#phi292%0 == ($cond#291%0 && $guard#282%0 ? smain.OUTP#phi282%0 : smain.OUTP#phi115%0)
The statement pushed is smain.OVERFLW#phi292%0 == ($cond#291%0 && $guard#282%0 ? smain.OVERFLW#phi282%0 : smain.OVERFLW#phi115%0)
Original statement: smain.OVERFLW#phi292%0 == ($cond#291%0 && $guard#282%0 ? smain.OVERFLW#phi282%0 : smain.OVERFLW#phi115%0)
The statement pushed is smain.stato#phi292%0 == ($cond#291%0 && $guard#282%0 ? smain.stato#phi282%0 : smain.stato#phi115%0)
Original statement: smain.stato#phi292%0 == ($cond#291%0 && $guard#282%0 ? smain.stato#phi282%0 : smain.stato#phi115%0)
The statement pushed is $cond#292%0 == TRUE
Original statement: $cond#292%0 == TRUE
The statement pushed is $guard#292%0 == (!$cond#291%0 && $guard#282%0 || $cond#123%0 && $guard#115%0 || $cond#291%0 && $guard#282%0)
Original statement: $guard#292%0 == (!$cond#291%0 && $guard#282%0 || $cond#123%0 && $guard#115%0 || $cond#291%0 && $guard#282%0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
Original statement: !((signed int)smain.OVERFLW#phi282%0 == 0) || !$guard#282%0
The enabling expr of node is enable0
The enabling expr of node is enable0
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $guard#40%1 == (!$cond#39%1 && $guard#39%1)
Original statement: $guard#40%1 == (!$cond#39%1 && $guard#39%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE1#42%1 == LINE1#25
Original statement: LINE1#42%1 == LINE1#25
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE2#44%1 == LINE2#27
Original statement: LINE2#44%1 == LINE2#27
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#46%1 == &OUTP
Original statement: OUTP#46%1 == &OUTP
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OVERFLW#48%1 == &OVERFLW
Original statement: OVERFLW#48%1 == &OVERFLW
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is clock#50%1 == clock#33
Original statement: clock#50%1 == clock#33
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#51%1 == ((signed int)smain.stato#phi39%1 == 0)
Original statement: $cond#51%1 == ((signed int)smain.stato#phi39%1 == 0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#52%1 == ((signed int)smain.stato#phi39%1 == 3)
Original statement: $cond#52%1 == ((signed int)smain.stato#phi39%1 == 3)
The statement pushed is $guard#52%1 == (!$cond#51%1 && $guard#40%1)
Original statement: $guard#52%1 == (!$cond#51%1 && $guard#40%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#53%1 == ((signed int)smain.stato#phi39%1 == 1)
Original statement: $cond#53%1 == ((signed int)smain.stato#phi39%1 == 1)
The statement pushed is $guard#53%1 == (!$cond#52%1 && $guard#52%1)
Original statement: $guard#53%1 == (!$cond#52%1 && $guard#52%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#54%1 == ((signed int)smain.stato#phi39%1 == 4)
Original statement: $cond#54%1 == ((signed int)smain.stato#phi39%1 == 4)
The statement pushed is $guard#54%1 == (!$cond#53%1 && $guard#53%1)
Original statement: $guard#54%1 == (!$cond#53%1 && $guard#53%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#55%1 == ((signed int)smain.stato#phi39%1 == 2)
Original statement: $cond#55%1 == ((signed int)smain.stato#phi39%1 == 2)
The statement pushed is $guard#55%1 == (!$cond#54%1 && $guard#54%1)
Original statement: $guard#55%1 == (!$cond#54%1 && $guard#54%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#56%1 == ((signed int)smain.stato#phi39%1 == 5)
Original statement: $cond#56%1 == ((signed int)smain.stato#phi39%1 == 5)
The statement pushed is $guard#56%1 == (!$cond#55%1 && $guard#55%1)
Original statement: $guard#56%1 == (!$cond#55%1 && $guard#55%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#57%1 == ((signed int)smain.stato#phi39%1 == 6)
Original statement: $cond#57%1 == ((signed int)smain.stato#phi39%1 == 6)
The statement pushed is $guard#57%1 == (!$cond#56%1 && $guard#56%1)
Original statement: $guard#57%1 == (!$cond#56%1 && $guard#56%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#58%1 == ((signed int)smain.stato#phi39%1 == 7)
Original statement: $cond#58%1 == ((signed int)smain.stato#phi39%1 == 7)
The statement pushed is $guard#58%1 == (!$cond#57%1 && $guard#57%1)
Original statement: $guard#58%1 == (!$cond#57%1 && $guard#57%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#59%1 == TRUE
Original statement: $cond#59%1 == TRUE
The statement pushed is $guard#59%1 == (!$cond#58%1 && $guard#58%1)
Original statement: $guard#59%1 == (!$cond#58%1 && $guard#58%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#60%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
Original statement: $cond#60%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
The statement pushed is $guard#60%1 == ($cond#51%1 && $guard#40%1)
Original statement: $guard#60%1 == ($cond#51%1 && $guard#40%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#61%1 == 4
Original statement: smain.stato#61%1 == 4
The statement pushed is $guard#61%1 == (!$cond#60%1 && $guard#60%1)
Original statement: $guard#61%1 == (!$cond#60%1 && $guard#60%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#62%1 == TRUE
Original statement: $cond#62%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#63%1 == 1
Original statement: smain.stato#63%1 == 1
The statement pushed is $guard#63%1 == ($cond#60%1 && $guard#60%1)
Original statement: $guard#63%1 == ($cond#60%1 && $guard#60%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#64%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Original statement: smain.OUTP#64%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
The statement pushed is smain.stato#phi64%1 == ($guard#63%1 ? smain.stato#63%1 : smain.stato#61%1)
Original statement: smain.stato#phi64%1 == ($guard#63%1 ? smain.stato#63%1 : smain.stato#61%1)
The statement pushed is $guard#64%1 == ($cond#62%1 && $guard#61%1 || $guard#63%1)
Original statement: $guard#64%1 == ($cond#62%1 && $guard#61%1 || $guard#63%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#65%1 == FALSE
Original statement: smain.OVERFLW#65%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#66%1 == TRUE
Original statement: $cond#66%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#67%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
Original statement: $cond#67%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
The statement pushed is $guard#67%1 == ($cond#52%1 && $guard#52%1)
Original statement: $guard#67%1 == ($cond#52%1 && $guard#52%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#68%1 == 4
Original statement: smain.stato#68%1 == 4
The statement pushed is $guard#68%1 == (!$cond#67%1 && $guard#67%1)
Original statement: $guard#68%1 == (!$cond#67%1 && $guard#67%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#69%1 == TRUE
Original statement: $cond#69%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#70%1 == 1
Original statement: smain.stato#70%1 == 1
The statement pushed is $guard#70%1 == ($cond#67%1 && $guard#67%1)
Original statement: $guard#70%1 == ($cond#67%1 && $guard#67%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#71%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Original statement: smain.OUTP#71%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
The statement pushed is smain.stato#phi71%1 == ($guard#70%1 ? smain.stato#70%1 : smain.stato#68%1)
Original statement: smain.stato#phi71%1 == ($guard#70%1 ? smain.stato#70%1 : smain.stato#68%1)
The statement pushed is $guard#71%1 == ($cond#69%1 && $guard#68%1 || $guard#70%1)
Original statement: $guard#71%1 == ($cond#69%1 && $guard#68%1 || $guard#70%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#72%1 == TRUE
Original statement: smain.OVERFLW#72%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#73%1 == TRUE
Original statement: $cond#73%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#74%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
Original statement: $cond#74%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
The statement pushed is $guard#74%1 == ($cond#53%1 && $guard#53%1)
Original statement: $guard#74%1 == ($cond#53%1 && $guard#53%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#75%1 == 5
Original statement: smain.stato#75%1 == 5
The statement pushed is $guard#75%1 == (!$cond#74%1 && $guard#74%1)
Original statement: $guard#75%1 == (!$cond#74%1 && $guard#74%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#76%1 == TRUE
Original statement: $cond#76%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#77%1 == 2
Original statement: smain.stato#77%1 == 2
The statement pushed is $guard#77%1 == ($cond#74%1 && $guard#74%1)
Original statement: $guard#77%1 == ($cond#74%1 && $guard#74%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#78%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Original statement: smain.OUTP#78%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
The statement pushed is smain.stato#phi78%1 == ($guard#77%1 ? smain.stato#77%1 : smain.stato#75%1)
Original statement: smain.stato#phi78%1 == ($guard#77%1 ? smain.stato#77%1 : smain.stato#75%1)
The statement pushed is $guard#78%1 == ($cond#76%1 && $guard#75%1 || $guard#77%1)
Original statement: $guard#78%1 == ($cond#76%1 && $guard#75%1 || $guard#77%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#79%1 == FALSE
Original statement: smain.OVERFLW#79%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#80%1 == TRUE
Original statement: $cond#80%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#81%1 == (((signed int)LINE1#42%1 | (signed int)LINE2#44%1) == 0)
Original statement: $cond#81%1 == (((signed int)LINE1#42%1 | (signed int)LINE2#44%1) == 0)
The statement pushed is $guard#81%1 == ($cond#54%1 && $guard#54%1)
Original statement: $guard#81%1 == ($cond#54%1 && $guard#54%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#82%1 == 5
Original statement: smain.stato#82%1 == 5
The statement pushed is $guard#82%1 == (!$cond#81%1 && $guard#81%1)
Original statement: $guard#82%1 == (!$cond#81%1 && $guard#81%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#83%1 == TRUE
Original statement: $cond#83%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#84%1 == 2
Original statement: smain.stato#84%1 == 2
The statement pushed is $guard#84%1 == ($cond#81%1 && $guard#81%1)
Original statement: $guard#84%1 == ($cond#81%1 && $guard#81%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#85%1 == !(~((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Original statement: smain.OUTP#85%1 == !(~((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
The statement pushed is smain.stato#phi85%1 == ($guard#84%1 ? smain.stato#84%1 : smain.stato#82%1)
Original statement: smain.stato#phi85%1 == ($guard#84%1 ? smain.stato#84%1 : smain.stato#82%1)
The statement pushed is $guard#85%1 == ($cond#83%1 && $guard#82%1 || $guard#84%1)
Original statement: $guard#85%1 == ($cond#83%1 && $guard#82%1 || $guard#84%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#86%1 == FALSE
Original statement: smain.OVERFLW#86%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#87%1 == TRUE
Original statement: $cond#87%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#88%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
Original statement: $cond#88%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
The statement pushed is $guard#88%1 == ($cond#55%1 && $guard#55%1)
Original statement: $guard#88%1 == ($cond#55%1 && $guard#55%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#89%1 == 7
Original statement: smain.stato#89%1 == 7
The statement pushed is $guard#89%1 == (!$cond#88%1 && $guard#88%1)
Original statement: $guard#89%1 == (!$cond#88%1 && $guard#88%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#90%1 == TRUE
Original statement: $cond#90%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#91%1 == 6
Original statement: smain.stato#91%1 == 6
The statement pushed is $guard#91%1 == ($cond#88%1 && $guard#88%1)
Original statement: $guard#91%1 == ($cond#88%1 && $guard#88%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#92%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Original statement: smain.OUTP#92%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
The statement pushed is smain.stato#phi92%1 == ($guard#91%1 ? smain.stato#91%1 : smain.stato#89%1)
Original statement: smain.stato#phi92%1 == ($guard#91%1 ? smain.stato#91%1 : smain.stato#89%1)
The statement pushed is $guard#92%1 == ($cond#90%1 && $guard#89%1 || $guard#91%1)
Original statement: $guard#92%1 == ($cond#90%1 && $guard#89%1 || $guard#91%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#93%1 == FALSE
Original statement: smain.OVERFLW#93%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#94%1 == TRUE
Original statement: $cond#94%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#95%1 == (((signed int)LINE1#42%1 | (signed int)LINE2#44%1) == 0)
Original statement: $cond#95%1 == (((signed int)LINE1#42%1 | (signed int)LINE2#44%1) == 0)
The statement pushed is $guard#95%1 == ($cond#56%1 && $guard#56%1)
Original statement: $guard#95%1 == ($cond#56%1 && $guard#56%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#96%1 == 7
Original statement: smain.stato#96%1 == 7
The statement pushed is $guard#96%1 == (!$cond#95%1 && $guard#95%1)
Original statement: $guard#96%1 == (!$cond#95%1 && $guard#95%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#97%1 == TRUE
Original statement: $cond#97%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#98%1 == 6
Original statement: smain.stato#98%1 == 6
The statement pushed is $guard#98%1 == ($cond#95%1 && $guard#95%1)
Original statement: $guard#98%1 == ($cond#95%1 && $guard#95%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#99%1 == !(~((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Original statement: smain.OUTP#99%1 == !(~((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
The statement pushed is smain.stato#phi99%1 == ($guard#98%1 ? smain.stato#98%1 : smain.stato#96%1)
Original statement: smain.stato#phi99%1 == ($guard#98%1 ? smain.stato#98%1 : smain.stato#96%1)
The statement pushed is $guard#99%1 == ($cond#97%1 && $guard#96%1 || $guard#98%1)
Original statement: $guard#99%1 == ($cond#97%1 && $guard#96%1 || $guard#98%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#100%1 == FALSE
Original statement: smain.OVERFLW#100%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#101%1 == TRUE
Original statement: $cond#101%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#102%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
Original statement: $cond#102%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
The statement pushed is $guard#102%1 == ($cond#57%1 && $guard#57%1)
Original statement: $guard#102%1 == ($cond#57%1 && $guard#57%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#103%1 == 3
Original statement: smain.stato#103%1 == 3
The statement pushed is $guard#103%1 == (!$cond#102%1 && $guard#102%1)
Original statement: $guard#103%1 == (!$cond#102%1 && $guard#102%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#104%1 == TRUE
Original statement: $cond#104%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#105%1 == 0
Original statement: smain.stato#105%1 == 0
The statement pushed is $guard#105%1 == ($cond#102%1 && $guard#102%1)
Original statement: $guard#105%1 == ($cond#102%1 && $guard#102%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#106%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Original statement: smain.OUTP#106%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
The statement pushed is smain.stato#phi106%1 == ($guard#105%1 ? smain.stato#105%1 : smain.stato#103%1)
Original statement: smain.stato#phi106%1 == ($guard#105%1 ? smain.stato#105%1 : smain.stato#103%1)
The statement pushed is $guard#106%1 == ($cond#104%1 && $guard#103%1 || $guard#105%1)
Original statement: $guard#106%1 == ($cond#104%1 && $guard#103%1 || $guard#105%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#107%1 == FALSE
Original statement: smain.OVERFLW#107%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#108%1 == TRUE
Original statement: $cond#108%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#109%1 == (((signed int)LINE1#42%1 | (signed int)LINE2#44%1) == 0)
Original statement: $cond#109%1 == (((signed int)LINE1#42%1 | (signed int)LINE2#44%1) == 0)
The statement pushed is $guard#109%1 == ($cond#58%1 && $guard#58%1)
Original statement: $guard#109%1 == ($cond#58%1 && $guard#58%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#110%1 == 3
Original statement: smain.stato#110%1 == 3
The statement pushed is $guard#110%1 == (!$cond#109%1 && $guard#109%1)
Original statement: $guard#110%1 == (!$cond#109%1 && $guard#109%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#111%1 == TRUE
Original statement: $cond#111%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#112%1 == 0
Original statement: smain.stato#112%1 == 0
The statement pushed is $guard#112%1 == ($cond#109%1 && $guard#109%1)
Original statement: $guard#112%1 == ($cond#109%1 && $guard#109%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#113%1 == !(~((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Original statement: smain.OUTP#113%1 == !(~((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
The statement pushed is smain.stato#phi113%1 == ($guard#112%1 ? smain.stato#112%1 : smain.stato#110%1)
Original statement: smain.stato#phi113%1 == ($guard#112%1 ? smain.stato#112%1 : smain.stato#110%1)
The statement pushed is $guard#113%1 == ($cond#111%1 && $guard#110%1 || $guard#112%1)
Original statement: $guard#113%1 == ($cond#111%1 && $guard#110%1 || $guard#112%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#114%1 == FALSE
Original statement: smain.OVERFLW#114%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#115%1 == smain.OUTP#phi115%1
Original statement: OUTP#115%1 == smain.OUTP#phi115%1
The statement pushed is smain.OUTP#phi115%1 == ($guard#113%1 ? smain.OUTP#113%1 : ($cond#108%1 && $guard#106%1 ? smain.OUTP#106%1 : ($cond#101%1 && $guard#99%1 ? smain.OUTP#99%1 : ($cond#94%1 && $guard#92%1 ? smain.OUTP#92%1 : ($cond#87%1 && $guard#85%1 ? smain.OUTP#85%1 : ($cond#80%1 && $guard#78%1 ? smain.OUTP#78%1 : ($cond#73%1 && $guard#71%1 ? smain.OUTP#71%1 : ($cond#66%1 && $guard#64%1 ? smain.OUTP#64%1 : smain.OUTP#phi39%1))))))))
Original statement: smain.OUTP#phi115%1 == ($guard#113%1 ? smain.OUTP#113%1 : ($cond#108%1 && $guard#106%1 ? smain.OUTP#106%1 : ($cond#101%1 && $guard#99%1 ? smain.OUTP#99%1 : ($cond#94%1 && $guard#92%1 ? smain.OUTP#92%1 : ($cond#87%1 && $guard#85%1 ? smain.OUTP#85%1 : ($cond#80%1 && $guard#78%1 ? smain.OUTP#78%1 : ($cond#73%1 && $guard#71%1 ? smain.OUTP#71%1 : ($cond#66%1 && $guard#64%1 ? smain.OUTP#64%1 : smain.OUTP#phi39%1))))))))
The statement pushed is smain.OVERFLW#phi115%1 == ($guard#113%1 ? smain.OVERFLW#114%1 : ($cond#108%1 && $guard#106%1 ? smain.OVERFLW#107%1 : ($cond#101%1 && $guard#99%1 ? smain.OVERFLW#100%1 : ($cond#94%1 && $guard#92%1 ? smain.OVERFLW#93%1 : ($cond#87%1 && $guard#85%1 ? smain.OVERFLW#86%1 : ($cond#80%1 && $guard#78%1 ? smain.OVERFLW#79%1 : ($cond#73%1 && $guard#71%1 ? smain.OVERFLW#72%1 : ($cond#66%1 && $guard#64%1 ? smain.OVERFLW#65%1 : smain.OVERFLW#phi39%1))))))))
Original statement: smain.OVERFLW#phi115%1 == ($guard#113%1 ? smain.OVERFLW#114%1 : ($cond#108%1 && $guard#106%1 ? smain.OVERFLW#107%1 : ($cond#101%1 && $guard#99%1 ? smain.OVERFLW#100%1 : ($cond#94%1 && $guard#92%1 ? smain.OVERFLW#93%1 : ($cond#87%1 && $guard#85%1 ? smain.OVERFLW#86%1 : ($cond#80%1 && $guard#78%1 ? smain.OVERFLW#79%1 : ($cond#73%1 && $guard#71%1 ? smain.OVERFLW#72%1 : ($cond#66%1 && $guard#64%1 ? smain.OVERFLW#65%1 : smain.OVERFLW#phi39%1))))))))
The statement pushed is smain.stato#phi115%1 == ($guard#113%1 ? smain.stato#phi113%1 : ($cond#108%1 && $guard#106%1 ? smain.stato#phi106%1 : ($cond#101%1 && $guard#99%1 ? smain.stato#phi99%1 : ($cond#94%1 && $guard#92%1 ? smain.stato#phi92%1 : ($cond#87%1 && $guard#85%1 ? smain.stato#phi85%1 : ($cond#80%1 && $guard#78%1 ? smain.stato#phi78%1 : ($cond#73%1 && $guard#71%1 ? smain.stato#phi71%1 : ($cond#66%1 && $guard#64%1 ? smain.stato#phi64%1 : smain.stato#phi39%1))))))))
Original statement: smain.stato#phi115%1 == ($guard#113%1 ? smain.stato#phi113%1 : ($cond#108%1 && $guard#106%1 ? smain.stato#phi106%1 : ($cond#101%1 && $guard#99%1 ? smain.stato#phi99%1 : ($cond#94%1 && $guard#92%1 ? smain.stato#phi92%1 : ($cond#87%1 && $guard#85%1 ? smain.stato#phi85%1 : ($cond#80%1 && $guard#78%1 ? smain.stato#phi78%1 : ($cond#73%1 && $guard#71%1 ? smain.stato#phi71%1 : ($cond#66%1 && $guard#64%1 ? smain.stato#phi64%1 : smain.stato#phi39%1))))))))
The statement pushed is $guard#115%1 == ($cond#101%1 && $guard#99%1 || $cond#108%1 && $guard#106%1 || $cond#59%1 && $guard#59%1 || $cond#66%1 && $guard#64%1 || $cond#73%1 && $guard#71%1 || $cond#80%1 && $guard#78%1 || $cond#87%1 && $guard#85%1 || $cond#94%1 && $guard#92%1 || $guard#113%1)
Original statement: $guard#115%1 == ($cond#101%1 && $guard#99%1 || $cond#108%1 && $guard#106%1 || $cond#59%1 && $guard#59%1 || $cond#66%1 && $guard#64%1 || $cond#73%1 && $guard#71%1 || $cond#80%1 && $guard#78%1 || $cond#87%1 && $guard#85%1 || $cond#94%1 && $guard#92%1 || $guard#113%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OVERFLW#116%1 == smain.OVERFLW#phi115%1
Original statement: OVERFLW#116%1 == smain.OVERFLW#phi115%1
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#123%1 == !((signed int)smain.OVERFLW#phi115%1 == 1)
Original statement: $cond#123%1 == !((signed int)smain.OVERFLW#phi115%1 == 1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $guard#124%1 == (!$cond#123%1 && $guard#115%1)
Original statement: $guard#124%1 == (!$cond#123%1 && $guard#115%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE1#126%1 == LINE1#25
Original statement: LINE1#126%1 == LINE1#25
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE2#128%1 == LINE2#27
Original statement: LINE2#128%1 == LINE2#27
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#130%1 == &OUTP
Original statement: OUTP#130%1 == &OUTP
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OVERFLW#132%1 == &OVERFLW
Original statement: OVERFLW#132%1 == &OVERFLW
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is clock#134%1 == clock#33
Original statement: clock#134%1 == clock#33
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#135%1 == ((signed int)smain.stato#phi115%1 == 0)
Original statement: $cond#135%1 == ((signed int)smain.stato#phi115%1 == 0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#136%1 == ((signed int)smain.stato#phi115%1 == 3)
Original statement: $cond#136%1 == ((signed int)smain.stato#phi115%1 == 3)
The statement pushed is $guard#136%1 == (!$cond#135%1 && $guard#124%1)
Original statement: $guard#136%1 == (!$cond#135%1 && $guard#124%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#137%1 == ((signed int)smain.stato#phi115%1 == 1)
Original statement: $cond#137%1 == ((signed int)smain.stato#phi115%1 == 1)
The statement pushed is $guard#137%1 == (!$cond#136%1 && $guard#136%1)
Original statement: $guard#137%1 == (!$cond#136%1 && $guard#136%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#138%1 == ((signed int)smain.stato#phi115%1 == 4)
Original statement: $cond#138%1 == ((signed int)smain.stato#phi115%1 == 4)
The statement pushed is $guard#138%1 == (!$cond#137%1 && $guard#137%1)
Original statement: $guard#138%1 == (!$cond#137%1 && $guard#137%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#139%1 == ((signed int)smain.stato#phi115%1 == 2)
Original statement: $cond#139%1 == ((signed int)smain.stato#phi115%1 == 2)
The statement pushed is $guard#139%1 == (!$cond#138%1 && $guard#138%1)
Original statement: $guard#139%1 == (!$cond#138%1 && $guard#138%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#140%1 == ((signed int)smain.stato#phi115%1 == 5)
Original statement: $cond#140%1 == ((signed int)smain.stato#phi115%1 == 5)
The statement pushed is $guard#140%1 == (!$cond#139%1 && $guard#139%1)
Original statement: $guard#140%1 == (!$cond#139%1 && $guard#139%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#141%1 == ((signed int)smain.stato#phi115%1 == 6)
Original statement: $cond#141%1 == ((signed int)smain.stato#phi115%1 == 6)
The statement pushed is $guard#141%1 == (!$cond#140%1 && $guard#140%1)
Original statement: $guard#141%1 == (!$cond#140%1 && $guard#140%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#142%1 == ((signed int)smain.stato#phi115%1 == 7)
Original statement: $cond#142%1 == ((signed int)smain.stato#phi115%1 == 7)
The statement pushed is $guard#142%1 == (!$cond#141%1 && $guard#141%1)
Original statement: $guard#142%1 == (!$cond#141%1 && $guard#141%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#143%1 == TRUE
Original statement: $cond#143%1 == TRUE
The statement pushed is $guard#143%1 == (!$cond#142%1 && $guard#142%1)
Original statement: $guard#143%1 == (!$cond#142%1 && $guard#142%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#144%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
Original statement: $cond#144%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
The statement pushed is $guard#144%1 == ($cond#135%1 && $guard#124%1)
Original statement: $guard#144%1 == ($cond#135%1 && $guard#124%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#145%1 == 4
Original statement: smain.stato#145%1 == 4
The statement pushed is $guard#145%1 == (!$cond#144%1 && $guard#144%1)
Original statement: $guard#145%1 == (!$cond#144%1 && $guard#144%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#146%1 == TRUE
Original statement: $cond#146%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#147%1 == 1
Original statement: smain.stato#147%1 == 1
The statement pushed is $guard#147%1 == ($cond#144%1 && $guard#144%1)
Original statement: $guard#147%1 == ($cond#144%1 && $guard#144%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#148%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Original statement: smain.OUTP#148%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
The statement pushed is smain.stato#phi148%1 == ($guard#147%1 ? smain.stato#147%1 : smain.stato#145%1)
Original statement: smain.stato#phi148%1 == ($guard#147%1 ? smain.stato#147%1 : smain.stato#145%1)
The statement pushed is $guard#148%1 == ($cond#146%1 && $guard#145%1 || $guard#147%1)
Original statement: $guard#148%1 == ($cond#146%1 && $guard#145%1 || $guard#147%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#149%1 == FALSE
Original statement: smain.OVERFLW#149%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#150%1 == TRUE
Original statement: $cond#150%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#151%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
Original statement: $cond#151%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
The statement pushed is $guard#151%1 == ($cond#136%1 && $guard#136%1)
Original statement: $guard#151%1 == ($cond#136%1 && $guard#136%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#152%1 == 4
Original statement: smain.stato#152%1 == 4
The statement pushed is $guard#152%1 == (!$cond#151%1 && $guard#151%1)
Original statement: $guard#152%1 == (!$cond#151%1 && $guard#151%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#153%1 == TRUE
Original statement: $cond#153%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#154%1 == 1
Original statement: smain.stato#154%1 == 1
The statement pushed is $guard#154%1 == ($cond#151%1 && $guard#151%1)
Original statement: $guard#154%1 == ($cond#151%1 && $guard#151%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#155%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Original statement: smain.OUTP#155%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
The statement pushed is smain.stato#phi155%1 == ($guard#154%1 ? smain.stato#154%1 : smain.stato#152%1)
Original statement: smain.stato#phi155%1 == ($guard#154%1 ? smain.stato#154%1 : smain.stato#152%1)
The statement pushed is $guard#155%1 == ($cond#153%1 && $guard#152%1 || $guard#154%1)
Original statement: $guard#155%1 == ($cond#153%1 && $guard#152%1 || $guard#154%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#156%1 == TRUE
Original statement: smain.OVERFLW#156%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#157%1 == TRUE
Original statement: $cond#157%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#158%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
Original statement: $cond#158%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
The statement pushed is $guard#158%1 == ($cond#137%1 && $guard#137%1)
Original statement: $guard#158%1 == ($cond#137%1 && $guard#137%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#159%1 == 5
Original statement: smain.stato#159%1 == 5
The statement pushed is $guard#159%1 == (!$cond#158%1 && $guard#158%1)
Original statement: $guard#159%1 == (!$cond#158%1 && $guard#158%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#160%1 == TRUE
Original statement: $cond#160%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#161%1 == 2
Original statement: smain.stato#161%1 == 2
The statement pushed is $guard#161%1 == ($cond#158%1 && $guard#158%1)
Original statement: $guard#161%1 == ($cond#158%1 && $guard#158%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#162%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Original statement: smain.OUTP#162%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
The statement pushed is smain.stato#phi162%1 == ($guard#161%1 ? smain.stato#161%1 : smain.stato#159%1)
Original statement: smain.stato#phi162%1 == ($guard#161%1 ? smain.stato#161%1 : smain.stato#159%1)
The statement pushed is $guard#162%1 == ($cond#160%1 && $guard#159%1 || $guard#161%1)
Original statement: $guard#162%1 == ($cond#160%1 && $guard#159%1 || $guard#161%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#163%1 == FALSE
Original statement: smain.OVERFLW#163%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#164%1 == TRUE
Original statement: $cond#164%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#165%1 == (((signed int)LINE1#126%1 | (signed int)LINE2#128%1) == 0)
Original statement: $cond#165%1 == (((signed int)LINE1#126%1 | (signed int)LINE2#128%1) == 0)
The statement pushed is $guard#165%1 == ($cond#138%1 && $guard#138%1)
Original statement: $guard#165%1 == ($cond#138%1 && $guard#138%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#166%1 == 5
Original statement: smain.stato#166%1 == 5
The statement pushed is $guard#166%1 == (!$cond#165%1 && $guard#165%1)
Original statement: $guard#166%1 == (!$cond#165%1 && $guard#165%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#167%1 == TRUE
Original statement: $cond#167%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#168%1 == 2
Original statement: smain.stato#168%1 == 2
The statement pushed is $guard#168%1 == ($cond#165%1 && $guard#165%1)
Original statement: $guard#168%1 == ($cond#165%1 && $guard#165%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#169%1 == !(~((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Original statement: smain.OUTP#169%1 == !(~((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
The statement pushed is smain.stato#phi169%1 == ($guard#168%1 ? smain.stato#168%1 : smain.stato#166%1)
Original statement: smain.stato#phi169%1 == ($guard#168%1 ? smain.stato#168%1 : smain.stato#166%1)
The statement pushed is $guard#169%1 == ($cond#167%1 && $guard#166%1 || $guard#168%1)
Original statement: $guard#169%1 == ($cond#167%1 && $guard#166%1 || $guard#168%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#170%1 == FALSE
Original statement: smain.OVERFLW#170%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#171%1 == TRUE
Original statement: $cond#171%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#172%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
Original statement: $cond#172%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
The statement pushed is $guard#172%1 == ($cond#139%1 && $guard#139%1)
Original statement: $guard#172%1 == ($cond#139%1 && $guard#139%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#173%1 == 7
Original statement: smain.stato#173%1 == 7
The statement pushed is $guard#173%1 == (!$cond#172%1 && $guard#172%1)
Original statement: $guard#173%1 == (!$cond#172%1 && $guard#172%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#174%1 == TRUE
Original statement: $cond#174%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#175%1 == 6
Original statement: smain.stato#175%1 == 6
The statement pushed is $guard#175%1 == ($cond#172%1 && $guard#172%1)
Original statement: $guard#175%1 == ($cond#172%1 && $guard#172%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#176%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Original statement: smain.OUTP#176%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
The statement pushed is smain.stato#phi176%1 == ($guard#175%1 ? smain.stato#175%1 : smain.stato#173%1)
Original statement: smain.stato#phi176%1 == ($guard#175%1 ? smain.stato#175%1 : smain.stato#173%1)
The statement pushed is $guard#176%1 == ($cond#174%1 && $guard#173%1 || $guard#175%1)
Original statement: $guard#176%1 == ($cond#174%1 && $guard#173%1 || $guard#175%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#177%1 == FALSE
Original statement: smain.OVERFLW#177%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#178%1 == TRUE
Original statement: $cond#178%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#179%1 == (((signed int)LINE1#126%1 | (signed int)LINE2#128%1) == 0)
Original statement: $cond#179%1 == (((signed int)LINE1#126%1 | (signed int)LINE2#128%1) == 0)
The statement pushed is $guard#179%1 == ($cond#140%1 && $guard#140%1)
Original statement: $guard#179%1 == ($cond#140%1 && $guard#140%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#180%1 == 7
Original statement: smain.stato#180%1 == 7
The statement pushed is $guard#180%1 == (!$cond#179%1 && $guard#179%1)
Original statement: $guard#180%1 == (!$cond#179%1 && $guard#179%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#181%1 == TRUE
Original statement: $cond#181%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#182%1 == 6
Original statement: smain.stato#182%1 == 6
The statement pushed is $guard#182%1 == ($cond#179%1 && $guard#179%1)
Original statement: $guard#182%1 == ($cond#179%1 && $guard#179%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#183%1 == !(~((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Original statement: smain.OUTP#183%1 == !(~((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
The statement pushed is smain.stato#phi183%1 == ($guard#182%1 ? smain.stato#182%1 : smain.stato#180%1)
Original statement: smain.stato#phi183%1 == ($guard#182%1 ? smain.stato#182%1 : smain.stato#180%1)
The statement pushed is $guard#183%1 == ($cond#181%1 && $guard#180%1 || $guard#182%1)
Original statement: $guard#183%1 == ($cond#181%1 && $guard#180%1 || $guard#182%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#184%1 == FALSE
Original statement: smain.OVERFLW#184%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#185%1 == TRUE
Original statement: $cond#185%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#186%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
Original statement: $cond#186%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
The statement pushed is $guard#186%1 == ($cond#141%1 && $guard#141%1)
Original statement: $guard#186%1 == ($cond#141%1 && $guard#141%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#187%1 == 3
Original statement: smain.stato#187%1 == 3
The statement pushed is $guard#187%1 == (!$cond#186%1 && $guard#186%1)
Original statement: $guard#187%1 == (!$cond#186%1 && $guard#186%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#188%1 == TRUE
Original statement: $cond#188%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#189%1 == 0
Original statement: smain.stato#189%1 == 0
The statement pushed is $guard#189%1 == ($cond#186%1 && $guard#186%1)
Original statement: $guard#189%1 == ($cond#186%1 && $guard#186%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#190%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Original statement: smain.OUTP#190%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
The statement pushed is smain.stato#phi190%1 == ($guard#189%1 ? smain.stato#189%1 : smain.stato#187%1)
Original statement: smain.stato#phi190%1 == ($guard#189%1 ? smain.stato#189%1 : smain.stato#187%1)
The statement pushed is $guard#190%1 == ($cond#188%1 && $guard#187%1 || $guard#189%1)
Original statement: $guard#190%1 == ($cond#188%1 && $guard#187%1 || $guard#189%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#191%1 == FALSE
Original statement: smain.OVERFLW#191%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#192%1 == TRUE
Original statement: $cond#192%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#193%1 == (((signed int)LINE1#126%1 | (signed int)LINE2#128%1) == 0)
Original statement: $cond#193%1 == (((signed int)LINE1#126%1 | (signed int)LINE2#128%1) == 0)
The statement pushed is $guard#193%1 == ($cond#142%1 && $guard#142%1)
Original statement: $guard#193%1 == ($cond#142%1 && $guard#142%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#194%1 == 3
Original statement: smain.stato#194%1 == 3
The statement pushed is $guard#194%1 == (!$cond#193%1 && $guard#193%1)
Original statement: $guard#194%1 == (!$cond#193%1 && $guard#193%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#195%1 == TRUE
Original statement: $cond#195%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#196%1 == 0
Original statement: smain.stato#196%1 == 0
The statement pushed is $guard#196%1 == ($cond#193%1 && $guard#193%1)
Original statement: $guard#196%1 == ($cond#193%1 && $guard#193%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#197%1 == !(~((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Original statement: smain.OUTP#197%1 == !(~((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
The statement pushed is smain.stato#phi197%1 == ($guard#196%1 ? smain.stato#196%1 : smain.stato#194%1)
Original statement: smain.stato#phi197%1 == ($guard#196%1 ? smain.stato#196%1 : smain.stato#194%1)
The statement pushed is $guard#197%1 == ($cond#195%1 && $guard#194%1 || $guard#196%1)
Original statement: $guard#197%1 == ($cond#195%1 && $guard#194%1 || $guard#196%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#198%1 == FALSE
Original statement: smain.OVERFLW#198%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#199%1 == smain.OUTP#phi199%1
Original statement: OUTP#199%1 == smain.OUTP#phi199%1
The statement pushed is smain.OUTP#phi199%1 == ($guard#197%1 ? smain.OUTP#197%1 : ($cond#192%1 && $guard#190%1 ? smain.OUTP#190%1 : ($cond#185%1 && $guard#183%1 ? smain.OUTP#183%1 : ($cond#178%1 && $guard#176%1 ? smain.OUTP#176%1 : ($cond#171%1 && $guard#169%1 ? smain.OUTP#169%1 : ($cond#164%1 && $guard#162%1 ? smain.OUTP#162%1 : ($cond#157%1 && $guard#155%1 ? smain.OUTP#155%1 : ($cond#150%1 && $guard#148%1 ? smain.OUTP#148%1 : smain.OUTP#phi115%1))))))))
Original statement: smain.OUTP#phi199%1 == ($guard#197%1 ? smain.OUTP#197%1 : ($cond#192%1 && $guard#190%1 ? smain.OUTP#190%1 : ($cond#185%1 && $guard#183%1 ? smain.OUTP#183%1 : ($cond#178%1 && $guard#176%1 ? smain.OUTP#176%1 : ($cond#171%1 && $guard#169%1 ? smain.OUTP#169%1 : ($cond#164%1 && $guard#162%1 ? smain.OUTP#162%1 : ($cond#157%1 && $guard#155%1 ? smain.OUTP#155%1 : ($cond#150%1 && $guard#148%1 ? smain.OUTP#148%1 : smain.OUTP#phi115%1))))))))
The statement pushed is smain.OVERFLW#phi199%1 == ($guard#197%1 ? smain.OVERFLW#198%1 : ($cond#192%1 && $guard#190%1 ? smain.OVERFLW#191%1 : ($cond#185%1 && $guard#183%1 ? smain.OVERFLW#184%1 : ($cond#178%1 && $guard#176%1 ? smain.OVERFLW#177%1 : ($cond#171%1 && $guard#169%1 ? smain.OVERFLW#170%1 : ($cond#164%1 && $guard#162%1 ? smain.OVERFLW#163%1 : ($cond#157%1 && $guard#155%1 ? smain.OVERFLW#156%1 : ($cond#150%1 && $guard#148%1 ? smain.OVERFLW#149%1 : smain.OVERFLW#phi115%1))))))))
Original statement: smain.OVERFLW#phi199%1 == ($guard#197%1 ? smain.OVERFLW#198%1 : ($cond#192%1 && $guard#190%1 ? smain.OVERFLW#191%1 : ($cond#185%1 && $guard#183%1 ? smain.OVERFLW#184%1 : ($cond#178%1 && $guard#176%1 ? smain.OVERFLW#177%1 : ($cond#171%1 && $guard#169%1 ? smain.OVERFLW#170%1 : ($cond#164%1 && $guard#162%1 ? smain.OVERFLW#163%1 : ($cond#157%1 && $guard#155%1 ? smain.OVERFLW#156%1 : ($cond#150%1 && $guard#148%1 ? smain.OVERFLW#149%1 : smain.OVERFLW#phi115%1))))))))
The statement pushed is smain.stato#phi199%1 == ($guard#197%1 ? smain.stato#phi197%1 : ($cond#192%1 && $guard#190%1 ? smain.stato#phi190%1 : ($cond#185%1 && $guard#183%1 ? smain.stato#phi183%1 : ($cond#178%1 && $guard#176%1 ? smain.stato#phi176%1 : ($cond#171%1 && $guard#169%1 ? smain.stato#phi169%1 : ($cond#164%1 && $guard#162%1 ? smain.stato#phi162%1 : ($cond#157%1 && $guard#155%1 ? smain.stato#phi155%1 : ($cond#150%1 && $guard#148%1 ? smain.stato#phi148%1 : smain.stato#phi115%1))))))))
Original statement: smain.stato#phi199%1 == ($guard#197%1 ? smain.stato#phi197%1 : ($cond#192%1 && $guard#190%1 ? smain.stato#phi190%1 : ($cond#185%1 && $guard#183%1 ? smain.stato#phi183%1 : ($cond#178%1 && $guard#176%1 ? smain.stato#phi176%1 : ($cond#171%1 && $guard#169%1 ? smain.stato#phi169%1 : ($cond#164%1 && $guard#162%1 ? smain.stato#phi162%1 : ($cond#157%1 && $guard#155%1 ? smain.stato#phi155%1 : ($cond#150%1 && $guard#148%1 ? smain.stato#phi148%1 : smain.stato#phi115%1))))))))
The statement pushed is $guard#199%1 == ($cond#143%1 && $guard#143%1 || $cond#150%1 && $guard#148%1 || $cond#157%1 && $guard#155%1 || $cond#164%1 && $guard#162%1 || $cond#171%1 && $guard#169%1 || $cond#178%1 && $guard#176%1 || $cond#185%1 && $guard#183%1 || $cond#192%1 && $guard#190%1 || $guard#197%1)
Original statement: $guard#199%1 == ($cond#143%1 && $guard#143%1 || $cond#150%1 && $guard#148%1 || $cond#157%1 && $guard#155%1 || $cond#164%1 && $guard#162%1 || $cond#171%1 && $guard#169%1 || $cond#178%1 && $guard#176%1 || $cond#185%1 && $guard#183%1 || $cond#192%1 && $guard#190%1 || $guard#197%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OVERFLW#200%1 == smain.OVERFLW#phi199%1
Original statement: OVERFLW#200%1 == smain.OVERFLW#phi199%1
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE1#209%1 == LINE1#25
Original statement: LINE1#209%1 == LINE1#25
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is LINE2#211%1 == LINE2#27
Original statement: LINE2#211%1 == LINE2#27
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#213%1 == &OUTP
Original statement: OUTP#213%1 == &OUTP
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OVERFLW#215%1 == &OVERFLW
Original statement: OVERFLW#215%1 == &OVERFLW
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is clock#217%1 == clock#33
Original statement: clock#217%1 == clock#33
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#218%1 == ((signed int)smain.stato#phi199%1 == 0)
Original statement: $cond#218%1 == ((signed int)smain.stato#phi199%1 == 0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#219%1 == ((signed int)smain.stato#phi199%1 == 3)
Original statement: $cond#219%1 == ((signed int)smain.stato#phi199%1 == 3)
The statement pushed is $guard#219%1 == (!$cond#218%1 && $guard#199%1)
Original statement: $guard#219%1 == (!$cond#218%1 && $guard#199%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#220%1 == ((signed int)smain.stato#phi199%1 == 1)
Original statement: $cond#220%1 == ((signed int)smain.stato#phi199%1 == 1)
The statement pushed is $guard#220%1 == (!$cond#219%1 && $guard#219%1)
Original statement: $guard#220%1 == (!$cond#219%1 && $guard#219%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#221%1 == ((signed int)smain.stato#phi199%1 == 4)
Original statement: $cond#221%1 == ((signed int)smain.stato#phi199%1 == 4)
The statement pushed is $guard#221%1 == (!$cond#220%1 && $guard#220%1)
Original statement: $guard#221%1 == (!$cond#220%1 && $guard#220%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#222%1 == ((signed int)smain.stato#phi199%1 == 2)
Original statement: $cond#222%1 == ((signed int)smain.stato#phi199%1 == 2)
The statement pushed is $guard#222%1 == (!$cond#221%1 && $guard#221%1)
Original statement: $guard#222%1 == (!$cond#221%1 && $guard#221%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#223%1 == ((signed int)smain.stato#phi199%1 == 5)
Original statement: $cond#223%1 == ((signed int)smain.stato#phi199%1 == 5)
The statement pushed is $guard#223%1 == (!$cond#222%1 && $guard#222%1)
Original statement: $guard#223%1 == (!$cond#222%1 && $guard#222%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#224%1 == ((signed int)smain.stato#phi199%1 == 6)
Original statement: $cond#224%1 == ((signed int)smain.stato#phi199%1 == 6)
The statement pushed is $guard#224%1 == (!$cond#223%1 && $guard#223%1)
Original statement: $guard#224%1 == (!$cond#223%1 && $guard#223%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#225%1 == ((signed int)smain.stato#phi199%1 == 7)
Original statement: $cond#225%1 == ((signed int)smain.stato#phi199%1 == 7)
The statement pushed is $guard#225%1 == (!$cond#224%1 && $guard#224%1)
Original statement: $guard#225%1 == (!$cond#224%1 && $guard#224%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#226%1 == TRUE
Original statement: $cond#226%1 == TRUE
The statement pushed is $guard#226%1 == (!$cond#225%1 && $guard#225%1)
Original statement: $guard#226%1 == (!$cond#225%1 && $guard#225%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#227%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
Original statement: $cond#227%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
The statement pushed is $guard#227%1 == ($cond#218%1 && $guard#199%1)
Original statement: $guard#227%1 == ($cond#218%1 && $guard#199%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#228%1 == 4
Original statement: smain.stato#228%1 == 4
The statement pushed is $guard#228%1 == (!$cond#227%1 && $guard#227%1)
Original statement: $guard#228%1 == (!$cond#227%1 && $guard#227%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#229%1 == TRUE
Original statement: $cond#229%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#230%1 == 1
Original statement: smain.stato#230%1 == 1
The statement pushed is $guard#230%1 == ($cond#227%1 && $guard#227%1)
Original statement: $guard#230%1 == ($cond#227%1 && $guard#227%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#231%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Original statement: smain.OUTP#231%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
The statement pushed is smain.stato#phi231%1 == ($guard#230%1 ? smain.stato#230%1 : smain.stato#228%1)
Original statement: smain.stato#phi231%1 == ($guard#230%1 ? smain.stato#230%1 : smain.stato#228%1)
The statement pushed is $guard#231%1 == ($cond#229%1 && $guard#228%1 || $guard#230%1)
Original statement: $guard#231%1 == ($cond#229%1 && $guard#228%1 || $guard#230%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#232%1 == FALSE
Original statement: smain.OVERFLW#232%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#233%1 == TRUE
Original statement: $cond#233%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#234%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
Original statement: $cond#234%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
The statement pushed is $guard#234%1 == ($cond#219%1 && $guard#219%1)
Original statement: $guard#234%1 == ($cond#219%1 && $guard#219%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#235%1 == 4
Original statement: smain.stato#235%1 == 4
The statement pushed is $guard#235%1 == (!$cond#234%1 && $guard#234%1)
Original statement: $guard#235%1 == (!$cond#234%1 && $guard#234%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#236%1 == TRUE
Original statement: $cond#236%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#237%1 == 1
Original statement: smain.stato#237%1 == 1
The statement pushed is $guard#237%1 == ($cond#234%1 && $guard#234%1)
Original statement: $guard#237%1 == ($cond#234%1 && $guard#234%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#238%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Original statement: smain.OUTP#238%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
The statement pushed is smain.stato#phi238%1 == ($guard#237%1 ? smain.stato#237%1 : smain.stato#235%1)
Original statement: smain.stato#phi238%1 == ($guard#237%1 ? smain.stato#237%1 : smain.stato#235%1)
The statement pushed is $guard#238%1 == ($cond#236%1 && $guard#235%1 || $guard#237%1)
Original statement: $guard#238%1 == ($cond#236%1 && $guard#235%1 || $guard#237%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#239%1 == TRUE
Original statement: smain.OVERFLW#239%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#240%1 == TRUE
Original statement: $cond#240%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#241%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
Original statement: $cond#241%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
The statement pushed is $guard#241%1 == ($cond#220%1 && $guard#220%1)
Original statement: $guard#241%1 == ($cond#220%1 && $guard#220%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#242%1 == 5
Original statement: smain.stato#242%1 == 5
The statement pushed is $guard#242%1 == (!$cond#241%1 && $guard#241%1)
Original statement: $guard#242%1 == (!$cond#241%1 && $guard#241%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#243%1 == TRUE
Original statement: $cond#243%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#244%1 == 2
Original statement: smain.stato#244%1 == 2
The statement pushed is $guard#244%1 == ($cond#241%1 && $guard#241%1)
Original statement: $guard#244%1 == ($cond#241%1 && $guard#241%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#245%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Original statement: smain.OUTP#245%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
The statement pushed is smain.stato#phi245%1 == ($guard#244%1 ? smain.stato#244%1 : smain.stato#242%1)
Original statement: smain.stato#phi245%1 == ($guard#244%1 ? smain.stato#244%1 : smain.stato#242%1)
The statement pushed is $guard#245%1 == ($cond#243%1 && $guard#242%1 || $guard#244%1)
Original statement: $guard#245%1 == ($cond#243%1 && $guard#242%1 || $guard#244%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#246%1 == FALSE
Original statement: smain.OVERFLW#246%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#247%1 == TRUE
Original statement: $cond#247%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#248%1 == (((signed int)LINE1#209%1 | (signed int)LINE2#211%1) == 0)
Original statement: $cond#248%1 == (((signed int)LINE1#209%1 | (signed int)LINE2#211%1) == 0)
The statement pushed is $guard#248%1 == ($cond#221%1 && $guard#221%1)
Original statement: $guard#248%1 == ($cond#221%1 && $guard#221%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#249%1 == 5
Original statement: smain.stato#249%1 == 5
The statement pushed is $guard#249%1 == (!$cond#248%1 && $guard#248%1)
Original statement: $guard#249%1 == (!$cond#248%1 && $guard#248%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#250%1 == TRUE
Original statement: $cond#250%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#251%1 == 2
Original statement: smain.stato#251%1 == 2
The statement pushed is $guard#251%1 == ($cond#248%1 && $guard#248%1)
Original statement: $guard#251%1 == ($cond#248%1 && $guard#248%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#252%1 == !(~((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Original statement: smain.OUTP#252%1 == !(~((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
The statement pushed is smain.stato#phi252%1 == ($guard#251%1 ? smain.stato#251%1 : smain.stato#249%1)
Original statement: smain.stato#phi252%1 == ($guard#251%1 ? smain.stato#251%1 : smain.stato#249%1)
The statement pushed is $guard#252%1 == ($cond#250%1 && $guard#249%1 || $guard#251%1)
Original statement: $guard#252%1 == ($cond#250%1 && $guard#249%1 || $guard#251%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#253%1 == FALSE
Original statement: smain.OVERFLW#253%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#254%1 == TRUE
Original statement: $cond#254%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#255%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
Original statement: $cond#255%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
The statement pushed is $guard#255%1 == ($cond#222%1 && $guard#222%1)
Original statement: $guard#255%1 == ($cond#222%1 && $guard#222%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#256%1 == 7
Original statement: smain.stato#256%1 == 7
The statement pushed is $guard#256%1 == (!$cond#255%1 && $guard#255%1)
Original statement: $guard#256%1 == (!$cond#255%1 && $guard#255%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#257%1 == TRUE
Original statement: $cond#257%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#258%1 == 6
Original statement: smain.stato#258%1 == 6
The statement pushed is $guard#258%1 == ($cond#255%1 && $guard#255%1)
Original statement: $guard#258%1 == ($cond#255%1 && $guard#255%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#259%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Original statement: smain.OUTP#259%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
The statement pushed is smain.stato#phi259%1 == ($guard#258%1 ? smain.stato#258%1 : smain.stato#256%1)
Original statement: smain.stato#phi259%1 == ($guard#258%1 ? smain.stato#258%1 : smain.stato#256%1)
The statement pushed is $guard#259%1 == ($cond#257%1 && $guard#256%1 || $guard#258%1)
Original statement: $guard#259%1 == ($cond#257%1 && $guard#256%1 || $guard#258%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#260%1 == FALSE
Original statement: smain.OVERFLW#260%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#261%1 == TRUE
Original statement: $cond#261%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#262%1 == (((signed int)LINE1#209%1 | (signed int)LINE2#211%1) == 0)
Original statement: $cond#262%1 == (((signed int)LINE1#209%1 | (signed int)LINE2#211%1) == 0)
The statement pushed is $guard#262%1 == ($cond#223%1 && $guard#223%1)
Original statement: $guard#262%1 == ($cond#223%1 && $guard#223%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#263%1 == 7
Original statement: smain.stato#263%1 == 7
The statement pushed is $guard#263%1 == (!$cond#262%1 && $guard#262%1)
Original statement: $guard#263%1 == (!$cond#262%1 && $guard#262%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#264%1 == TRUE
Original statement: $cond#264%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#265%1 == 6
Original statement: smain.stato#265%1 == 6
The statement pushed is $guard#265%1 == ($cond#262%1 && $guard#262%1)
Original statement: $guard#265%1 == ($cond#262%1 && $guard#262%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#266%1 == !(~((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Original statement: smain.OUTP#266%1 == !(~((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
The statement pushed is smain.stato#phi266%1 == ($guard#265%1 ? smain.stato#265%1 : smain.stato#263%1)
Original statement: smain.stato#phi266%1 == ($guard#265%1 ? smain.stato#265%1 : smain.stato#263%1)
The statement pushed is $guard#266%1 == ($cond#264%1 && $guard#263%1 || $guard#265%1)
Original statement: $guard#266%1 == ($cond#264%1 && $guard#263%1 || $guard#265%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#267%1 == FALSE
Original statement: smain.OVERFLW#267%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#268%1 == TRUE
Original statement: $cond#268%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#269%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
Original statement: $cond#269%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
The statement pushed is $guard#269%1 == ($cond#224%1 && $guard#224%1)
Original statement: $guard#269%1 == ($cond#224%1 && $guard#224%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#270%1 == 3
Original statement: smain.stato#270%1 == 3
The statement pushed is $guard#270%1 == (!$cond#269%1 && $guard#269%1)
Original statement: $guard#270%1 == (!$cond#269%1 && $guard#269%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#271%1 == TRUE
Original statement: $cond#271%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#272%1 == 0
Original statement: smain.stato#272%1 == 0
The statement pushed is $guard#272%1 == ($cond#269%1 && $guard#269%1)
Original statement: $guard#272%1 == ($cond#269%1 && $guard#269%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#273%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Original statement: smain.OUTP#273%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
The statement pushed is smain.stato#phi273%1 == ($guard#272%1 ? smain.stato#272%1 : smain.stato#270%1)
Original statement: smain.stato#phi273%1 == ($guard#272%1 ? smain.stato#272%1 : smain.stato#270%1)
The statement pushed is $guard#273%1 == ($cond#271%1 && $guard#270%1 || $guard#272%1)
Original statement: $guard#273%1 == ($cond#271%1 && $guard#270%1 || $guard#272%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#274%1 == FALSE
Original statement: smain.OVERFLW#274%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#275%1 == TRUE
Original statement: $cond#275%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#276%1 == (((signed int)LINE1#209%1 | (signed int)LINE2#211%1) == 0)
Original statement: $cond#276%1 == (((signed int)LINE1#209%1 | (signed int)LINE2#211%1) == 0)
The statement pushed is $guard#276%1 == ($cond#225%1 && $guard#225%1)
Original statement: $guard#276%1 == ($cond#225%1 && $guard#225%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#277%1 == 3
Original statement: smain.stato#277%1 == 3
The statement pushed is $guard#277%1 == (!$cond#276%1 && $guard#276%1)
Original statement: $guard#277%1 == (!$cond#276%1 && $guard#276%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#278%1 == TRUE
Original statement: $cond#278%1 == TRUE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.stato#279%1 == 0
Original statement: smain.stato#279%1 == 0
The statement pushed is $guard#279%1 == ($cond#276%1 && $guard#276%1)
Original statement: $guard#279%1 == ($cond#276%1 && $guard#276%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OUTP#280%1 == !(~((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Original statement: smain.OUTP#280%1 == !(~((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
The statement pushed is smain.stato#phi280%1 == ($guard#279%1 ? smain.stato#279%1 : smain.stato#277%1)
Original statement: smain.stato#phi280%1 == ($guard#279%1 ? smain.stato#279%1 : smain.stato#277%1)
The statement pushed is $guard#280%1 == ($cond#278%1 && $guard#277%1 || $guard#279%1)
Original statement: $guard#280%1 == ($cond#278%1 && $guard#277%1 || $guard#279%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is smain.OVERFLW#281%1 == FALSE
Original statement: smain.OVERFLW#281%1 == FALSE
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#282%1 == smain.OUTP#phi282%1
Original statement: OUTP#282%1 == smain.OUTP#phi282%1
The statement pushed is smain.OUTP#phi282%1 == ($guard#280%1 ? smain.OUTP#280%1 : ($cond#275%1 && $guard#273%1 ? smain.OUTP#273%1 : ($cond#268%1 && $guard#266%1 ? smain.OUTP#266%1 : ($cond#261%1 && $guard#259%1 ? smain.OUTP#259%1 : ($cond#254%1 && $guard#252%1 ? smain.OUTP#252%1 : ($cond#247%1 && $guard#245%1 ? smain.OUTP#245%1 : ($cond#240%1 && $guard#238%1 ? smain.OUTP#238%1 : ($cond#233%1 && $guard#231%1 ? smain.OUTP#231%1 : smain.OUTP#phi199%1))))))))
Original statement: smain.OUTP#phi282%1 == ($guard#280%1 ? smain.OUTP#280%1 : ($cond#275%1 && $guard#273%1 ? smain.OUTP#273%1 : ($cond#268%1 && $guard#266%1 ? smain.OUTP#266%1 : ($cond#261%1 && $guard#259%1 ? smain.OUTP#259%1 : ($cond#254%1 && $guard#252%1 ? smain.OUTP#252%1 : ($cond#247%1 && $guard#245%1 ? smain.OUTP#245%1 : ($cond#240%1 && $guard#238%1 ? smain.OUTP#238%1 : ($cond#233%1 && $guard#231%1 ? smain.OUTP#231%1 : smain.OUTP#phi199%1))))))))
The statement pushed is smain.OVERFLW#phi282%1 == ($guard#280%1 ? smain.OVERFLW#281%1 : ($cond#275%1 && $guard#273%1 ? smain.OVERFLW#274%1 : ($cond#268%1 && $guard#266%1 ? smain.OVERFLW#267%1 : ($cond#261%1 && $guard#259%1 ? smain.OVERFLW#260%1 : ($cond#254%1 && $guard#252%1 ? smain.OVERFLW#253%1 : ($cond#247%1 && $guard#245%1 ? smain.OVERFLW#246%1 : ($cond#240%1 && $guard#238%1 ? smain.OVERFLW#239%1 : ($cond#233%1 && $guard#231%1 ? smain.OVERFLW#232%1 : smain.OVERFLW#phi199%1))))))))
Original statement: smain.OVERFLW#phi282%1 == ($guard#280%1 ? smain.OVERFLW#281%1 : ($cond#275%1 && $guard#273%1 ? smain.OVERFLW#274%1 : ($cond#268%1 && $guard#266%1 ? smain.OVERFLW#267%1 : ($cond#261%1 && $guard#259%1 ? smain.OVERFLW#260%1 : ($cond#254%1 && $guard#252%1 ? smain.OVERFLW#253%1 : ($cond#247%1 && $guard#245%1 ? smain.OVERFLW#246%1 : ($cond#240%1 && $guard#238%1 ? smain.OVERFLW#239%1 : ($cond#233%1 && $guard#231%1 ? smain.OVERFLW#232%1 : smain.OVERFLW#phi199%1))))))))
The statement pushed is smain.stato#phi282%1 == ($guard#280%1 ? smain.stato#phi280%1 : ($cond#275%1 && $guard#273%1 ? smain.stato#phi273%1 : ($cond#268%1 && $guard#266%1 ? smain.stato#phi266%1 : ($cond#261%1 && $guard#259%1 ? smain.stato#phi259%1 : ($cond#254%1 && $guard#252%1 ? smain.stato#phi252%1 : ($cond#247%1 && $guard#245%1 ? smain.stato#phi245%1 : ($cond#240%1 && $guard#238%1 ? smain.stato#phi238%1 : ($cond#233%1 && $guard#231%1 ? smain.stato#phi231%1 : smain.stato#phi199%1))))))))
Original statement: smain.stato#phi282%1 == ($guard#280%1 ? smain.stato#phi280%1 : ($cond#275%1 && $guard#273%1 ? smain.stato#phi273%1 : ($cond#268%1 && $guard#266%1 ? smain.stato#phi266%1 : ($cond#261%1 && $guard#259%1 ? smain.stato#phi259%1 : ($cond#254%1 && $guard#252%1 ? smain.stato#phi252%1 : ($cond#247%1 && $guard#245%1 ? smain.stato#phi245%1 : ($cond#240%1 && $guard#238%1 ? smain.stato#phi238%1 : ($cond#233%1 && $guard#231%1 ? smain.stato#phi231%1 : smain.stato#phi199%1))))))))
The statement pushed is $guard#282%1 == ($cond#226%1 && $guard#226%1 || $cond#233%1 && $guard#231%1 || $cond#240%1 && $guard#238%1 || $cond#247%1 && $guard#245%1 || $cond#254%1 && $guard#252%1 || $cond#261%1 && $guard#259%1 || $cond#268%1 && $guard#266%1 || $cond#275%1 && $guard#273%1 || $guard#280%1)
Original statement: $guard#282%1 == ($cond#226%1 && $guard#226%1 || $cond#233%1 && $guard#231%1 || $cond#240%1 && $guard#238%1 || $cond#247%1 && $guard#245%1 || $cond#254%1 && $guard#252%1 || $cond#261%1 && $guard#259%1 || $cond#268%1 && $guard#266%1 || $cond#275%1 && $guard#273%1 || $guard#280%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OVERFLW#283%1 == smain.OVERFLW#phi282%1
Original statement: OVERFLW#283%1 == smain.OVERFLW#phi282%1
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is $cond#291%1 == ((signed int)smain.OVERFLW#phi282%1 == 0)
Original statement: $cond#291%1 == ((signed int)smain.OVERFLW#phi282%1 == 0)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#phi292%1 == ($cond#291%1 && $guard#282%1 ? OUTP#282%1 : OUTP#115%1)
Original statement: OUTP#phi292%1 == ($cond#291%1 && $guard#282%1 ? OUTP#282%1 : OUTP#115%1)
The statement pushed is OVERFLW#phi292%1 == ($cond#291%1 && $guard#282%1 ? OVERFLW#283%1 : OVERFLW#116%1)
Original statement: OVERFLW#phi292%1 == ($cond#291%1 && $guard#282%1 ? OVERFLW#283%1 : OVERFLW#116%1)
The statement pushed is smain.OUTP#phi292%1 == ($cond#291%1 && $guard#282%1 ? smain.OUTP#phi282%1 : smain.OUTP#phi115%1)
Original statement: smain.OUTP#phi292%1 == ($cond#291%1 && $guard#282%1 ? smain.OUTP#phi282%1 : smain.OUTP#phi115%1)
The statement pushed is smain.OVERFLW#phi292%1 == ($cond#291%1 && $guard#282%1 ? smain.OVERFLW#phi282%1 : smain.OVERFLW#phi115%1)
Original statement: smain.OVERFLW#phi292%1 == ($cond#291%1 && $guard#282%1 ? smain.OVERFLW#phi282%1 : smain.OVERFLW#phi115%1)
The statement pushed is smain.stato#phi292%1 == ($cond#291%1 && $guard#282%1 ? smain.stato#phi282%1 : smain.stato#phi115%1)
Original statement: smain.stato#phi292%1 == ($cond#291%1 && $guard#282%1 ? smain.stato#phi282%1 : smain.stato#phi115%1)
The statement pushed is $cond#292%1 == TRUE
Original statement: $cond#292%1 == TRUE
The statement pushed is $guard#292%1 == (!$cond#291%1 && $guard#282%1 || $cond#123%1 && $guard#115%1 || $cond#291%1 && $guard#282%1)
Original statement: $guard#292%1 == (!$cond#291%1 && $guard#282%1 || $cond#123%1 && $guard#115%1 || $cond#291%1 && $guard#282%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
The statement pushed is OUTP#phi39%0 == OUTP#phi292%1
Original statement: OUTP#phi39%0 == OUTP#phi292%1
The statement pushed is OVERFLW#phi39%0 == OVERFLW#phi292%1
Original statement: OVERFLW#phi39%0 == OVERFLW#phi292%1
The statement pushed is smain.OUTP#phi39%0 == smain.OUTP#phi292%1
Original statement: smain.OUTP#phi39%0 == smain.OUTP#phi292%1
The statement pushed is smain.OVERFLW#phi39%0 == smain.OVERFLW#phi292%1
Original statement: smain.OVERFLW#phi39%0 == smain.OVERFLW#phi292%1
The statement pushed is smain.stato#phi39%0 == smain.stato#phi292%1
Original statement: smain.stato#phi39%0 == smain.stato#phi292%1
The statement pushed is $cond#39%0 == FALSE
Original statement: $cond#39%0 == FALSE
The statement pushed is $guard#39%0 == ($guard#292%1 && $cond#292%1)
Original statement: $guard#39%0 == ($guard#292%1 && $cond#292%1)
The enabling expr of node is TRUE
The enabling expr of valid node is TRUE
Original statement: !((signed int)smain.OVERFLW#phi282%1 == 0) || !$guard#282%1
The enabling expr of node is enable1
The enabling expr of valid node is enable1
The statement pushed is OUTP#phi39%1 == ($guard#ls292%1 ? OUTP#lb292%1 : OUTP#29)
Original statement: OUTP#phi39%1 == ($guard#ls292%1 ? OUTP#lb292%1 : OUTP#29)
The statement pushed is OVERFLW#phi39%1 == ($guard#ls292%1 ? OVERFLW#lb292%1 : OVERFLW#31)
Original statement: OVERFLW#phi39%1 == ($guard#ls292%1 ? OVERFLW#lb292%1 : OVERFLW#31)
The statement pushed is smain.OUTP#phi39%1 == ($guard#ls292%1 ? smain.OUTP#lb292%1 : smain.OUTP#36)
Original statement: smain.OUTP#phi39%1 == ($guard#ls292%1 ? smain.OUTP#lb292%1 : smain.OUTP#36)
The statement pushed is smain.OVERFLW#phi39%1 == ($guard#ls292%1 ? smain.OVERFLW#lb292%1 : smain.OVERFLW#37)
Original statement: smain.OVERFLW#phi39%1 == ($guard#ls292%1 ? smain.OVERFLW#lb292%1 : smain.OVERFLW#37)
The statement pushed is smain.stato#phi39%1 == ($guard#ls292%1 ? smain.stato#lb292%1 : smain.stato#35)
Original statement: smain.stato#phi39%1 == ($guard#ls292%1 ? smain.stato#lb292%1 : smain.stato#35)
The statement pushed is $cond#39%1 == FALSE
Original statement: $cond#39%1 == FALSE
The statement pushed is $guard#39%1 == $guard#0
Original statement: $guard#39%1 == $guard#0
The enabling expr of node is enable1
The enabling expr of valid node is enable1
The statement pushed is $cond#39 == ($guard#39%1 && $cond#39%1 ? $cond#39%1 : $cond#39%0)
Original statement: $cond#39 == ($guard#39%1 && $cond#39%1 ? $cond#39%1 : $cond#39%0)
The statement pushed is $guard#39 == ($guard#39%1 && $cond#39%1 ? $guard#39%1 : $guard#39%0)
Original statement: $guard#39 == ($guard#39%1 && $cond#39%1 ? $guard#39%1 : $guard#39%0)
The statement pushed is OUTP#phi39 == ($guard#39%1 && $cond#39%1 ? OUTP#phi39%1 : OUTP#phi39%0)
Original statement: OUTP#phi39 == ($guard#39%1 && $cond#39%1 ? OUTP#phi39%1 : OUTP#phi39%0)
The statement pushed is OVERFLW#phi39 == ($guard#39%1 && $cond#39%1 ? OVERFLW#phi39%1 : OVERFLW#phi39%0)
Original statement: OVERFLW#phi39 == ($guard#39%1 && $cond#39%1 ? OVERFLW#phi39%1 : OVERFLW#phi39%0)
The statement pushed is smain.OUTP#phi39 == ($guard#39%1 && $cond#39%1 ? smain.OUTP#phi39%1 : smain.OUTP#phi39%0)
Original statement: smain.OUTP#phi39 == ($guard#39%1 && $cond#39%1 ? smain.OUTP#phi39%1 : smain.OUTP#phi39%0)
The statement pushed is smain.OVERFLW#phi39 == ($guard#39%1 && $cond#39%1 ? smain.OVERFLW#phi39%1 : smain.OVERFLW#phi39%0)
Original statement: smain.OVERFLW#phi39 == ($guard#39%1 && $cond#39%1 ? smain.OVERFLW#phi39%1 : smain.OVERFLW#phi39%0)
The statement pushed is smain.stato#phi39 == ($guard#39%1 && $cond#39%1 ? smain.stato#phi39%1 : smain.stato#phi39%0)
Original statement: smain.stato#phi39 == ($guard#39%1 && $cond#39%1 ? smain.stato#phi39%1 : smain.stato#phi39%0)
The conjuncted expression is $guard#0 == TRUE && __CPROVER_dead_object#2 == NULL && __CPROVER_deallocated#3 == NULL && __CPROVER_malloc_is_new_array#4 == FALSE && __CPROVER_malloc_object#5 == NULL && __CPROVER_malloc_size#6 == 0ul && __CPROVER_memory_leak#7 == NULL && __CPROVER_next_thread_id#8 == 0ul && __CPROVER_pipe_count#9 == 0u && __CPROVER_rounding_mode#10 == 0 && __CPROVER_thread_id#11 == 0ul && __CPROVER_threads_exited#12 == ARRAY_OF(FALSE) && a#13 == 0 && b#14 == 1 && c#15 == 2 && e#16 == 3 && f#17 == 4 && g#18 == 5 && smain.OUTP#19 == FALSE && smain.OVERFLW#19 == FALSE && smain.stato#19 == 0 && wf0#20 == 6 && wf1#21 == 7 && LINE1#25 == nondet_symbol(ssa::nondet25.1) && LINE2#27 == nondet_symbol(ssa::nondet27.1) && OUTP#29 == nondet_symbol(ssa::nondet29.1) && OVERFLW#31 == nondet_symbol(ssa::nondet31.1) && clock#33 == nondet_symbol(ssa::nondet33.1) && smain.stato#35 == 0 && smain.OUTP#36 == FALSE && smain.OVERFLW#37 == FALSE && $guard#293 == ($cond#39 && $guard#39) && $guard#40%0 == (!$cond#39%0 && $guard#39%0) && LINE1#42%0 == LINE1#25 && LINE2#44%0 == LINE2#27 && OUTP#46%0 == &OUTP && OVERFLW#48%0 == &OVERFLW && clock#50%0 == clock#33 && $cond#51%0 == ((signed int)smain.stato#phi39%0 == 0) && $cond#52%0 == ((signed int)smain.stato#phi39%0 == 3) && $guard#52%0 == (!$cond#51%0 && $guard#40%0) && $cond#53%0 == ((signed int)smain.stato#phi39%0 == 1) && $guard#53%0 == (!$cond#52%0 && $guard#52%0) && $cond#54%0 == ((signed int)smain.stato#phi39%0 == 4) && $guard#54%0 == (!$cond#53%0 && $guard#53%0) && $cond#55%0 == ((signed int)smain.stato#phi39%0 == 2) && $guard#55%0 == (!$cond#54%0 && $guard#54%0) && $cond#56%0 == ((signed int)smain.stato#phi39%0 == 5) && $guard#56%0 == (!$cond#55%0 && $guard#55%0) && $cond#57%0 == ((signed int)smain.stato#phi39%0 == 6) && $guard#57%0 == (!$cond#56%0 && $guard#56%0) && $cond#58%0 == ((signed int)smain.stato#phi39%0 == 7) && $guard#58%0 == (!$cond#57%0 && $guard#57%0) && $cond#59%0 == TRUE && $guard#59%0 == (!$cond#58%0 && $guard#58%0) && $cond#60%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0) && $guard#60%0 == ($cond#51%0 && $guard#40%0) && smain.stato#61%0 == 4 && $guard#61%0 == (!$cond#60%0 && $guard#60%0) && $cond#62%0 == TRUE && smain.stato#63%0 == 1 && $guard#63%0 == ($cond#60%0 && $guard#60%0) && smain.OUTP#64%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0) && smain.stato#phi64%0 == ($guard#63%0 ? smain.stato#63%0 : smain.stato#61%0) && $guard#64%0 == ($cond#62%0 && $guard#61%0 || $guard#63%0) && smain.OVERFLW#65%0 == FALSE && $cond#66%0 == TRUE && $cond#67%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0) && $guard#67%0 == ($cond#52%0 && $guard#52%0) && smain.stato#68%0 == 4 && $guard#68%0 == (!$cond#67%0 && $guard#67%0) && $cond#69%0 == TRUE && smain.stato#70%0 == 1 && $guard#70%0 == ($cond#67%0 && $guard#67%0) && smain.OUTP#71%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0) && smain.stato#phi71%0 == ($guard#70%0 ? smain.stato#70%0 : smain.stato#68%0) && $guard#71%0 == ($cond#69%0 && $guard#68%0 || $guard#70%0) && smain.OVERFLW#72%0 == TRUE && $cond#73%0 == TRUE && $cond#74%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0) && $guard#74%0 == ($cond#53%0 && $guard#53%0) && smain.stato#75%0 == 5 && $guard#75%0 == (!$cond#74%0 && $guard#74%0) && $cond#76%0 == TRUE && smain.stato#77%0 == 2 && $guard#77%0 == ($cond#74%0 && $guard#74%0) && smain.OUTP#78%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0) && smain.stato#phi78%0 == ($guard#77%0 ? smain.stato#77%0 : smain.stato#75%0) && $guard#78%0 == ($cond#76%0 && $guard#75%0 || $guard#77%0) && smain.OVERFLW#79%0 == FALSE && $cond#80%0 == TRUE && $cond#81%0 == (((signed int)LINE1#42%0 | (signed int)LINE2#44%0) == 0) && $guard#81%0 == ($cond#54%0 && $guard#54%0) && smain.stato#82%0 == 5 && $guard#82%0 == (!$cond#81%0 && $guard#81%0) && $cond#83%0 == TRUE && smain.stato#84%0 == 2 && $guard#84%0 == ($cond#81%0 && $guard#81%0) && smain.OUTP#85%0 == !(~((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0) && smain.stato#phi85%0 == ($guard#84%0 ? smain.stato#84%0 : smain.stato#82%0) && $guard#85%0 == ($cond#83%0 && $guard#82%0 || $guard#84%0) && smain.OVERFLW#86%0 == FALSE && $cond#87%0 == TRUE && $cond#88%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0) && $guard#88%0 == ($cond#55%0 && $guard#55%0) && smain.stato#89%0 == 7 && $guard#89%0 == (!$cond#88%0 && $guard#88%0) && $cond#90%0 == TRUE && smain.stato#91%0 == 6 && $guard#91%0 == ($cond#88%0 && $guard#88%0) && smain.OUTP#92%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0) && smain.stato#phi92%0 == ($guard#91%0 ? smain.stato#91%0 : smain.stato#89%0) && $guard#92%0 == ($cond#90%0 && $guard#89%0 || $guard#91%0) && smain.OVERFLW#93%0 == FALSE && $cond#94%0 == TRUE && $cond#95%0 == (((signed int)LINE1#42%0 | (signed int)LINE2#44%0) == 0) && $guard#95%0 == ($cond#56%0 && $guard#56%0) && smain.stato#96%0 == 7 && $guard#96%0 == (!$cond#95%0 && $guard#95%0) && $cond#97%0 == TRUE && smain.stato#98%0 == 6 && $guard#98%0 == ($cond#95%0 && $guard#95%0) && smain.OUTP#99%0 == !(~((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0) && smain.stato#phi99%0 == ($guard#98%0 ? smain.stato#98%0 : smain.stato#96%0) && $guard#99%0 == ($cond#97%0 && $guard#96%0 || $guard#98%0) && smain.OVERFLW#100%0 == FALSE && $cond#101%0 == TRUE && $cond#102%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0) && $guard#102%0 == ($cond#57%0 && $guard#57%0) && smain.stato#103%0 == 3 && $guard#103%0 == (!$cond#102%0 && $guard#102%0) && $cond#104%0 == TRUE && smain.stato#105%0 == 0 && $guard#105%0 == ($cond#102%0 && $guard#102%0) && smain.OUTP#106%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0) && smain.stato#phi106%0 == ($guard#105%0 ? smain.stato#105%0 : smain.stato#103%0) && $guard#106%0 == ($cond#104%0 && $guard#103%0 || $guard#105%0) && smain.OVERFLW#107%0 == FALSE && $cond#108%0 == TRUE && $cond#109%0 == (((signed int)LINE1#42%0 | (signed int)LINE2#44%0) == 0) && $guard#109%0 == ($cond#58%0 && $guard#58%0) && smain.stato#110%0 == 3 && $guard#110%0 == (!$cond#109%0 && $guard#109%0) && $cond#111%0 == TRUE && smain.stato#112%0 == 0 && $guard#112%0 == ($cond#109%0 && $guard#109%0) && smain.OUTP#113%0 == !(~((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0) && smain.stato#phi113%0 == ($guard#112%0 ? smain.stato#112%0 : smain.stato#110%0) && $guard#113%0 == ($cond#111%0 && $guard#110%0 || $guard#112%0) && smain.OVERFLW#114%0 == FALSE && OUTP#115%0 == smain.OUTP#phi115%0 && smain.OUTP#phi115%0 == ($guard#113%0 ? smain.OUTP#113%0 : ($cond#108%0 && $guard#106%0 ? smain.OUTP#106%0 : ($cond#101%0 && $guard#99%0 ? smain.OUTP#99%0 : ($cond#94%0 && $guard#92%0 ? smain.OUTP#92%0 : ($cond#87%0 && $guard#85%0 ? smain.OUTP#85%0 : ($cond#80%0 && $guard#78%0 ? smain.OUTP#78%0 : ($cond#73%0 && $guard#71%0 ? smain.OUTP#71%0 : ($cond#66%0 && $guard#64%0 ? smain.OUTP#64%0 : smain.OUTP#phi39%0)))))))) && smain.OVERFLW#phi115%0 == ($guard#113%0 ? smain.OVERFLW#114%0 : ($cond#108%0 && $guard#106%0 ? smain.OVERFLW#107%0 : ($cond#101%0 && $guard#99%0 ? smain.OVERFLW#100%0 : ($cond#94%0 && $guard#92%0 ? smain.OVERFLW#93%0 : ($cond#87%0 && $guard#85%0 ? smain.OVERFLW#86%0 : ($cond#80%0 && $guard#78%0 ? smain.OVERFLW#79%0 : ($cond#73%0 && $guard#71%0 ? smain.OVERFLW#72%0 : ($cond#66%0 && $guard#64%0 ? smain.OVERFLW#65%0 : smain.OVERFLW#phi39%0)))))))) && smain.stato#phi115%0 == ($guard#113%0 ? smain.stato#phi113%0 : ($cond#108%0 && $guard#106%0 ? smain.stato#phi106%0 : ($cond#101%0 && $guard#99%0 ? smain.stato#phi99%0 : ($cond#94%0 && $guard#92%0 ? smain.stato#phi92%0 : ($cond#87%0 && $guard#85%0 ? smain.stato#phi85%0 : ($cond#80%0 && $guard#78%0 ? smain.stato#phi78%0 : ($cond#73%0 && $guard#71%0 ? smain.stato#phi71%0 : ($cond#66%0 && $guard#64%0 ? smain.stato#phi64%0 : smain.stato#phi39%0)))))))) && $guard#115%0 == ($cond#101%0 && $guard#99%0 || $cond#108%0 && $guard#106%0 || $cond#59%0 && $guard#59%0 || $cond#66%0 && $guard#64%0 || $cond#73%0 && $guard#71%0 || $cond#80%0 && $guard#78%0 || $cond#87%0 && $guard#85%0 || $cond#94%0 && $guard#92%0 || $guard#113%0) && OVERFLW#116%0 == smain.OVERFLW#phi115%0 && $cond#123%0 == !((signed int)smain.OVERFLW#phi115%0 == 1) && $guard#124%0 == (!$cond#123%0 && $guard#115%0) && LINE1#126%0 == LINE1#25 && LINE2#128%0 == LINE2#27 && OUTP#130%0 == &OUTP && OVERFLW#132%0 == &OVERFLW && clock#134%0 == clock#33 && $cond#135%0 == ((signed int)smain.stato#phi115%0 == 0) && $cond#136%0 == ((signed int)smain.stato#phi115%0 == 3) && $guard#136%0 == (!$cond#135%0 && $guard#124%0) && $cond#137%0 == ((signed int)smain.stato#phi115%0 == 1) && $guard#137%0 == (!$cond#136%0 && $guard#136%0) && $cond#138%0 == ((signed int)smain.stato#phi115%0 == 4) && $guard#138%0 == (!$cond#137%0 && $guard#137%0) && $cond#139%0 == ((signed int)smain.stato#phi115%0 == 2) && $guard#139%0 == (!$cond#138%0 && $guard#138%0) && $cond#140%0 == ((signed int)smain.stato#phi115%0 == 5) && $guard#140%0 == (!$cond#139%0 && $guard#139%0) && $cond#141%0 == ((signed int)smain.stato#phi115%0 == 6) && $guard#141%0 == (!$cond#140%0 && $guard#140%0) && $cond#142%0 == ((signed int)smain.stato#phi115%0 == 7) && $guard#142%0 == (!$cond#141%0 && $guard#141%0) && $cond#143%0 == TRUE && $guard#143%0 == (!$cond#142%0 && $guard#142%0) && $cond#144%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0) && $guard#144%0 == ($cond#135%0 && $guard#124%0) && smain.stato#145%0 == 4 && $guard#145%0 == (!$cond#144%0 && $guard#144%0) && $cond#146%0 == TRUE && smain.stato#147%0 == 1 && $guard#147%0 == ($cond#144%0 && $guard#144%0) && smain.OUTP#148%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0) && smain.stato#phi148%0 == ($guard#147%0 ? smain.stato#147%0 : smain.stato#145%0) && $guard#148%0 == ($cond#146%0 && $guard#145%0 || $guard#147%0) && smain.OVERFLW#149%0 == FALSE && $cond#150%0 == TRUE && $cond#151%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0) && $guard#151%0 == ($cond#136%0 && $guard#136%0) && smain.stato#152%0 == 4 && $guard#152%0 == (!$cond#151%0 && $guard#151%0) && $cond#153%0 == TRUE && smain.stato#154%0 == 1 && $guard#154%0 == ($cond#151%0 && $guard#151%0) && smain.OUTP#155%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0) && smain.stato#phi155%0 == ($guard#154%0 ? smain.stato#154%0 : smain.stato#152%0) && $guard#155%0 == ($cond#153%0 && $guard#152%0 || $guard#154%0) && smain.OVERFLW#156%0 == TRUE && $cond#157%0 == TRUE && $cond#158%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0) && $guard#158%0 == ($cond#137%0 && $guard#137%0) && smain.stato#159%0 == 5 && $guard#159%0 == (!$cond#158%0 && $guard#158%0) && $cond#160%0 == TRUE && smain.stato#161%0 == 2 && $guard#161%0 == ($cond#158%0 && $guard#158%0) && smain.OUTP#162%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0) && smain.stato#phi162%0 == ($guard#161%0 ? smain.stato#161%0 : smain.stato#159%0) && $guard#162%0 == ($cond#160%0 && $guard#159%0 || $guard#161%0) && smain.OVERFLW#163%0 == FALSE && $cond#164%0 == TRUE && $cond#165%0 == (((signed int)LINE1#126%0 | (signed int)LINE2#128%0) == 0) && $guard#165%0 == ($cond#138%0 && $guard#138%0) && smain.stato#166%0 == 5 && $guard#166%0 == (!$cond#165%0 && $guard#165%0) && $cond#167%0 == TRUE && smain.stato#168%0 == 2 && $guard#168%0 == ($cond#165%0 && $guard#165%0) && smain.OUTP#169%0 == !(~((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0) && smain.stato#phi169%0 == ($guard#168%0 ? smain.stato#168%0 : smain.stato#166%0) && $guard#169%0 == ($cond#167%0 && $guard#166%0 || $guard#168%0) && smain.OVERFLW#170%0 == FALSE && $cond#171%0 == TRUE && $cond#172%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0) && $guard#172%0 == ($cond#139%0 && $guard#139%0) && smain.stato#173%0 == 7 && $guard#173%0 == (!$cond#172%0 && $guard#172%0) && $cond#174%0 == TRUE && smain.stato#175%0 == 6 && $guard#175%0 == ($cond#172%0 && $guard#172%0) && smain.OUTP#176%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0) && smain.stato#phi176%0 == ($guard#175%0 ? smain.stato#175%0 : smain.stato#173%0) && $guard#176%0 == ($cond#174%0 && $guard#173%0 || $guard#175%0) && smain.OVERFLW#177%0 == FALSE && $cond#178%0 == TRUE && $cond#179%0 == (((signed int)LINE1#126%0 | (signed int)LINE2#128%0) == 0) && $guard#179%0 == ($cond#140%0 && $guard#140%0) && smain.stato#180%0 == 7 && $guard#180%0 == (!$cond#179%0 && $guard#179%0) && $cond#181%0 == TRUE && smain.stato#182%0 == 6 && $guard#182%0 == ($cond#179%0 && $guard#179%0) && smain.OUTP#183%0 == !(~((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0) && smain.stato#phi183%0 == ($guard#182%0 ? smain.stato#182%0 : smain.stato#180%0) && $guard#183%0 == ($cond#181%0 && $guard#180%0 || $guard#182%0) && smain.OVERFLW#184%0 == FALSE && $cond#185%0 == TRUE && $cond#186%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0) && $guard#186%0 == ($cond#141%0 && $guard#141%0) && smain.stato#187%0 == 3 && $guard#187%0 == (!$cond#186%0 && $guard#186%0) && $cond#188%0 == TRUE && smain.stato#189%0 == 0 && $guard#189%0 == ($cond#186%0 && $guard#186%0) && smain.OUTP#190%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0) && smain.stato#phi190%0 == ($guard#189%0 ? smain.stato#189%0 : smain.stato#187%0) && $guard#190%0 == ($cond#188%0 && $guard#187%0 || $guard#189%0) && smain.OVERFLW#191%0 == FALSE && $cond#192%0 == TRUE && $cond#193%0 == (((signed int)LINE1#126%0 | (signed int)LINE2#128%0) == 0) && $guard#193%0 == ($cond#142%0 && $guard#142%0) && smain.stato#194%0 == 3 && $guard#194%0 == (!$cond#193%0 && $guard#193%0) && $cond#195%0 == TRUE && smain.stato#196%0 == 0 && $guard#196%0 == ($cond#193%0 && $guard#193%0) && smain.OUTP#197%0 == !(~((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0) && smain.stato#phi197%0 == ($guard#196%0 ? smain.stato#196%0 : smain.stato#194%0) && $guard#197%0 == ($cond#195%0 && $guard#194%0 || $guard#196%0) && smain.OVERFLW#198%0 == FALSE && OUTP#199%0 == smain.OUTP#phi199%0 && smain.OUTP#phi199%0 == ($guard#197%0 ? smain.OUTP#197%0 : ($cond#192%0 && $guard#190%0 ? smain.OUTP#190%0 : ($cond#185%0 && $guard#183%0 ? smain.OUTP#183%0 : ($cond#178%0 && $guard#176%0 ? smain.OUTP#176%0 : ($cond#171%0 && $guard#169%0 ? smain.OUTP#169%0 : ($cond#164%0 && $guard#162%0 ? smain.OUTP#162%0 : ($cond#157%0 && $guard#155%0 ? smain.OUTP#155%0 : ($cond#150%0 && $guard#148%0 ? smain.OUTP#148%0 : smain.OUTP#phi115%0)))))))) && smain.OVERFLW#phi199%0 == ($guard#197%0 ? smain.OVERFLW#198%0 : ($cond#192%0 && $guard#190%0 ? smain.OVERFLW#191%0 : ($cond#185%0 && $guard#183%0 ? smain.OVERFLW#184%0 : ($cond#178%0 && $guard#176%0 ? smain.OVERFLW#177%0 : ($cond#171%0 && $guard#169%0 ? smain.OVERFLW#170%0 : ($cond#164%0 && $guard#162%0 ? smain.OVERFLW#163%0 : ($cond#157%0 && $guard#155%0 ? smain.OVERFLW#156%0 : ($cond#150%0 && $guard#148%0 ? smain.OVERFLW#149%0 : smain.OVERFLW#phi115%0)))))))) && smain.stato#phi199%0 == ($guard#197%0 ? smain.stato#phi197%0 : ($cond#192%0 && $guard#190%0 ? smain.stato#phi190%0 : ($cond#185%0 && $guard#183%0 ? smain.stato#phi183%0 : ($cond#178%0 && $guard#176%0 ? smain.stato#phi176%0 : ($cond#171%0 && $guard#169%0 ? smain.stato#phi169%0 : ($cond#164%0 && $guard#162%0 ? smain.stato#phi162%0 : ($cond#157%0 && $guard#155%0 ? smain.stato#phi155%0 : ($cond#150%0 && $guard#148%0 ? smain.stato#phi148%0 : smain.stato#phi115%0)))))))) && $guard#199%0 == ($cond#143%0 && $guard#143%0 || $cond#150%0 && $guard#148%0 || $cond#157%0 && $guard#155%0 || $cond#164%0 && $guard#162%0 || $cond#171%0 && $guard#169%0 || $cond#178%0 && $guard#176%0 || $cond#185%0 && $guard#183%0 || $cond#192%0 && $guard#190%0 || $guard#197%0) && OVERFLW#200%0 == smain.OVERFLW#phi199%0 && LINE1#209%0 == LINE1#25 && LINE2#211%0 == LINE2#27 && OUTP#213%0 == &OUTP && OVERFLW#215%0 == &OVERFLW && clock#217%0 == clock#33 && $cond#218%0 == ((signed int)smain.stato#phi199%0 == 0) && $cond#219%0 == ((signed int)smain.stato#phi199%0 == 3) && $guard#219%0 == (!$cond#218%0 && $guard#199%0) && $cond#220%0 == ((signed int)smain.stato#phi199%0 == 1) && $guard#220%0 == (!$cond#219%0 && $guard#219%0) && $cond#221%0 == ((signed int)smain.stato#phi199%0 == 4) && $guard#221%0 == (!$cond#220%0 && $guard#220%0) && $cond#222%0 == ((signed int)smain.stato#phi199%0 == 2) && $guard#222%0 == (!$cond#221%0 && $guard#221%0) && $cond#223%0 == ((signed int)smain.stato#phi199%0 == 5) && $guard#223%0 == (!$cond#222%0 && $guard#222%0) && $cond#224%0 == ((signed int)smain.stato#phi199%0 == 6) && $guard#224%0 == (!$cond#223%0 && $guard#223%0) && $cond#225%0 == ((signed int)smain.stato#phi199%0 == 7) && $guard#225%0 == (!$cond#224%0 && $guard#224%0) && $cond#226%0 == TRUE && $guard#226%0 == (!$cond#225%0 && $guard#225%0) && $cond#227%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0) && $guard#227%0 == ($cond#218%0 && $guard#199%0) && smain.stato#228%0 == 4 && $guard#228%0 == (!$cond#227%0 && $guard#227%0) && $cond#229%0 == TRUE && smain.stato#230%0 == 1 && $guard#230%0 == ($cond#227%0 && $guard#227%0) && smain.OUTP#231%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0) && smain.stato#phi231%0 == ($guard#230%0 ? smain.stato#230%0 : smain.stato#228%0) && $guard#231%0 == ($cond#229%0 && $guard#228%0 || $guard#230%0) && smain.OVERFLW#232%0 == FALSE && $cond#233%0 == TRUE && $cond#234%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0) && $guard#234%0 == ($cond#219%0 && $guard#219%0) && smain.stato#235%0 == 4 && $guard#235%0 == (!$cond#234%0 && $guard#234%0) && $cond#236%0 == TRUE && smain.stato#237%0 == 1 && $guard#237%0 == ($cond#234%0 && $guard#234%0) && smain.OUTP#238%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0) && smain.stato#phi238%0 == ($guard#237%0 ? smain.stato#237%0 : smain.stato#235%0) && $guard#238%0 == ($cond#236%0 && $guard#235%0 || $guard#237%0) && smain.OVERFLW#239%0 == TRUE && $cond#240%0 == TRUE && $cond#241%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0) && $guard#241%0 == ($cond#220%0 && $guard#220%0) && smain.stato#242%0 == 5 && $guard#242%0 == (!$cond#241%0 && $guard#241%0) && $cond#243%0 == TRUE && smain.stato#244%0 == 2 && $guard#244%0 == ($cond#241%0 && $guard#241%0) && smain.OUTP#245%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0) && smain.stato#phi245%0 == ($guard#244%0 ? smain.stato#244%0 : smain.stato#242%0) && $guard#245%0 == ($cond#243%0 && $guard#242%0 || $guard#244%0) && smain.OVERFLW#246%0 == FALSE && $cond#247%0 == TRUE && $cond#248%0 == (((signed int)LINE1#209%0 | (signed int)LINE2#211%0) == 0) && $guard#248%0 == ($cond#221%0 && $guard#221%0) && smain.stato#249%0 == 5 && $guard#249%0 == (!$cond#248%0 && $guard#248%0) && $cond#250%0 == TRUE && smain.stato#251%0 == 2 && $guard#251%0 == ($cond#248%0 && $guard#248%0) && smain.OUTP#252%0 == !(~((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0) && smain.stato#phi252%0 == ($guard#251%0 ? smain.stato#251%0 : smain.stato#249%0) && $guard#252%0 == ($cond#250%0 && $guard#249%0 || $guard#251%0) && smain.OVERFLW#253%0 == FALSE && $cond#254%0 == TRUE && $cond#255%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0) && $guard#255%0 == ($cond#222%0 && $guard#222%0) && smain.stato#256%0 == 7 && $guard#256%0 == (!$cond#255%0 && $guard#255%0) && $cond#257%0 == TRUE && smain.stato#258%0 == 6 && $guard#258%0 == ($cond#255%0 && $guard#255%0) && smain.OUTP#259%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0) && smain.stato#phi259%0 == ($guard#258%0 ? smain.stato#258%0 : smain.stato#256%0) && $guard#259%0 == ($cond#257%0 && $guard#256%0 || $guard#258%0) && smain.OVERFLW#260%0 == FALSE && $cond#261%0 == TRUE && $cond#262%0 == (((signed int)LINE1#209%0 | (signed int)LINE2#211%0) == 0) && $guard#262%0 == ($cond#223%0 && $guard#223%0) && smain.stato#263%0 == 7 && $guard#263%0 == (!$cond#262%0 && $guard#262%0) && $cond#264%0 == TRUE && smain.stato#265%0 == 6 && $guard#265%0 == ($cond#262%0 && $guard#262%0) && smain.OUTP#266%0 == !(~((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0) && smain.stato#phi266%0 == ($guard#265%0 ? smain.stato#265%0 : smain.stato#263%0) && $guard#266%0 == ($cond#264%0 && $guard#263%0 || $guard#265%0) && smain.OVERFLW#267%0 == FALSE && $cond#268%0 == TRUE && $cond#269%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0) && $guard#269%0 == ($cond#224%0 && $guard#224%0) && smain.stato#270%0 == 3 && $guard#270%0 == (!$cond#269%0 && $guard#269%0) && $cond#271%0 == TRUE && smain.stato#272%0 == 0 && $guard#272%0 == ($cond#269%0 && $guard#269%0) && smain.OUTP#273%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0) && smain.stato#phi273%0 == ($guard#272%0 ? smain.stato#272%0 : smain.stato#270%0) && $guard#273%0 == ($cond#271%0 && $guard#270%0 || $guard#272%0) && smain.OVERFLW#274%0 == FALSE && $cond#275%0 == TRUE && $cond#276%0 == (((signed int)LINE1#209%0 | (signed int)LINE2#211%0) == 0) && $guard#276%0 == ($cond#225%0 && $guard#225%0) && smain.stato#277%0 == 3 && $guard#277%0 == (!$cond#276%0 && $guard#276%0) && $cond#278%0 == TRUE && smain.stato#279%0 == 0 && $guard#279%0 == ($cond#276%0 && $guard#276%0) && smain.OUTP#280%0 == !(~((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0) && smain.stato#phi280%0 == ($guard#279%0 ? smain.stato#279%0 : smain.stato#277%0) && $guard#280%0 == ($cond#278%0 && $guard#277%0 || $guard#279%0) && smain.OVERFLW#281%0 == FALSE && OUTP#282%0 == smain.OUTP#phi282%0 && smain.OUTP#phi282%0 == ($guard#280%0 ? smain.OUTP#280%0 : ($cond#275%0 && $guard#273%0 ? smain.OUTP#273%0 : ($cond#268%0 && $guard#266%0 ? smain.OUTP#266%0 : ($cond#261%0 && $guard#259%0 ? smain.OUTP#259%0 : ($cond#254%0 && $guard#252%0 ? smain.OUTP#252%0 : ($cond#247%0 && $guard#245%0 ? smain.OUTP#245%0 : ($cond#240%0 && $guard#238%0 ? smain.OUTP#238%0 : ($cond#233%0 && $guard#231%0 ? smain.OUTP#231%0 : smain.OUTP#phi199%0)))))))) && smain.OVERFLW#phi282%0 == ($guard#280%0 ? smain.OVERFLW#281%0 : ($cond#275%0 && $guard#273%0 ? smain.OVERFLW#274%0 : ($cond#268%0 && $guard#266%0 ? smain.OVERFLW#267%0 : ($cond#261%0 && $guard#259%0 ? smain.OVERFLW#260%0 : ($cond#254%0 && $guard#252%0 ? smain.OVERFLW#253%0 : ($cond#247%0 && $guard#245%0 ? smain.OVERFLW#246%0 : ($cond#240%0 && $guard#238%0 ? smain.OVERFLW#239%0 : ($cond#233%0 && $guard#231%0 ? smain.OVERFLW#232%0 : smain.OVERFLW#phi199%0)))))))) && smain.stato#phi282%0 == ($guard#280%0 ? smain.stato#phi280%0 : ($cond#275%0 && $guard#273%0 ? smain.stato#phi273%0 : ($cond#268%0 && $guard#266%0 ? smain.stato#phi266%0 : ($cond#261%0 && $guard#259%0 ? smain.stato#phi259%0 : ($cond#254%0 && $guard#252%0 ? smain.stato#phi252%0 : ($cond#247%0 && $guard#245%0 ? smain.stato#phi245%0 : ($cond#240%0 && $guard#238%0 ? smain.stato#phi238%0 : ($cond#233%0 && $guard#231%0 ? smain.stato#phi231%0 : smain.stato#phi199%0)))))))) && $guard#282%0 == ($cond#226%0 && $guard#226%0 || $cond#233%0 && $guard#231%0 || $cond#240%0 && $guard#238%0 || $cond#247%0 && $guard#245%0 || $cond#254%0 && $guard#252%0 || $cond#261%0 && $guard#259%0 || $cond#268%0 && $guard#266%0 || $cond#275%0 && $guard#273%0 || $guard#280%0) && OVERFLW#283%0 == smain.OVERFLW#phi282%0 && $cond#291%0 == ((signed int)smain.OVERFLW#phi282%0 == 0) && OUTP#phi292%0 == ($cond#291%0 && $guard#282%0 ? OUTP#282%0 : OUTP#115%0) && OVERFLW#phi292%0 == ($cond#291%0 && $guard#282%0 ? OVERFLW#283%0 : OVERFLW#116%0) && smain.OUTP#phi292%0 == ($cond#291%0 && $guard#282%0 ? smain.OUTP#phi282%0 : smain.OUTP#phi115%0) && smain.OVERFLW#phi292%0 == ($cond#291%0 && $guard#282%0 ? smain.OVERFLW#phi282%0 : smain.OVERFLW#phi115%0) && smain.stato#phi292%0 == ($cond#291%0 && $guard#282%0 ? smain.stato#phi282%0 : smain.stato#phi115%0) && $cond#292%0 == TRUE && $guard#292%0 == (!$cond#291%0 && $guard#282%0 || $cond#123%0 && $guard#115%0 || $cond#291%0 && $guard#282%0) && (!((signed int)smain.OVERFLW#phi282%0 == 0) || !$guard#282%0) && $guard#40%1 == (!$cond#39%1 && $guard#39%1) && LINE1#42%1 == LINE1#25 && LINE2#44%1 == LINE2#27 && OUTP#46%1 == &OUTP && OVERFLW#48%1 == &OVERFLW && clock#50%1 == clock#33 && $cond#51%1 == ((signed int)smain.stato#phi39%1 == 0) && $cond#52%1 == ((signed int)smain.stato#phi39%1 == 3) && $guard#52%1 == (!$cond#51%1 && $guard#40%1) && $cond#53%1 == ((signed int)smain.stato#phi39%1 == 1) && $guard#53%1 == (!$cond#52%1 && $guard#52%1) && $cond#54%1 == ((signed int)smain.stato#phi39%1 == 4) && $guard#54%1 == (!$cond#53%1 && $guard#53%1) && $cond#55%1 == ((signed int)smain.stato#phi39%1 == 2) && $guard#55%1 == (!$cond#54%1 && $guard#54%1) && $cond#56%1 == ((signed int)smain.stato#phi39%1 == 5) && $guard#56%1 == (!$cond#55%1 && $guard#55%1) && $cond#57%1 == ((signed int)smain.stato#phi39%1 == 6) && $guard#57%1 == (!$cond#56%1 && $guard#56%1) && $cond#58%1 == ((signed int)smain.stato#phi39%1 == 7) && $guard#58%1 == (!$cond#57%1 && $guard#57%1) && $cond#59%1 == TRUE && $guard#59%1 == (!$cond#58%1 && $guard#58%1) && $cond#60%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0) && $guard#60%1 == ($cond#51%1 && $guard#40%1) && smain.stato#61%1 == 4 && $guard#61%1 == (!$cond#60%1 && $guard#60%1) && $cond#62%1 == TRUE && smain.stato#63%1 == 1 && $guard#63%1 == ($cond#60%1 && $guard#60%1) && smain.OUTP#64%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0) && smain.stato#phi64%1 == ($guard#63%1 ? smain.stato#63%1 : smain.stato#61%1) && $guard#64%1 == ($cond#62%1 && $guard#61%1 || $guard#63%1) && smain.OVERFLW#65%1 == FALSE && $cond#66%1 == TRUE && $cond#67%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0) && $guard#67%1 == ($cond#52%1 && $guard#52%1) && smain.stato#68%1 == 4 && $guard#68%1 == (!$cond#67%1 && $guard#67%1) && $cond#69%1 == TRUE && smain.stato#70%1 == 1 && $guard#70%1 == ($cond#67%1 && $guard#67%1) && smain.OUTP#71%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0) && smain.stato#phi71%1 == ($guard#70%1 ? smain.stato#70%1 : smain.stato#68%1) && $guard#71%1 == ($cond#69%1 && $guard#68%1 || $guard#70%1) && smain.OVERFLW#72%1 == TRUE && $cond#73%1 == TRUE && $cond#74%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0) && $guard#74%1 == ($cond#53%1 && $guard#53%1) && smain.stato#75%1 == 5 && $guard#75%1 == (!$cond#74%1 && $guard#74%1) && $cond#76%1 == TRUE && smain.stato#77%1 == 2 && $guard#77%1 == ($cond#74%1 && $guard#74%1) && smain.OUTP#78%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0) && smain.stato#phi78%1 == ($guard#77%1 ? smain.stato#77%1 : smain.stato#75%1) && $guard#78%1 == ($cond#76%1 && $guard#75%1 || $guard#77%1) && smain.OVERFLW#79%1 == FALSE && $cond#80%1 == TRUE && $cond#81%1 == (((signed int)LINE1#42%1 | (signed int)LINE2#44%1) == 0) && $guard#81%1 == ($cond#54%1 && $guard#54%1) && smain.stato#82%1 == 5 && $guard#82%1 == (!$cond#81%1 && $guard#81%1) && $cond#83%1 == TRUE && smain.stato#84%1 == 2 && $guard#84%1 == ($cond#81%1 && $guard#81%1) && smain.OUTP#85%1 == !(~((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0) && smain.stato#phi85%1 == ($guard#84%1 ? smain.stato#84%1 : smain.stato#82%1) && $guard#85%1 == ($cond#83%1 && $guard#82%1 || $guard#84%1) && smain.OVERFLW#86%1 == FALSE && $cond#87%1 == TRUE && $cond#88%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0) && $guard#88%1 == ($cond#55%1 && $guard#55%1) && smain.stato#89%1 == 7 && $guard#89%1 == (!$cond#88%1 && $guard#88%1) && $cond#90%1 == TRUE && smain.stato#91%1 == 6 && $guard#91%1 == ($cond#88%1 && $guard#88%1) && smain.OUTP#92%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0) && smain.stato#phi92%1 == ($guard#91%1 ? smain.stato#91%1 : smain.stato#89%1) && $guard#92%1 == ($cond#90%1 && $guard#89%1 || $guard#91%1) && smain.OVERFLW#93%1 == FALSE && $cond#94%1 == TRUE && $cond#95%1 == (((signed int)LINE1#42%1 | (signed int)LINE2#44%1) == 0) && $guard#95%1 == ($cond#56%1 && $guard#56%1) && smain.stato#96%1 == 7 && $guard#96%1 == (!$cond#95%1 && $guard#95%1) && $cond#97%1 == TRUE && smain.stato#98%1 == 6 && $guard#98%1 == ($cond#95%1 && $guard#95%1) && smain.OUTP#99%1 == !(~((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0) && smain.stato#phi99%1 == ($guard#98%1 ? smain.stato#98%1 : smain.stato#96%1) && $guard#99%1 == ($cond#97%1 && $guard#96%1 || $guard#98%1) && smain.OVERFLW#100%1 == FALSE && $cond#101%1 == TRUE && $cond#102%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0) && $guard#102%1 == ($cond#57%1 && $guard#57%1) && smain.stato#103%1 == 3 && $guard#103%1 == (!$cond#102%1 && $guard#102%1) && $cond#104%1 == TRUE && smain.stato#105%1 == 0 && $guard#105%1 == ($cond#102%1 && $guard#102%1) && smain.OUTP#106%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0) && smain.stato#phi106%1 == ($guard#105%1 ? smain.stato#105%1 : smain.stato#103%1) && $guard#106%1 == ($cond#104%1 && $guard#103%1 || $guard#105%1) && smain.OVERFLW#107%1 == FALSE && $cond#108%1 == TRUE && $cond#109%1 == (((signed int)LINE1#42%1 | (signed int)LINE2#44%1) == 0) && $guard#109%1 == ($cond#58%1 && $guard#58%1) && smain.stato#110%1 == 3 && $guard#110%1 == (!$cond#109%1 && $guard#109%1) && $cond#111%1 == TRUE && smain.stato#112%1 == 0 && $guard#112%1 == ($cond#109%1 && $guard#109%1) && smain.OUTP#113%1 == !(~((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0) && smain.stato#phi113%1 == ($guard#112%1 ? smain.stato#112%1 : smain.stato#110%1) && $guard#113%1 == ($cond#111%1 && $guard#110%1 || $guard#112%1) && smain.OVERFLW#114%1 == FALSE && OUTP#115%1 == smain.OUTP#phi115%1 && smain.OUTP#phi115%1 == ($guard#113%1 ? smain.OUTP#113%1 : ($cond#108%1 && $guard#106%1 ? smain.OUTP#106%1 : ($cond#101%1 && $guard#99%1 ? smain.OUTP#99%1 : ($cond#94%1 && $guard#92%1 ? smain.OUTP#92%1 : ($cond#87%1 && $guard#85%1 ? smain.OUTP#85%1 : ($cond#80%1 && $guard#78%1 ? smain.OUTP#78%1 : ($cond#73%1 && $guard#71%1 ? smain.OUTP#71%1 : ($cond#66%1 && $guard#64%1 ? smain.OUTP#64%1 : smain.OUTP#phi39%1)))))))) && smain.OVERFLW#phi115%1 == ($guard#113%1 ? smain.OVERFLW#114%1 : ($cond#108%1 && $guard#106%1 ? smain.OVERFLW#107%1 : ($cond#101%1 && $guard#99%1 ? smain.OVERFLW#100%1 : ($cond#94%1 && $guard#92%1 ? smain.OVERFLW#93%1 : ($cond#87%1 && $guard#85%1 ? smain.OVERFLW#86%1 : ($cond#80%1 && $guard#78%1 ? smain.OVERFLW#79%1 : ($cond#73%1 && $guard#71%1 ? smain.OVERFLW#72%1 : ($cond#66%1 && $guard#64%1 ? smain.OVERFLW#65%1 : smain.OVERFLW#phi39%1)))))))) && smain.stato#phi115%1 == ($guard#113%1 ? smain.stato#phi113%1 : ($cond#108%1 && $guard#106%1 ? smain.stato#phi106%1 : ($cond#101%1 && $guard#99%1 ? smain.stato#phi99%1 : ($cond#94%1 && $guard#92%1 ? smain.stato#phi92%1 : ($cond#87%1 && $guard#85%1 ? smain.stato#phi85%1 : ($cond#80%1 && $guard#78%1 ? smain.stato#phi78%1 : ($cond#73%1 && $guard#71%1 ? smain.stato#phi71%1 : ($cond#66%1 && $guard#64%1 ? smain.stato#phi64%1 : smain.stato#phi39%1)))))))) && $guard#115%1 == ($cond#101%1 && $guard#99%1 || $cond#108%1 && $guard#106%1 || $cond#59%1 && $guard#59%1 || $cond#66%1 && $guard#64%1 || $cond#73%1 && $guard#71%1 || $cond#80%1 && $guard#78%1 || $cond#87%1 && $guard#85%1 || $cond#94%1 && $guard#92%1 || $guard#113%1) && OVERFLW#116%1 == smain.OVERFLW#phi115%1 && $cond#123%1 == !((signed int)smain.OVERFLW#phi115%1 == 1) && $guard#124%1 == (!$cond#123%1 && $guard#115%1) && LINE1#126%1 == LINE1#25 && LINE2#128%1 == LINE2#27 && OUTP#130%1 == &OUTP && OVERFLW#132%1 == &OVERFLW && clock#134%1 == clock#33 && $cond#135%1 == ((signed int)smain.stato#phi115%1 == 0) && $cond#136%1 == ((signed int)smain.stato#phi115%1 == 3) && $guard#136%1 == (!$cond#135%1 && $guard#124%1) && $cond#137%1 == ((signed int)smain.stato#phi115%1 == 1) && $guard#137%1 == (!$cond#136%1 && $guard#136%1) && $cond#138%1 == ((signed int)smain.stato#phi115%1 == 4) && $guard#138%1 == (!$cond#137%1 && $guard#137%1) && $cond#139%1 == ((signed int)smain.stato#phi115%1 == 2) && $guard#139%1 == (!$cond#138%1 && $guard#138%1) && $cond#140%1 == ((signed int)smain.stato#phi115%1 == 5) && $guard#140%1 == (!$cond#139%1 && $guard#139%1) && $cond#141%1 == ((signed int)smain.stato#phi115%1 == 6) && $guard#141%1 == (!$cond#140%1 && $guard#140%1) && $cond#142%1 == ((signed int)smain.stato#phi115%1 == 7) && $guard#142%1 == (!$cond#141%1 && $guard#141%1) && $cond#143%1 == TRUE && $guard#143%1 == (!$cond#142%1 && $guard#142%1) && $cond#144%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0) && $guard#144%1 == ($cond#135%1 && $guard#124%1) && smain.stato#145%1 == 4 && $guard#145%1 == (!$cond#144%1 && $guard#144%1) && $cond#146%1 == TRUE && smain.stato#147%1 == 1 && $guard#147%1 == ($cond#144%1 && $guard#144%1) && smain.OUTP#148%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0) && smain.stato#phi148%1 == ($guard#147%1 ? smain.stato#147%1 : smain.stato#145%1) && $guard#148%1 == ($cond#146%1 && $guard#145%1 || $guard#147%1) && smain.OVERFLW#149%1 == FALSE && $cond#150%1 == TRUE && $cond#151%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0) && $guard#151%1 == ($cond#136%1 && $guard#136%1) && smain.stato#152%1 == 4 && $guard#152%1 == (!$cond#151%1 && $guard#151%1) && $cond#153%1 == TRUE && smain.stato#154%1 == 1 && $guard#154%1 == ($cond#151%1 && $guard#151%1) && smain.OUTP#155%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0) && smain.stato#phi155%1 == ($guard#154%1 ? smain.stato#154%1 : smain.stato#152%1) && $guard#155%1 == ($cond#153%1 && $guard#152%1 || $guard#154%1) && smain.OVERFLW#156%1 == TRUE && $cond#157%1 == TRUE && $cond#158%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0) && $guard#158%1 == ($cond#137%1 && $guard#137%1) && smain.stato#159%1 == 5 && $guard#159%1 == (!$cond#158%1 && $guard#158%1) && $cond#160%1 == TRUE && smain.stato#161%1 == 2 && $guard#161%1 == ($cond#158%1 && $guard#158%1) && smain.OUTP#162%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0) && smain.stato#phi162%1 == ($guard#161%1 ? smain.stato#161%1 : smain.stato#159%1) && $guard#162%1 == ($cond#160%1 && $guard#159%1 || $guard#161%1) && smain.OVERFLW#163%1 == FALSE && $cond#164%1 == TRUE && $cond#165%1 == (((signed int)LINE1#126%1 | (signed int)LINE2#128%1) == 0) && $guard#165%1 == ($cond#138%1 && $guard#138%1) && smain.stato#166%1 == 5 && $guard#166%1 == (!$cond#165%1 && $guard#165%1) && $cond#167%1 == TRUE && smain.stato#168%1 == 2 && $guard#168%1 == ($cond#165%1 && $guard#165%1) && smain.OUTP#169%1 == !(~((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0) && smain.stato#phi169%1 == ($guard#168%1 ? smain.stato#168%1 : smain.stato#166%1) && $guard#169%1 == ($cond#167%1 && $guard#166%1 || $guard#168%1) && smain.OVERFLW#170%1 == FALSE && $cond#171%1 == TRUE && $cond#172%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0) && $guard#172%1 == ($cond#139%1 && $guard#139%1) && smain.stato#173%1 == 7 && $guard#173%1 == (!$cond#172%1 && $guard#172%1) && $cond#174%1 == TRUE && smain.stato#175%1 == 6 && $guard#175%1 == ($cond#172%1 && $guard#172%1) && smain.OUTP#176%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0) && smain.stato#phi176%1 == ($guard#175%1 ? smain.stato#175%1 : smain.stato#173%1) && $guard#176%1 == ($cond#174%1 && $guard#173%1 || $guard#175%1) && smain.OVERFLW#177%1 == FALSE && $cond#178%1 == TRUE && $cond#179%1 == (((signed int)LINE1#126%1 | (signed int)LINE2#128%1) == 0) && $guard#179%1 == ($cond#140%1 && $guard#140%1) && smain.stato#180%1 == 7 && $guard#180%1 == (!$cond#179%1 && $guard#179%1) && $cond#181%1 == TRUE && smain.stato#182%1 == 6 && $guard#182%1 == ($cond#179%1 && $guard#179%1) && smain.OUTP#183%1 == !(~((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0) && smain.stato#phi183%1 == ($guard#182%1 ? smain.stato#182%1 : smain.stato#180%1) && $guard#183%1 == ($cond#181%1 && $guard#180%1 || $guard#182%1) && smain.OVERFLW#184%1 == FALSE && $cond#185%1 == TRUE && $cond#186%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0) && $guard#186%1 == ($cond#141%1 && $guard#141%1) && smain.stato#187%1 == 3 && $guard#187%1 == (!$cond#186%1 && $guard#186%1) && $cond#188%1 == TRUE && smain.stato#189%1 == 0 && $guard#189%1 == ($cond#186%1 && $guard#186%1) && smain.OUTP#190%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0) && smain.stato#phi190%1 == ($guard#189%1 ? smain.stato#189%1 : smain.stato#187%1) && $guard#190%1 == ($cond#188%1 && $guard#187%1 || $guard#189%1) && smain.OVERFLW#191%1 == FALSE && $cond#192%1 == TRUE && $cond#193%1 == (((signed int)LINE1#126%1 | (signed int)LINE2#128%1) == 0) && $guard#193%1 == ($cond#142%1 && $guard#142%1) && smain.stato#194%1 == 3 && $guard#194%1 == (!$cond#193%1 && $guard#193%1) && $cond#195%1 == TRUE && smain.stato#196%1 == 0 && $guard#196%1 == ($cond#193%1 && $guard#193%1) && smain.OUTP#197%1 == !(~((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0) && smain.stato#phi197%1 == ($guard#196%1 ? smain.stato#196%1 : smain.stato#194%1) && $guard#197%1 == ($cond#195%1 && $guard#194%1 || $guard#196%1) && smain.OVERFLW#198%1 == FALSE && OUTP#199%1 == smain.OUTP#phi199%1 && smain.OUTP#phi199%1 == ($guard#197%1 ? smain.OUTP#197%1 : ($cond#192%1 && $guard#190%1 ? smain.OUTP#190%1 : ($cond#185%1 && $guard#183%1 ? smain.OUTP#183%1 : ($cond#178%1 && $guard#176%1 ? smain.OUTP#176%1 : ($cond#171%1 && $guard#169%1 ? smain.OUTP#169%1 : ($cond#164%1 && $guard#162%1 ? smain.OUTP#162%1 : ($cond#157%1 && $guard#155%1 ? smain.OUTP#155%1 : ($cond#150%1 && $guard#148%1 ? smain.OUTP#148%1 : smain.OUTP#phi115%1)))))))) && smain.OVERFLW#phi199%1 == ($guard#197%1 ? smain.OVERFLW#198%1 : ($cond#192%1 && $guard#190%1 ? smain.OVERFLW#191%1 : ($cond#185%1 && $guard#183%1 ? smain.OVERFLW#184%1 : ($cond#178%1 && $guard#176%1 ? smain.OVERFLW#177%1 : ($cond#171%1 && $guard#169%1 ? smain.OVERFLW#170%1 : ($cond#164%1 && $guard#162%1 ? smain.OVERFLW#163%1 : ($cond#157%1 && $guard#155%1 ? smain.OVERFLW#156%1 : ($cond#150%1 && $guard#148%1 ? smain.OVERFLW#149%1 : smain.OVERFLW#phi115%1)))))))) && smain.stato#phi199%1 == ($guard#197%1 ? smain.stato#phi197%1 : ($cond#192%1 && $guard#190%1 ? smain.stato#phi190%1 : ($cond#185%1 && $guard#183%1 ? smain.stato#phi183%1 : ($cond#178%1 && $guard#176%1 ? smain.stato#phi176%1 : ($cond#171%1 && $guard#169%1 ? smain.stato#phi169%1 : ($cond#164%1 && $guard#162%1 ? smain.stato#phi162%1 : ($cond#157%1 && $guard#155%1 ? smain.stato#phi155%1 : ($cond#150%1 && $guard#148%1 ? smain.stato#phi148%1 : smain.stato#phi115%1)))))))) && $guard#199%1 == ($cond#143%1 && $guard#143%1 || $cond#150%1 && $guard#148%1 || $cond#157%1 && $guard#155%1 || $cond#164%1 && $guard#162%1 || $cond#171%1 && $guard#169%1 || $cond#178%1 && $guard#176%1 || $cond#185%1 && $guard#183%1 || $cond#192%1 && $guard#190%1 || $guard#197%1) && OVERFLW#200%1 == smain.OVERFLW#phi199%1 && LINE1#209%1 == LINE1#25 && LINE2#211%1 == LINE2#27 && OUTP#213%1 == &OUTP && OVERFLW#215%1 == &OVERFLW && clock#217%1 == clock#33 && $cond#218%1 == ((signed int)smain.stato#phi199%1 == 0) && $cond#219%1 == ((signed int)smain.stato#phi199%1 == 3) && $guard#219%1 == (!$cond#218%1 && $guard#199%1) && $cond#220%1 == ((signed int)smain.stato#phi199%1 == 1) && $guard#220%1 == (!$cond#219%1 && $guard#219%1) && $cond#221%1 == ((signed int)smain.stato#phi199%1 == 4) && $guard#221%1 == (!$cond#220%1 && $guard#220%1) && $cond#222%1 == ((signed int)smain.stato#phi199%1 == 2) && $guard#222%1 == (!$cond#221%1 && $guard#221%1) && $cond#223%1 == ((signed int)smain.stato#phi199%1 == 5) && $guard#223%1 == (!$cond#222%1 && $guard#222%1) && $cond#224%1 == ((signed int)smain.stato#phi199%1 == 6) && $guard#224%1 == (!$cond#223%1 && $guard#223%1) && $cond#225%1 == ((signed int)smain.stato#phi199%1 == 7) && $guard#225%1 == (!$cond#224%1 && $guard#224%1) && $cond#226%1 == TRUE && $guard#226%1 == (!$cond#225%1 && $guard#225%1) && $cond#227%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0) && $guard#227%1 == ($cond#218%1 && $guard#199%1) && smain.stato#228%1 == 4 && $guard#228%1 == (!$cond#227%1 && $guard#227%1) && $cond#229%1 == TRUE && smain.stato#230%1 == 1 && $guard#230%1 == ($cond#227%1 && $guard#227%1) && smain.OUTP#231%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0) && smain.stato#phi231%1 == ($guard#230%1 ? smain.stato#230%1 : smain.stato#228%1) && $guard#231%1 == ($cond#229%1 && $guard#228%1 || $guard#230%1) && smain.OVERFLW#232%1 == FALSE && $cond#233%1 == TRUE && $cond#234%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0) && $guard#234%1 == ($cond#219%1 && $guard#219%1) && smain.stato#235%1 == 4 && $guard#235%1 == (!$cond#234%1 && $guard#234%1) && $cond#236%1 == TRUE && smain.stato#237%1 == 1 && $guard#237%1 == ($cond#234%1 && $guard#234%1) && smain.OUTP#238%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0) && smain.stato#phi238%1 == ($guard#237%1 ? smain.stato#237%1 : smain.stato#235%1) && $guard#238%1 == ($cond#236%1 && $guard#235%1 || $guard#237%1) && smain.OVERFLW#239%1 == TRUE && $cond#240%1 == TRUE && $cond#241%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0) && $guard#241%1 == ($cond#220%1 && $guard#220%1) && smain.stato#242%1 == 5 && $guard#242%1 == (!$cond#241%1 && $guard#241%1) && $cond#243%1 == TRUE && smain.stato#244%1 == 2 && $guard#244%1 == ($cond#241%1 && $guard#241%1) && smain.OUTP#245%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0) && smain.stato#phi245%1 == ($guard#244%1 ? smain.stato#244%1 : smain.stato#242%1) && $guard#245%1 == ($cond#243%1 && $guard#242%1 || $guard#244%1) && smain.OVERFLW#246%1 == FALSE && $cond#247%1 == TRUE && $cond#248%1 == (((signed int)LINE1#209%1 | (signed int)LINE2#211%1) == 0) && $guard#248%1 == ($cond#221%1 && $guard#221%1) && smain.stato#249%1 == 5 && $guard#249%1 == (!$cond#248%1 && $guard#248%1) && $cond#250%1 == TRUE && smain.stato#251%1 == 2 && $guard#251%1 == ($cond#248%1 && $guard#248%1) && smain.OUTP#252%1 == !(~((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0) && smain.stato#phi252%1 == ($guard#251%1 ? smain.stato#251%1 : smain.stato#249%1) && $guard#252%1 == ($cond#250%1 && $guard#249%1 || $guard#251%1) && smain.OVERFLW#253%1 == FALSE && $cond#254%1 == TRUE && $cond#255%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0) && $guard#255%1 == ($cond#222%1 && $guard#222%1) && smain.stato#256%1 == 7 && $guard#256%1 == (!$cond#255%1 && $guard#255%1) && $cond#257%1 == TRUE && smain.stato#258%1 == 6 && $guard#258%1 == ($cond#255%1 && $guard#255%1) && smain.OUTP#259%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0) && smain.stato#phi259%1 == ($guard#258%1 ? smain.stato#258%1 : smain.stato#256%1) && $guard#259%1 == ($cond#257%1 && $guard#256%1 || $guard#258%1) && smain.OVERFLW#260%1 == FALSE && $cond#261%1 == TRUE && $cond#262%1 == (((signed int)LINE1#209%1 | (signed int)LINE2#211%1) == 0) && $guard#262%1 == ($cond#223%1 && $guard#223%1) && smain.stato#263%1 == 7 && $guard#263%1 == (!$cond#262%1 && $guard#262%1) && $cond#264%1 == TRUE && smain.stato#265%1 == 6 && $guard#265%1 == ($cond#262%1 && $guard#262%1) && smain.OUTP#266%1 == !(~((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0) && smain.stato#phi266%1 == ($guard#265%1 ? smain.stato#265%1 : smain.stato#263%1) && $guard#266%1 == ($cond#264%1 && $guard#263%1 || $guard#265%1) && smain.OVERFLW#267%1 == FALSE && $cond#268%1 == TRUE && $cond#269%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0) && $guard#269%1 == ($cond#224%1 && $guard#224%1) && smain.stato#270%1 == 3 && $guard#270%1 == (!$cond#269%1 && $guard#269%1) && $cond#271%1 == TRUE && smain.stato#272%1 == 0 && $guard#272%1 == ($cond#269%1 && $guard#269%1) && smain.OUTP#273%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0) && smain.stato#phi273%1 == ($guard#272%1 ? smain.stato#272%1 : smain.stato#270%1) && $guard#273%1 == ($cond#271%1 && $guard#270%1 || $guard#272%1) && smain.OVERFLW#274%1 == FALSE && $cond#275%1 == TRUE && $cond#276%1 == (((signed int)LINE1#209%1 | (signed int)LINE2#211%1) == 0) && $guard#276%1 == ($cond#225%1 && $guard#225%1) && smain.stato#277%1 == 3 && $guard#277%1 == (!$cond#276%1 && $guard#276%1) && $cond#278%1 == TRUE && smain.stato#279%1 == 0 && $guard#279%1 == ($cond#276%1 && $guard#276%1) && smain.OUTP#280%1 == !(~((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0) && smain.stato#phi280%1 == ($guard#279%1 ? smain.stato#279%1 : smain.stato#277%1) && $guard#280%1 == ($cond#278%1 && $guard#277%1 || $guard#279%1) && smain.OVERFLW#281%1 == FALSE && OUTP#282%1 == smain.OUTP#phi282%1 && smain.OUTP#phi282%1 == ($guard#280%1 ? smain.OUTP#280%1 : ($cond#275%1 && $guard#273%1 ? smain.OUTP#273%1 : ($cond#268%1 && $guard#266%1 ? smain.OUTP#266%1 : ($cond#261%1 && $guard#259%1 ? smain.OUTP#259%1 : ($cond#254%1 && $guard#252%1 ? smain.OUTP#252%1 : ($cond#247%1 && $guard#245%1 ? smain.OUTP#245%1 : ($cond#240%1 && $guard#238%1 ? smain.OUTP#238%1 : ($cond#233%1 && $guard#231%1 ? smain.OUTP#231%1 : smain.OUTP#phi199%1)))))))) && smain.OVERFLW#phi282%1 == ($guard#280%1 ? smain.OVERFLW#281%1 : ($cond#275%1 && $guard#273%1 ? smain.OVERFLW#274%1 : ($cond#268%1 && $guard#266%1 ? smain.OVERFLW#267%1 : ($cond#261%1 && $guard#259%1 ? smain.OVERFLW#260%1 : ($cond#254%1 && $guard#252%1 ? smain.OVERFLW#253%1 : ($cond#247%1 && $guard#245%1 ? smain.OVERFLW#246%1 : ($cond#240%1 && $guard#238%1 ? smain.OVERFLW#239%1 : ($cond#233%1 && $guard#231%1 ? smain.OVERFLW#232%1 : smain.OVERFLW#phi199%1)))))))) && smain.stato#phi282%1 == ($guard#280%1 ? smain.stato#phi280%1 : ($cond#275%1 && $guard#273%1 ? smain.stato#phi273%1 : ($cond#268%1 && $guard#266%1 ? smain.stato#phi266%1 : ($cond#261%1 && $guard#259%1 ? smain.stato#phi259%1 : ($cond#254%1 && $guard#252%1 ? smain.stato#phi252%1 : ($cond#247%1 && $guard#245%1 ? smain.stato#phi245%1 : ($cond#240%1 && $guard#238%1 ? smain.stato#phi238%1 : ($cond#233%1 && $guard#231%1 ? smain.stato#phi231%1 : smain.stato#phi199%1)))))))) && $guard#282%1 == ($cond#226%1 && $guard#226%1 || $cond#233%1 && $guard#231%1 || $cond#240%1 && $guard#238%1 || $cond#247%1 && $guard#245%1 || $cond#254%1 && $guard#252%1 || $cond#261%1 && $guard#259%1 || $cond#268%1 && $guard#266%1 || $cond#275%1 && $guard#273%1 || $guard#280%1) && OVERFLW#283%1 == smain.OVERFLW#phi282%1 && $cond#291%1 == ((signed int)smain.OVERFLW#phi282%1 == 0) && OUTP#phi292%1 == ($cond#291%1 && $guard#282%1 ? OUTP#282%1 : OUTP#115%1) && OVERFLW#phi292%1 == ($cond#291%1 && $guard#282%1 ? OVERFLW#283%1 : OVERFLW#116%1) && smain.OUTP#phi292%1 == ($cond#291%1 && $guard#282%1 ? smain.OUTP#phi282%1 : smain.OUTP#phi115%1) && smain.OVERFLW#phi292%1 == ($cond#291%1 && $guard#282%1 ? smain.OVERFLW#phi282%1 : smain.OVERFLW#phi115%1) && smain.stato#phi292%1 == ($cond#291%1 && $guard#282%1 ? smain.stato#phi282%1 : smain.stato#phi115%1) && $cond#292%1 == TRUE && $guard#292%1 == (!$cond#291%1 && $guard#282%1 || $cond#123%1 && $guard#115%1 || $cond#291%1 && $guard#282%1) && OUTP#phi39%0 == OUTP#phi292%1 && OVERFLW#phi39%0 == OVERFLW#phi292%1 && smain.OUTP#phi39%0 == smain.OUTP#phi292%1 && smain.OVERFLW#phi39%0 == smain.OVERFLW#phi292%1 && smain.stato#phi39%0 == smain.stato#phi292%1 && $cond#39%0 == FALSE && $guard#39%0 == ($guard#292%1 && $cond#292%1) && (!((signed int)smain.OVERFLW#phi282%1 == 0) || !$guard#282%1) && OUTP#phi39%1 == ($guard#ls292%1 ? OUTP#lb292%1 : OUTP#29) && OVERFLW#phi39%1 == ($guard#ls292%1 ? OVERFLW#lb292%1 : OVERFLW#31) && smain.OUTP#phi39%1 == ($guard#ls292%1 ? smain.OUTP#lb292%1 : smain.OUTP#36) && smain.OVERFLW#phi39%1 == ($guard#ls292%1 ? smain.OVERFLW#lb292%1 : smain.OVERFLW#37) && smain.stato#phi39%1 == ($guard#ls292%1 ? smain.stato#lb292%1 : smain.stato#35) && $cond#39%1 == FALSE && $guard#39%1 == $guard#0 && $cond#39 == ($guard#39%1 && $cond#39%1 ? $cond#39%1 : $cond#39%0) && $guard#39 == ($guard#39%1 && $cond#39%1 ? $guard#39%1 : $guard#39%0) && OUTP#phi39 == ($guard#39%1 && $cond#39%1 ? OUTP#phi39%1 : OUTP#phi39%0) && OVERFLW#phi39 == ($guard#39%1 && $cond#39%1 ? OVERFLW#phi39%1 : OVERFLW#phi39%0) && smain.OUTP#phi39 == ($guard#39%1 && $cond#39%1 ? smain.OUTP#phi39%1 : smain.OUTP#phi39%0) && smain.OVERFLW#phi39 == ($guard#39%1 && $cond#39%1 ? smain.OVERFLW#phi39%1 : smain.OVERFLW#phi39%0) && smain.stato#phi39 == ($guard#39%1 && $cond#39%1 ? smain.stato#phi39%1 : smain.stato#phi39%0)
The final variables are: 
main::1::LINE1#25, 
main::1::LINE2#27, 
main::1::OUTP#29, 
main::1::OVERFLW#31, 
main::1::clock#33, 
ssa::$cond#39, 
ssa::$cond#51%0, 
ssa::$cond#52%0, 
ssa::$cond#53%0, 
ssa::$cond#54%0, 
ssa::$cond#55%0, 
ssa::$cond#56%0, 
ssa::$cond#57%0, 
ssa::$cond#58%0, 
ssa::$cond#60%0, 
ssa::$cond#67%0, 
ssa::$cond#74%0, 
ssa::$cond#81%0, 
ssa::$cond#88%0, 
ssa::$cond#95%0, 
ssa::$cond#102%0, 
ssa::$cond#109%0, 
ssa::$cond#123%0, 
ssa::$cond#135%0, 
ssa::$cond#136%0, 
ssa::$cond#137%0, 
ssa::$cond#138%0, 
ssa::$cond#139%0, 
ssa::$cond#140%0, 
ssa::$cond#141%0, 
ssa::$cond#142%0, 
ssa::$cond#144%0, 
ssa::$cond#151%0, 
ssa::$cond#158%0, 
ssa::$cond#165%0, 
ssa::$cond#172%0, 
ssa::$cond#179%0, 
ssa::$cond#186%0, 
ssa::$cond#193%0, 
ssa::$cond#218%0, 
ssa::$cond#219%0, 
ssa::$cond#220%0, 
ssa::$cond#221%0, 
ssa::$cond#222%0, 
ssa::$cond#223%0, 
ssa::$cond#224%0, 
ssa::$cond#225%0, 
ssa::$cond#227%0, 
ssa::$cond#234%0, 
ssa::$cond#241%0, 
ssa::$cond#248%0, 
ssa::$cond#255%0, 
ssa::$cond#262%0, 
ssa::$cond#269%0, 
ssa::$cond#276%0, 
smain.OVERFLW#phi282%0, 
ssa::$guard#282%0, 
ssa::$cond#291%0, 
ssa::$cond#51%1, 
ssa::$cond#52%1, 
ssa::$cond#53%1, 
ssa::$cond#54%1, 
ssa::$cond#55%1, 
ssa::$cond#56%1, 
ssa::$cond#57%1, 
ssa::$cond#58%1, 
ssa::$cond#60%1, 
ssa::$cond#67%1, 
ssa::$cond#74%1, 
ssa::$cond#81%1, 
ssa::$cond#88%1, 
ssa::$cond#95%1, 
ssa::$cond#102%1, 
ssa::$cond#109%1, 
ssa::$cond#123%1, 
ssa::$cond#135%1, 
ssa::$cond#136%1, 
ssa::$cond#137%1, 
ssa::$cond#138%1, 
ssa::$cond#139%1, 
ssa::$cond#140%1, 
ssa::$cond#141%1, 
ssa::$cond#142%1, 
ssa::$cond#144%1, 
ssa::$cond#151%1, 
ssa::$cond#158%1, 
ssa::$cond#165%1, 
ssa::$cond#172%1, 
ssa::$cond#179%1, 
ssa::$cond#186%1, 
ssa::$cond#193%1, 
ssa::$cond#218%1, 
ssa::$cond#219%1, 
ssa::$cond#220%1, 
ssa::$cond#221%1, 
ssa::$cond#222%1, 
ssa::$cond#223%1, 
ssa::$cond#224%1, 
ssa::$cond#225%1, 
ssa::$cond#227%1, 
ssa::$cond#234%1, 
ssa::$cond#241%1, 
ssa::$cond#248%1, 
ssa::$cond#255%1, 
ssa::$cond#262%1, 
ssa::$cond#269%1, 
ssa::$cond#276%1, 
smain.OVERFLW#phi282%1, 
ssa::$guard#282%1, 
ssa::$cond#291%1, 
The simplified SSA statements after pre-processing are
Statement: $guard#0 == TRUE
Statement: __CPROVER_dead_object#2 == NULL
Statement: __CPROVER_deallocated#3 == NULL
Statement: __CPROVER_malloc_is_new_array#4 == FALSE
Statement: __CPROVER_malloc_object#5 == NULL
Statement: __CPROVER_malloc_size#6 == 0ul
Statement: __CPROVER_memory_leak#7 == NULL
Statement: __CPROVER_next_thread_id#8 == 0ul
Statement: __CPROVER_pipe_count#9 == 0u
Statement: __CPROVER_rounding_mode#10 == 0
Statement: __CPROVER_thread_id#11 == 0ul
Statement: __CPROVER_threads_exited#12 == ARRAY_OF(FALSE)
Statement: a#13 == 0
Statement: b#14 == 1
Statement: c#15 == 2
Statement: e#16 == 3
Statement: f#17 == 4
Statement: g#18 == 5
Statement: smain.OUTP#19 == FALSE
Statement: smain.OVERFLW#19 == FALSE
Statement: smain.stato#19 == 0
Statement: wf0#20 == 6
Statement: wf1#21 == 7
Statement: LINE1#25 == nondet_symbol(ssa::nondet25.1)
Statement: LINE2#27 == nondet_symbol(ssa::nondet27.1)
Statement: OUTP#29 == nondet_symbol(ssa::nondet29.1)
Statement: OVERFLW#31 == nondet_symbol(ssa::nondet31.1)
Statement: clock#33 == nondet_symbol(ssa::nondet33.1)
Statement: smain.stato#35 == 0
Statement: smain.OUTP#36 == FALSE
Statement: smain.OVERFLW#37 == FALSE
Statement: $guard#293 == ($cond#39 && $guard#39)
Statement: $guard#40%0 == (!$cond#39%0 && $guard#39%0)
Statement: LINE1#42%0 == LINE1#25
Statement: LINE2#44%0 == LINE2#27
Statement: OUTP#46%0 == &OUTP
Statement: OVERFLW#48%0 == &OVERFLW
Statement: clock#50%0 == clock#33
Statement: $cond#51%0 == ((signed int)smain.stato#phi39%0 == 0)
Statement: $cond#52%0 == ((signed int)smain.stato#phi39%0 == 3)
Statement: $guard#52%0 == (!$cond#51%0 && $guard#40%0)
Statement: $cond#53%0 == ((signed int)smain.stato#phi39%0 == 1)
Statement: $guard#53%0 == (!$cond#52%0 && $guard#52%0)
Statement: $cond#54%0 == ((signed int)smain.stato#phi39%0 == 4)
Statement: $guard#54%0 == (!$cond#53%0 && $guard#53%0)
Statement: $cond#55%0 == ((signed int)smain.stato#phi39%0 == 2)
Statement: $guard#55%0 == (!$cond#54%0 && $guard#54%0)
Statement: $cond#56%0 == ((signed int)smain.stato#phi39%0 == 5)
Statement: $guard#56%0 == (!$cond#55%0 && $guard#55%0)
Statement: $cond#57%0 == ((signed int)smain.stato#phi39%0 == 6)
Statement: $guard#57%0 == (!$cond#56%0 && $guard#56%0)
Statement: $cond#58%0 == ((signed int)smain.stato#phi39%0 == 7)
Statement: $guard#58%0 == (!$cond#57%0 && $guard#57%0)
Statement: $cond#59%0 == TRUE
Statement: $guard#59%0 == (!$cond#58%0 && $guard#58%0)
Statement: $cond#60%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
Statement: $guard#60%0 == ($cond#51%0 && $guard#40%0)
Statement: smain.stato#61%0 == 4
Statement: $guard#61%0 == (!$cond#60%0 && $guard#60%0)
Statement: $cond#62%0 == TRUE
Statement: smain.stato#63%0 == 1
Statement: $guard#63%0 == ($cond#60%0 && $guard#60%0)
Statement: smain.OUTP#64%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Statement: smain.stato#phi64%0 == ($guard#63%0 ? smain.stato#63%0 : smain.stato#61%0)
Statement: $guard#64%0 == ($cond#62%0 && $guard#61%0 || $guard#63%0)
Statement: smain.OVERFLW#65%0 == FALSE
Statement: $cond#66%0 == TRUE
Statement: $cond#67%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
Statement: $guard#67%0 == ($cond#52%0 && $guard#52%0)
Statement: smain.stato#68%0 == 4
Statement: $guard#68%0 == (!$cond#67%0 && $guard#67%0)
Statement: $cond#69%0 == TRUE
Statement: smain.stato#70%0 == 1
Statement: $guard#70%0 == ($cond#67%0 && $guard#67%0)
Statement: smain.OUTP#71%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Statement: smain.stato#phi71%0 == ($guard#70%0 ? smain.stato#70%0 : smain.stato#68%0)
Statement: $guard#71%0 == ($cond#69%0 && $guard#68%0 || $guard#70%0)
Statement: smain.OVERFLW#72%0 == TRUE
Statement: $cond#73%0 == TRUE
Statement: $cond#74%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
Statement: $guard#74%0 == ($cond#53%0 && $guard#53%0)
Statement: smain.stato#75%0 == 5
Statement: $guard#75%0 == (!$cond#74%0 && $guard#74%0)
Statement: $cond#76%0 == TRUE
Statement: smain.stato#77%0 == 2
Statement: $guard#77%0 == ($cond#74%0 && $guard#74%0)
Statement: smain.OUTP#78%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Statement: smain.stato#phi78%0 == ($guard#77%0 ? smain.stato#77%0 : smain.stato#75%0)
Statement: $guard#78%0 == ($cond#76%0 && $guard#75%0 || $guard#77%0)
Statement: smain.OVERFLW#79%0 == FALSE
Statement: $cond#80%0 == TRUE
Statement: $cond#81%0 == (((signed int)LINE1#42%0 | (signed int)LINE2#44%0) == 0)
Statement: $guard#81%0 == ($cond#54%0 && $guard#54%0)
Statement: smain.stato#82%0 == 5
Statement: $guard#82%0 == (!$cond#81%0 && $guard#81%0)
Statement: $cond#83%0 == TRUE
Statement: smain.stato#84%0 == 2
Statement: $guard#84%0 == ($cond#81%0 && $guard#81%0)
Statement: smain.OUTP#85%0 == !(~((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Statement: smain.stato#phi85%0 == ($guard#84%0 ? smain.stato#84%0 : smain.stato#82%0)
Statement: $guard#85%0 == ($cond#83%0 && $guard#82%0 || $guard#84%0)
Statement: smain.OVERFLW#86%0 == FALSE
Statement: $cond#87%0 == TRUE
Statement: $cond#88%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
Statement: $guard#88%0 == ($cond#55%0 && $guard#55%0)
Statement: smain.stato#89%0 == 7
Statement: $guard#89%0 == (!$cond#88%0 && $guard#88%0)
Statement: $cond#90%0 == TRUE
Statement: smain.stato#91%0 == 6
Statement: $guard#91%0 == ($cond#88%0 && $guard#88%0)
Statement: smain.OUTP#92%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Statement: smain.stato#phi92%0 == ($guard#91%0 ? smain.stato#91%0 : smain.stato#89%0)
Statement: $guard#92%0 == ($cond#90%0 && $guard#89%0 || $guard#91%0)
Statement: smain.OVERFLW#93%0 == FALSE
Statement: $cond#94%0 == TRUE
Statement: $cond#95%0 == (((signed int)LINE1#42%0 | (signed int)LINE2#44%0) == 0)
Statement: $guard#95%0 == ($cond#56%0 && $guard#56%0)
Statement: smain.stato#96%0 == 7
Statement: $guard#96%0 == (!$cond#95%0 && $guard#95%0)
Statement: $cond#97%0 == TRUE
Statement: smain.stato#98%0 == 6
Statement: $guard#98%0 == ($cond#95%0 && $guard#95%0)
Statement: smain.OUTP#99%0 == !(~((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Statement: smain.stato#phi99%0 == ($guard#98%0 ? smain.stato#98%0 : smain.stato#96%0)
Statement: $guard#99%0 == ($cond#97%0 && $guard#96%0 || $guard#98%0)
Statement: smain.OVERFLW#100%0 == FALSE
Statement: $cond#101%0 == TRUE
Statement: $cond#102%0 == (((signed int)LINE1#42%0 & (signed int)LINE2#44%0) == 0)
Statement: $guard#102%0 == ($cond#57%0 && $guard#57%0)
Statement: smain.stato#103%0 == 3
Statement: $guard#103%0 == (!$cond#102%0 && $guard#102%0)
Statement: $cond#104%0 == TRUE
Statement: smain.stato#105%0 == 0
Statement: $guard#105%0 == ($cond#102%0 && $guard#102%0)
Statement: smain.OUTP#106%0 == !(((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Statement: smain.stato#phi106%0 == ($guard#105%0 ? smain.stato#105%0 : smain.stato#103%0)
Statement: $guard#106%0 == ($cond#104%0 && $guard#103%0 || $guard#105%0)
Statement: smain.OVERFLW#107%0 == FALSE
Statement: $cond#108%0 == TRUE
Statement: $cond#109%0 == (((signed int)LINE1#42%0 | (signed int)LINE2#44%0) == 0)
Statement: $guard#109%0 == ($cond#58%0 && $guard#58%0)
Statement: smain.stato#110%0 == 3
Statement: $guard#110%0 == (!$cond#109%0 && $guard#109%0)
Statement: $cond#111%0 == TRUE
Statement: smain.stato#112%0 == 0
Statement: $guard#112%0 == ($cond#109%0 && $guard#109%0)
Statement: smain.OUTP#113%0 == !(~((signed int)LINE1#42%0 ^ (signed int)LINE2#44%0) == 0)
Statement: smain.stato#phi113%0 == ($guard#112%0 ? smain.stato#112%0 : smain.stato#110%0)
Statement: $guard#113%0 == ($cond#111%0 && $guard#110%0 || $guard#112%0)
Statement: smain.OVERFLW#114%0 == FALSE
Statement: OUTP#115%0 == smain.OUTP#phi115%0
Statement: smain.OUTP#phi115%0 == ($guard#113%0 ? smain.OUTP#113%0 : ($cond#108%0 && $guard#106%0 ? smain.OUTP#106%0 : ($cond#101%0 && $guard#99%0 ? smain.OUTP#99%0 : ($cond#94%0 && $guard#92%0 ? smain.OUTP#92%0 : ($cond#87%0 && $guard#85%0 ? smain.OUTP#85%0 : ($cond#80%0 && $guard#78%0 ? smain.OUTP#78%0 : ($cond#73%0 && $guard#71%0 ? smain.OUTP#71%0 : ($cond#66%0 && $guard#64%0 ? smain.OUTP#64%0 : smain.OUTP#phi39%0))))))))
Statement: smain.OVERFLW#phi115%0 == ($guard#113%0 ? smain.OVERFLW#114%0 : ($cond#108%0 && $guard#106%0 ? smain.OVERFLW#107%0 : ($cond#101%0 && $guard#99%0 ? smain.OVERFLW#100%0 : ($cond#94%0 && $guard#92%0 ? smain.OVERFLW#93%0 : ($cond#87%0 && $guard#85%0 ? smain.OVERFLW#86%0 : ($cond#80%0 && $guard#78%0 ? smain.OVERFLW#79%0 : ($cond#73%0 && $guard#71%0 ? smain.OVERFLW#72%0 : ($cond#66%0 && $guard#64%0 ? smain.OVERFLW#65%0 : smain.OVERFLW#phi39%0))))))))
Statement: smain.stato#phi115%0 == ($guard#113%0 ? smain.stato#phi113%0 : ($cond#108%0 && $guard#106%0 ? smain.stato#phi106%0 : ($cond#101%0 && $guard#99%0 ? smain.stato#phi99%0 : ($cond#94%0 && $guard#92%0 ? smain.stato#phi92%0 : ($cond#87%0 && $guard#85%0 ? smain.stato#phi85%0 : ($cond#80%0 && $guard#78%0 ? smain.stato#phi78%0 : ($cond#73%0 && $guard#71%0 ? smain.stato#phi71%0 : ($cond#66%0 && $guard#64%0 ? smain.stato#phi64%0 : smain.stato#phi39%0))))))))
Statement: $guard#115%0 == ($cond#101%0 && $guard#99%0 || $cond#108%0 && $guard#106%0 || $cond#59%0 && $guard#59%0 || $cond#66%0 && $guard#64%0 || $cond#73%0 && $guard#71%0 || $cond#80%0 && $guard#78%0 || $cond#87%0 && $guard#85%0 || $cond#94%0 && $guard#92%0 || $guard#113%0)
Statement: OVERFLW#116%0 == smain.OVERFLW#phi115%0
Statement: $cond#123%0 == !((signed int)smain.OVERFLW#phi115%0 == 1)
Statement: $guard#124%0 == (!$cond#123%0 && $guard#115%0)
Statement: LINE1#126%0 == LINE1#25
Statement: LINE2#128%0 == LINE2#27
Statement: OUTP#130%0 == &OUTP
Statement: OVERFLW#132%0 == &OVERFLW
Statement: clock#134%0 == clock#33
Statement: $cond#135%0 == ((signed int)smain.stato#phi115%0 == 0)
Statement: $cond#136%0 == ((signed int)smain.stato#phi115%0 == 3)
Statement: $guard#136%0 == (!$cond#135%0 && $guard#124%0)
Statement: $cond#137%0 == ((signed int)smain.stato#phi115%0 == 1)
Statement: $guard#137%0 == (!$cond#136%0 && $guard#136%0)
Statement: $cond#138%0 == ((signed int)smain.stato#phi115%0 == 4)
Statement: $guard#138%0 == (!$cond#137%0 && $guard#137%0)
Statement: $cond#139%0 == ((signed int)smain.stato#phi115%0 == 2)
Statement: $guard#139%0 == (!$cond#138%0 && $guard#138%0)
Statement: $cond#140%0 == ((signed int)smain.stato#phi115%0 == 5)
Statement: $guard#140%0 == (!$cond#139%0 && $guard#139%0)
Statement: $cond#141%0 == ((signed int)smain.stato#phi115%0 == 6)
Statement: $guard#141%0 == (!$cond#140%0 && $guard#140%0)
Statement: $cond#142%0 == ((signed int)smain.stato#phi115%0 == 7)
Statement: $guard#142%0 == (!$cond#141%0 && $guard#141%0)
Statement: $cond#143%0 == TRUE
Statement: $guard#143%0 == (!$cond#142%0 && $guard#142%0)
Statement: $cond#144%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
Statement: $guard#144%0 == ($cond#135%0 && $guard#124%0)
Statement: smain.stato#145%0 == 4
Statement: $guard#145%0 == (!$cond#144%0 && $guard#144%0)
Statement: $cond#146%0 == TRUE
Statement: smain.stato#147%0 == 1
Statement: $guard#147%0 == ($cond#144%0 && $guard#144%0)
Statement: smain.OUTP#148%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Statement: smain.stato#phi148%0 == ($guard#147%0 ? smain.stato#147%0 : smain.stato#145%0)
Statement: $guard#148%0 == ($cond#146%0 && $guard#145%0 || $guard#147%0)
Statement: smain.OVERFLW#149%0 == FALSE
Statement: $cond#150%0 == TRUE
Statement: $cond#151%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
Statement: $guard#151%0 == ($cond#136%0 && $guard#136%0)
Statement: smain.stato#152%0 == 4
Statement: $guard#152%0 == (!$cond#151%0 && $guard#151%0)
Statement: $cond#153%0 == TRUE
Statement: smain.stato#154%0 == 1
Statement: $guard#154%0 == ($cond#151%0 && $guard#151%0)
Statement: smain.OUTP#155%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Statement: smain.stato#phi155%0 == ($guard#154%0 ? smain.stato#154%0 : smain.stato#152%0)
Statement: $guard#155%0 == ($cond#153%0 && $guard#152%0 || $guard#154%0)
Statement: smain.OVERFLW#156%0 == TRUE
Statement: $cond#157%0 == TRUE
Statement: $cond#158%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
Statement: $guard#158%0 == ($cond#137%0 && $guard#137%0)
Statement: smain.stato#159%0 == 5
Statement: $guard#159%0 == (!$cond#158%0 && $guard#158%0)
Statement: $cond#160%0 == TRUE
Statement: smain.stato#161%0 == 2
Statement: $guard#161%0 == ($cond#158%0 && $guard#158%0)
Statement: smain.OUTP#162%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Statement: smain.stato#phi162%0 == ($guard#161%0 ? smain.stato#161%0 : smain.stato#159%0)
Statement: $guard#162%0 == ($cond#160%0 && $guard#159%0 || $guard#161%0)
Statement: smain.OVERFLW#163%0 == FALSE
Statement: $cond#164%0 == TRUE
Statement: $cond#165%0 == (((signed int)LINE1#126%0 | (signed int)LINE2#128%0) == 0)
Statement: $guard#165%0 == ($cond#138%0 && $guard#138%0)
Statement: smain.stato#166%0 == 5
Statement: $guard#166%0 == (!$cond#165%0 && $guard#165%0)
Statement: $cond#167%0 == TRUE
Statement: smain.stato#168%0 == 2
Statement: $guard#168%0 == ($cond#165%0 && $guard#165%0)
Statement: smain.OUTP#169%0 == !(~((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Statement: smain.stato#phi169%0 == ($guard#168%0 ? smain.stato#168%0 : smain.stato#166%0)
Statement: $guard#169%0 == ($cond#167%0 && $guard#166%0 || $guard#168%0)
Statement: smain.OVERFLW#170%0 == FALSE
Statement: $cond#171%0 == TRUE
Statement: $cond#172%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
Statement: $guard#172%0 == ($cond#139%0 && $guard#139%0)
Statement: smain.stato#173%0 == 7
Statement: $guard#173%0 == (!$cond#172%0 && $guard#172%0)
Statement: $cond#174%0 == TRUE
Statement: smain.stato#175%0 == 6
Statement: $guard#175%0 == ($cond#172%0 && $guard#172%0)
Statement: smain.OUTP#176%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Statement: smain.stato#phi176%0 == ($guard#175%0 ? smain.stato#175%0 : smain.stato#173%0)
Statement: $guard#176%0 == ($cond#174%0 && $guard#173%0 || $guard#175%0)
Statement: smain.OVERFLW#177%0 == FALSE
Statement: $cond#178%0 == TRUE
Statement: $cond#179%0 == (((signed int)LINE1#126%0 | (signed int)LINE2#128%0) == 0)
Statement: $guard#179%0 == ($cond#140%0 && $guard#140%0)
Statement: smain.stato#180%0 == 7
Statement: $guard#180%0 == (!$cond#179%0 && $guard#179%0)
Statement: $cond#181%0 == TRUE
Statement: smain.stato#182%0 == 6
Statement: $guard#182%0 == ($cond#179%0 && $guard#179%0)
Statement: smain.OUTP#183%0 == !(~((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Statement: smain.stato#phi183%0 == ($guard#182%0 ? smain.stato#182%0 : smain.stato#180%0)
Statement: $guard#183%0 == ($cond#181%0 && $guard#180%0 || $guard#182%0)
Statement: smain.OVERFLW#184%0 == FALSE
Statement: $cond#185%0 == TRUE
Statement: $cond#186%0 == (((signed int)LINE1#126%0 & (signed int)LINE2#128%0) == 0)
Statement: $guard#186%0 == ($cond#141%0 && $guard#141%0)
Statement: smain.stato#187%0 == 3
Statement: $guard#187%0 == (!$cond#186%0 && $guard#186%0)
Statement: $cond#188%0 == TRUE
Statement: smain.stato#189%0 == 0
Statement: $guard#189%0 == ($cond#186%0 && $guard#186%0)
Statement: smain.OUTP#190%0 == !(((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Statement: smain.stato#phi190%0 == ($guard#189%0 ? smain.stato#189%0 : smain.stato#187%0)
Statement: $guard#190%0 == ($cond#188%0 && $guard#187%0 || $guard#189%0)
Statement: smain.OVERFLW#191%0 == FALSE
Statement: $cond#192%0 == TRUE
Statement: $cond#193%0 == (((signed int)LINE1#126%0 | (signed int)LINE2#128%0) == 0)
Statement: $guard#193%0 == ($cond#142%0 && $guard#142%0)
Statement: smain.stato#194%0 == 3
Statement: $guard#194%0 == (!$cond#193%0 && $guard#193%0)
Statement: $cond#195%0 == TRUE
Statement: smain.stato#196%0 == 0
Statement: $guard#196%0 == ($cond#193%0 && $guard#193%0)
Statement: smain.OUTP#197%0 == !(~((signed int)LINE1#126%0 ^ (signed int)LINE2#128%0) == 0)
Statement: smain.stato#phi197%0 == ($guard#196%0 ? smain.stato#196%0 : smain.stato#194%0)
Statement: $guard#197%0 == ($cond#195%0 && $guard#194%0 || $guard#196%0)
Statement: smain.OVERFLW#198%0 == FALSE
Statement: OUTP#199%0 == smain.OUTP#phi199%0
Statement: smain.OUTP#phi199%0 == ($guard#197%0 ? smain.OUTP#197%0 : ($cond#192%0 && $guard#190%0 ? smain.OUTP#190%0 : ($cond#185%0 && $guard#183%0 ? smain.OUTP#183%0 : ($cond#178%0 && $guard#176%0 ? smain.OUTP#176%0 : ($cond#171%0 && $guard#169%0 ? smain.OUTP#169%0 : ($cond#164%0 && $guard#162%0 ? smain.OUTP#162%0 : ($cond#157%0 && $guard#155%0 ? smain.OUTP#155%0 : ($cond#150%0 && $guard#148%0 ? smain.OUTP#148%0 : smain.OUTP#phi115%0))))))))
Statement: smain.OVERFLW#phi199%0 == ($guard#197%0 ? smain.OVERFLW#198%0 : ($cond#192%0 && $guard#190%0 ? smain.OVERFLW#191%0 : ($cond#185%0 && $guard#183%0 ? smain.OVERFLW#184%0 : ($cond#178%0 && $guard#176%0 ? smain.OVERFLW#177%0 : ($cond#171%0 && $guard#169%0 ? smain.OVERFLW#170%0 : ($cond#164%0 && $guard#162%0 ? smain.OVERFLW#163%0 : ($cond#157%0 && $guard#155%0 ? smain.OVERFLW#156%0 : ($cond#150%0 && $guard#148%0 ? smain.OVERFLW#149%0 : smain.OVERFLW#phi115%0))))))))
Statement: smain.stato#phi199%0 == ($guard#197%0 ? smain.stato#phi197%0 : ($cond#192%0 && $guard#190%0 ? smain.stato#phi190%0 : ($cond#185%0 && $guard#183%0 ? smain.stato#phi183%0 : ($cond#178%0 && $guard#176%0 ? smain.stato#phi176%0 : ($cond#171%0 && $guard#169%0 ? smain.stato#phi169%0 : ($cond#164%0 && $guard#162%0 ? smain.stato#phi162%0 : ($cond#157%0 && $guard#155%0 ? smain.stato#phi155%0 : ($cond#150%0 && $guard#148%0 ? smain.stato#phi148%0 : smain.stato#phi115%0))))))))
Statement: $guard#199%0 == ($cond#143%0 && $guard#143%0 || $cond#150%0 && $guard#148%0 || $cond#157%0 && $guard#155%0 || $cond#164%0 && $guard#162%0 || $cond#171%0 && $guard#169%0 || $cond#178%0 && $guard#176%0 || $cond#185%0 && $guard#183%0 || $cond#192%0 && $guard#190%0 || $guard#197%0)
Statement: OVERFLW#200%0 == smain.OVERFLW#phi199%0
Statement: LINE1#209%0 == LINE1#25
Statement: LINE2#211%0 == LINE2#27
Statement: OUTP#213%0 == &OUTP
Statement: OVERFLW#215%0 == &OVERFLW
Statement: clock#217%0 == clock#33
Statement: $cond#218%0 == ((signed int)smain.stato#phi199%0 == 0)
Statement: $cond#219%0 == ((signed int)smain.stato#phi199%0 == 3)
Statement: $guard#219%0 == (!$cond#218%0 && $guard#199%0)
Statement: $cond#220%0 == ((signed int)smain.stato#phi199%0 == 1)
Statement: $guard#220%0 == (!$cond#219%0 && $guard#219%0)
Statement: $cond#221%0 == ((signed int)smain.stato#phi199%0 == 4)
Statement: $guard#221%0 == (!$cond#220%0 && $guard#220%0)
Statement: $cond#222%0 == ((signed int)smain.stato#phi199%0 == 2)
Statement: $guard#222%0 == (!$cond#221%0 && $guard#221%0)
Statement: $cond#223%0 == ((signed int)smain.stato#phi199%0 == 5)
Statement: $guard#223%0 == (!$cond#222%0 && $guard#222%0)
Statement: $cond#224%0 == ((signed int)smain.stato#phi199%0 == 6)
Statement: $guard#224%0 == (!$cond#223%0 && $guard#223%0)
Statement: $cond#225%0 == ((signed int)smain.stato#phi199%0 == 7)
Statement: $guard#225%0 == (!$cond#224%0 && $guard#224%0)
Statement: $cond#226%0 == TRUE
Statement: $guard#226%0 == (!$cond#225%0 && $guard#225%0)
Statement: $cond#227%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
Statement: $guard#227%0 == ($cond#218%0 && $guard#199%0)
Statement: smain.stato#228%0 == 4
Statement: $guard#228%0 == (!$cond#227%0 && $guard#227%0)
Statement: $cond#229%0 == TRUE
Statement: smain.stato#230%0 == 1
Statement: $guard#230%0 == ($cond#227%0 && $guard#227%0)
Statement: smain.OUTP#231%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Statement: smain.stato#phi231%0 == ($guard#230%0 ? smain.stato#230%0 : smain.stato#228%0)
Statement: $guard#231%0 == ($cond#229%0 && $guard#228%0 || $guard#230%0)
Statement: smain.OVERFLW#232%0 == FALSE
Statement: $cond#233%0 == TRUE
Statement: $cond#234%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
Statement: $guard#234%0 == ($cond#219%0 && $guard#219%0)
Statement: smain.stato#235%0 == 4
Statement: $guard#235%0 == (!$cond#234%0 && $guard#234%0)
Statement: $cond#236%0 == TRUE
Statement: smain.stato#237%0 == 1
Statement: $guard#237%0 == ($cond#234%0 && $guard#234%0)
Statement: smain.OUTP#238%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Statement: smain.stato#phi238%0 == ($guard#237%0 ? smain.stato#237%0 : smain.stato#235%0)
Statement: $guard#238%0 == ($cond#236%0 && $guard#235%0 || $guard#237%0)
Statement: smain.OVERFLW#239%0 == TRUE
Statement: $cond#240%0 == TRUE
Statement: $cond#241%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
Statement: $guard#241%0 == ($cond#220%0 && $guard#220%0)
Statement: smain.stato#242%0 == 5
Statement: $guard#242%0 == (!$cond#241%0 && $guard#241%0)
Statement: $cond#243%0 == TRUE
Statement: smain.stato#244%0 == 2
Statement: $guard#244%0 == ($cond#241%0 && $guard#241%0)
Statement: smain.OUTP#245%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Statement: smain.stato#phi245%0 == ($guard#244%0 ? smain.stato#244%0 : smain.stato#242%0)
Statement: $guard#245%0 == ($cond#243%0 && $guard#242%0 || $guard#244%0)
Statement: smain.OVERFLW#246%0 == FALSE
Statement: $cond#247%0 == TRUE
Statement: $cond#248%0 == (((signed int)LINE1#209%0 | (signed int)LINE2#211%0) == 0)
Statement: $guard#248%0 == ($cond#221%0 && $guard#221%0)
Statement: smain.stato#249%0 == 5
Statement: $guard#249%0 == (!$cond#248%0 && $guard#248%0)
Statement: $cond#250%0 == TRUE
Statement: smain.stato#251%0 == 2
Statement: $guard#251%0 == ($cond#248%0 && $guard#248%0)
Statement: smain.OUTP#252%0 == !(~((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Statement: smain.stato#phi252%0 == ($guard#251%0 ? smain.stato#251%0 : smain.stato#249%0)
Statement: $guard#252%0 == ($cond#250%0 && $guard#249%0 || $guard#251%0)
Statement: smain.OVERFLW#253%0 == FALSE
Statement: $cond#254%0 == TRUE
Statement: $cond#255%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
Statement: $guard#255%0 == ($cond#222%0 && $guard#222%0)
Statement: smain.stato#256%0 == 7
Statement: $guard#256%0 == (!$cond#255%0 && $guard#255%0)
Statement: $cond#257%0 == TRUE
Statement: smain.stato#258%0 == 6
Statement: $guard#258%0 == ($cond#255%0 && $guard#255%0)
Statement: smain.OUTP#259%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Statement: smain.stato#phi259%0 == ($guard#258%0 ? smain.stato#258%0 : smain.stato#256%0)
Statement: $guard#259%0 == ($cond#257%0 && $guard#256%0 || $guard#258%0)
Statement: smain.OVERFLW#260%0 == FALSE
Statement: $cond#261%0 == TRUE
Statement: $cond#262%0 == (((signed int)LINE1#209%0 | (signed int)LINE2#211%0) == 0)
Statement: $guard#262%0 == ($cond#223%0 && $guard#223%0)
Statement: smain.stato#263%0 == 7
Statement: $guard#263%0 == (!$cond#262%0 && $guard#262%0)
Statement: $cond#264%0 == TRUE
Statement: smain.stato#265%0 == 6
Statement: $guard#265%0 == ($cond#262%0 && $guard#262%0)
Statement: smain.OUTP#266%0 == !(~((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Statement: smain.stato#phi266%0 == ($guard#265%0 ? smain.stato#265%0 : smain.stato#263%0)
Statement: $guard#266%0 == ($cond#264%0 && $guard#263%0 || $guard#265%0)
Statement: smain.OVERFLW#267%0 == FALSE
Statement: $cond#268%0 == TRUE
Statement: $cond#269%0 == (((signed int)LINE1#209%0 & (signed int)LINE2#211%0) == 0)
Statement: $guard#269%0 == ($cond#224%0 && $guard#224%0)
Statement: smain.stato#270%0 == 3
Statement: $guard#270%0 == (!$cond#269%0 && $guard#269%0)
Statement: $cond#271%0 == TRUE
Statement: smain.stato#272%0 == 0
Statement: $guard#272%0 == ($cond#269%0 && $guard#269%0)
Statement: smain.OUTP#273%0 == !(((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Statement: smain.stato#phi273%0 == ($guard#272%0 ? smain.stato#272%0 : smain.stato#270%0)
Statement: $guard#273%0 == ($cond#271%0 && $guard#270%0 || $guard#272%0)
Statement: smain.OVERFLW#274%0 == FALSE
Statement: $cond#275%0 == TRUE
Statement: $cond#276%0 == (((signed int)LINE1#209%0 | (signed int)LINE2#211%0) == 0)
Statement: $guard#276%0 == ($cond#225%0 && $guard#225%0)
Statement: smain.stato#277%0 == 3
Statement: $guard#277%0 == (!$cond#276%0 && $guard#276%0)
Statement: $cond#278%0 == TRUE
Statement: smain.stato#279%0 == 0
Statement: $guard#279%0 == ($cond#276%0 && $guard#276%0)
Statement: smain.OUTP#280%0 == !(~((signed int)LINE1#209%0 ^ (signed int)LINE2#211%0) == 0)
Statement: smain.stato#phi280%0 == ($guard#279%0 ? smain.stato#279%0 : smain.stato#277%0)
Statement: $guard#280%0 == ($cond#278%0 && $guard#277%0 || $guard#279%0)
Statement: smain.OVERFLW#281%0 == FALSE
Statement: OUTP#282%0 == smain.OUTP#phi282%0
Statement: smain.OUTP#phi282%0 == ($guard#280%0 ? smain.OUTP#280%0 : ($cond#275%0 && $guard#273%0 ? smain.OUTP#273%0 : ($cond#268%0 && $guard#266%0 ? smain.OUTP#266%0 : ($cond#261%0 && $guard#259%0 ? smain.OUTP#259%0 : ($cond#254%0 && $guard#252%0 ? smain.OUTP#252%0 : ($cond#247%0 && $guard#245%0 ? smain.OUTP#245%0 : ($cond#240%0 && $guard#238%0 ? smain.OUTP#238%0 : ($cond#233%0 && $guard#231%0 ? smain.OUTP#231%0 : smain.OUTP#phi199%0))))))))
Statement: smain.OVERFLW#phi282%0 == ($guard#280%0 ? smain.OVERFLW#281%0 : ($cond#275%0 && $guard#273%0 ? smain.OVERFLW#274%0 : ($cond#268%0 && $guard#266%0 ? smain.OVERFLW#267%0 : ($cond#261%0 && $guard#259%0 ? smain.OVERFLW#260%0 : ($cond#254%0 && $guard#252%0 ? smain.OVERFLW#253%0 : ($cond#247%0 && $guard#245%0 ? smain.OVERFLW#246%0 : ($cond#240%0 && $guard#238%0 ? smain.OVERFLW#239%0 : ($cond#233%0 && $guard#231%0 ? smain.OVERFLW#232%0 : smain.OVERFLW#phi199%0))))))))
Statement: smain.stato#phi282%0 == ($guard#280%0 ? smain.stato#phi280%0 : ($cond#275%0 && $guard#273%0 ? smain.stato#phi273%0 : ($cond#268%0 && $guard#266%0 ? smain.stato#phi266%0 : ($cond#261%0 && $guard#259%0 ? smain.stato#phi259%0 : ($cond#254%0 && $guard#252%0 ? smain.stato#phi252%0 : ($cond#247%0 && $guard#245%0 ? smain.stato#phi245%0 : ($cond#240%0 && $guard#238%0 ? smain.stato#phi238%0 : ($cond#233%0 && $guard#231%0 ? smain.stato#phi231%0 : smain.stato#phi199%0))))))))
Statement: $guard#282%0 == ($cond#226%0 && $guard#226%0 || $cond#233%0 && $guard#231%0 || $cond#240%0 && $guard#238%0 || $cond#247%0 && $guard#245%0 || $cond#254%0 && $guard#252%0 || $cond#261%0 && $guard#259%0 || $cond#268%0 && $guard#266%0 || $cond#275%0 && $guard#273%0 || $guard#280%0)
Statement: OVERFLW#283%0 == smain.OVERFLW#phi282%0
Statement: $cond#291%0 == ((signed int)smain.OVERFLW#phi282%0 == 0)
Statement: OUTP#phi292%0 == ($cond#291%0 && $guard#282%0 ? OUTP#282%0 : OUTP#115%0)
Statement: OVERFLW#phi292%0 == ($cond#291%0 && $guard#282%0 ? OVERFLW#283%0 : OVERFLW#116%0)
Statement: smain.OUTP#phi292%0 == ($cond#291%0 && $guard#282%0 ? smain.OUTP#phi282%0 : smain.OUTP#phi115%0)
Statement: smain.OVERFLW#phi292%0 == ($cond#291%0 && $guard#282%0 ? smain.OVERFLW#phi282%0 : smain.OVERFLW#phi115%0)
Statement: smain.stato#phi292%0 == ($cond#291%0 && $guard#282%0 ? smain.stato#phi282%0 : smain.stato#phi115%0)
Statement: $cond#292%0 == TRUE
Statement: $guard#292%0 == (!$cond#291%0 && $guard#282%0 || $cond#123%0 && $guard#115%0 || $cond#291%0 && $guard#282%0)
Statement: !((signed int)smain.OVERFLW#phi282%0 == 0) || !$guard#282%0
Statement: $guard#40%1 == (!$cond#39%1 && $guard#39%1)
Statement: LINE1#42%1 == LINE1#25
Statement: LINE2#44%1 == LINE2#27
Statement: OUTP#46%1 == &OUTP
Statement: OVERFLW#48%1 == &OVERFLW
Statement: clock#50%1 == clock#33
Statement: $cond#51%1 == ((signed int)smain.stato#phi39%1 == 0)
Statement: $cond#52%1 == ((signed int)smain.stato#phi39%1 == 3)
Statement: $guard#52%1 == (!$cond#51%1 && $guard#40%1)
Statement: $cond#53%1 == ((signed int)smain.stato#phi39%1 == 1)
Statement: $guard#53%1 == (!$cond#52%1 && $guard#52%1)
Statement: $cond#54%1 == ((signed int)smain.stato#phi39%1 == 4)
Statement: $guard#54%1 == (!$cond#53%1 && $guard#53%1)
Statement: $cond#55%1 == ((signed int)smain.stato#phi39%1 == 2)
Statement: $guard#55%1 == (!$cond#54%1 && $guard#54%1)
Statement: $cond#56%1 == ((signed int)smain.stato#phi39%1 == 5)
Statement: $guard#56%1 == (!$cond#55%1 && $guard#55%1)
Statement: $cond#57%1 == ((signed int)smain.stato#phi39%1 == 6)
Statement: $guard#57%1 == (!$cond#56%1 && $guard#56%1)
Statement: $cond#58%1 == ((signed int)smain.stato#phi39%1 == 7)
Statement: $guard#58%1 == (!$cond#57%1 && $guard#57%1)
Statement: $cond#59%1 == TRUE
Statement: $guard#59%1 == (!$cond#58%1 && $guard#58%1)
Statement: $cond#60%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
Statement: $guard#60%1 == ($cond#51%1 && $guard#40%1)
Statement: smain.stato#61%1 == 4
Statement: $guard#61%1 == (!$cond#60%1 && $guard#60%1)
Statement: $cond#62%1 == TRUE
Statement: smain.stato#63%1 == 1
Statement: $guard#63%1 == ($cond#60%1 && $guard#60%1)
Statement: smain.OUTP#64%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Statement: smain.stato#phi64%1 == ($guard#63%1 ? smain.stato#63%1 : smain.stato#61%1)
Statement: $guard#64%1 == ($cond#62%1 && $guard#61%1 || $guard#63%1)
Statement: smain.OVERFLW#65%1 == FALSE
Statement: $cond#66%1 == TRUE
Statement: $cond#67%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
Statement: $guard#67%1 == ($cond#52%1 && $guard#52%1)
Statement: smain.stato#68%1 == 4
Statement: $guard#68%1 == (!$cond#67%1 && $guard#67%1)
Statement: $cond#69%1 == TRUE
Statement: smain.stato#70%1 == 1
Statement: $guard#70%1 == ($cond#67%1 && $guard#67%1)
Statement: smain.OUTP#71%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Statement: smain.stato#phi71%1 == ($guard#70%1 ? smain.stato#70%1 : smain.stato#68%1)
Statement: $guard#71%1 == ($cond#69%1 && $guard#68%1 || $guard#70%1)
Statement: smain.OVERFLW#72%1 == TRUE
Statement: $cond#73%1 == TRUE
Statement: $cond#74%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
Statement: $guard#74%1 == ($cond#53%1 && $guard#53%1)
Statement: smain.stato#75%1 == 5
Statement: $guard#75%1 == (!$cond#74%1 && $guard#74%1)
Statement: $cond#76%1 == TRUE
Statement: smain.stato#77%1 == 2
Statement: $guard#77%1 == ($cond#74%1 && $guard#74%1)
Statement: smain.OUTP#78%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Statement: smain.stato#phi78%1 == ($guard#77%1 ? smain.stato#77%1 : smain.stato#75%1)
Statement: $guard#78%1 == ($cond#76%1 && $guard#75%1 || $guard#77%1)
Statement: smain.OVERFLW#79%1 == FALSE
Statement: $cond#80%1 == TRUE
Statement: $cond#81%1 == (((signed int)LINE1#42%1 | (signed int)LINE2#44%1) == 0)
Statement: $guard#81%1 == ($cond#54%1 && $guard#54%1)
Statement: smain.stato#82%1 == 5
Statement: $guard#82%1 == (!$cond#81%1 && $guard#81%1)
Statement: $cond#83%1 == TRUE
Statement: smain.stato#84%1 == 2
Statement: $guard#84%1 == ($cond#81%1 && $guard#81%1)
Statement: smain.OUTP#85%1 == !(~((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Statement: smain.stato#phi85%1 == ($guard#84%1 ? smain.stato#84%1 : smain.stato#82%1)
Statement: $guard#85%1 == ($cond#83%1 && $guard#82%1 || $guard#84%1)
Statement: smain.OVERFLW#86%1 == FALSE
Statement: $cond#87%1 == TRUE
Statement: $cond#88%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
Statement: $guard#88%1 == ($cond#55%1 && $guard#55%1)
Statement: smain.stato#89%1 == 7
Statement: $guard#89%1 == (!$cond#88%1 && $guard#88%1)
Statement: $cond#90%1 == TRUE
Statement: smain.stato#91%1 == 6
Statement: $guard#91%1 == ($cond#88%1 && $guard#88%1)
Statement: smain.OUTP#92%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Statement: smain.stato#phi92%1 == ($guard#91%1 ? smain.stato#91%1 : smain.stato#89%1)
Statement: $guard#92%1 == ($cond#90%1 && $guard#89%1 || $guard#91%1)
Statement: smain.OVERFLW#93%1 == FALSE
Statement: $cond#94%1 == TRUE
Statement: $cond#95%1 == (((signed int)LINE1#42%1 | (signed int)LINE2#44%1) == 0)
Statement: $guard#95%1 == ($cond#56%1 && $guard#56%1)
Statement: smain.stato#96%1 == 7
Statement: $guard#96%1 == (!$cond#95%1 && $guard#95%1)
Statement: $cond#97%1 == TRUE
Statement: smain.stato#98%1 == 6
Statement: $guard#98%1 == ($cond#95%1 && $guard#95%1)
Statement: smain.OUTP#99%1 == !(~((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Statement: smain.stato#phi99%1 == ($guard#98%1 ? smain.stato#98%1 : smain.stato#96%1)
Statement: $guard#99%1 == ($cond#97%1 && $guard#96%1 || $guard#98%1)
Statement: smain.OVERFLW#100%1 == FALSE
Statement: $cond#101%1 == TRUE
Statement: $cond#102%1 == (((signed int)LINE1#42%1 & (signed int)LINE2#44%1) == 0)
Statement: $guard#102%1 == ($cond#57%1 && $guard#57%1)
Statement: smain.stato#103%1 == 3
Statement: $guard#103%1 == (!$cond#102%1 && $guard#102%1)
Statement: $cond#104%1 == TRUE
Statement: smain.stato#105%1 == 0
Statement: $guard#105%1 == ($cond#102%1 && $guard#102%1)
Statement: smain.OUTP#106%1 == !(((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Statement: smain.stato#phi106%1 == ($guard#105%1 ? smain.stato#105%1 : smain.stato#103%1)
Statement: $guard#106%1 == ($cond#104%1 && $guard#103%1 || $guard#105%1)
Statement: smain.OVERFLW#107%1 == FALSE
Statement: $cond#108%1 == TRUE
Statement: $cond#109%1 == (((signed int)LINE1#42%1 | (signed int)LINE2#44%1) == 0)
Statement: $guard#109%1 == ($cond#58%1 && $guard#58%1)
Statement: smain.stato#110%1 == 3
Statement: $guard#110%1 == (!$cond#109%1 && $guard#109%1)
Statement: $cond#111%1 == TRUE
Statement: smain.stato#112%1 == 0
Statement: $guard#112%1 == ($cond#109%1 && $guard#109%1)
Statement: smain.OUTP#113%1 == !(~((signed int)LINE1#42%1 ^ (signed int)LINE2#44%1) == 0)
Statement: smain.stato#phi113%1 == ($guard#112%1 ? smain.stato#112%1 : smain.stato#110%1)
Statement: $guard#113%1 == ($cond#111%1 && $guard#110%1 || $guard#112%1)
Statement: smain.OVERFLW#114%1 == FALSE
Statement: OUTP#115%1 == smain.OUTP#phi115%1
Statement: smain.OUTP#phi115%1 == ($guard#113%1 ? smain.OUTP#113%1 : ($cond#108%1 && $guard#106%1 ? smain.OUTP#106%1 : ($cond#101%1 && $guard#99%1 ? smain.OUTP#99%1 : ($cond#94%1 && $guard#92%1 ? smain.OUTP#92%1 : ($cond#87%1 && $guard#85%1 ? smain.OUTP#85%1 : ($cond#80%1 && $guard#78%1 ? smain.OUTP#78%1 : ($cond#73%1 && $guard#71%1 ? smain.OUTP#71%1 : ($cond#66%1 && $guard#64%1 ? smain.OUTP#64%1 : smain.OUTP#phi39%1))))))))
Statement: smain.OVERFLW#phi115%1 == ($guard#113%1 ? smain.OVERFLW#114%1 : ($cond#108%1 && $guard#106%1 ? smain.OVERFLW#107%1 : ($cond#101%1 && $guard#99%1 ? smain.OVERFLW#100%1 : ($cond#94%1 && $guard#92%1 ? smain.OVERFLW#93%1 : ($cond#87%1 && $guard#85%1 ? smain.OVERFLW#86%1 : ($cond#80%1 && $guard#78%1 ? smain.OVERFLW#79%1 : ($cond#73%1 && $guard#71%1 ? smain.OVERFLW#72%1 : ($cond#66%1 && $guard#64%1 ? smain.OVERFLW#65%1 : smain.OVERFLW#phi39%1))))))))
Statement: smain.stato#phi115%1 == ($guard#113%1 ? smain.stato#phi113%1 : ($cond#108%1 && $guard#106%1 ? smain.stato#phi106%1 : ($cond#101%1 && $guard#99%1 ? smain.stato#phi99%1 : ($cond#94%1 && $guard#92%1 ? smain.stato#phi92%1 : ($cond#87%1 && $guard#85%1 ? smain.stato#phi85%1 : ($cond#80%1 && $guard#78%1 ? smain.stato#phi78%1 : ($cond#73%1 && $guard#71%1 ? smain.stato#phi71%1 : ($cond#66%1 && $guard#64%1 ? smain.stato#phi64%1 : smain.stato#phi39%1))))))))
Statement: $guard#115%1 == ($cond#101%1 && $guard#99%1 || $cond#108%1 && $guard#106%1 || $cond#59%1 && $guard#59%1 || $cond#66%1 && $guard#64%1 || $cond#73%1 && $guard#71%1 || $cond#80%1 && $guard#78%1 || $cond#87%1 && $guard#85%1 || $cond#94%1 && $guard#92%1 || $guard#113%1)
Statement: OVERFLW#116%1 == smain.OVERFLW#phi115%1
Statement: $cond#123%1 == !((signed int)smain.OVERFLW#phi115%1 == 1)
Statement: $guard#124%1 == (!$cond#123%1 && $guard#115%1)
Statement: LINE1#126%1 == LINE1#25
Statement: LINE2#128%1 == LINE2#27
Statement: OUTP#130%1 == &OUTP
Statement: OVERFLW#132%1 == &OVERFLW
Statement: clock#134%1 == clock#33
Statement: $cond#135%1 == ((signed int)smain.stato#phi115%1 == 0)
Statement: $cond#136%1 == ((signed int)smain.stato#phi115%1 == 3)
Statement: $guard#136%1 == (!$cond#135%1 && $guard#124%1)
Statement: $cond#137%1 == ((signed int)smain.stato#phi115%1 == 1)
Statement: $guard#137%1 == (!$cond#136%1 && $guard#136%1)
Statement: $cond#138%1 == ((signed int)smain.stato#phi115%1 == 4)
Statement: $guard#138%1 == (!$cond#137%1 && $guard#137%1)
Statement: $cond#139%1 == ((signed int)smain.stato#phi115%1 == 2)
Statement: $guard#139%1 == (!$cond#138%1 && $guard#138%1)
Statement: $cond#140%1 == ((signed int)smain.stato#phi115%1 == 5)
Statement: $guard#140%1 == (!$cond#139%1 && $guard#139%1)
Statement: $cond#141%1 == ((signed int)smain.stato#phi115%1 == 6)
Statement: $guard#141%1 == (!$cond#140%1 && $guard#140%1)
Statement: $cond#142%1 == ((signed int)smain.stato#phi115%1 == 7)
Statement: $guard#142%1 == (!$cond#141%1 && $guard#141%1)
Statement: $cond#143%1 == TRUE
Statement: $guard#143%1 == (!$cond#142%1 && $guard#142%1)
Statement: $cond#144%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
Statement: $guard#144%1 == ($cond#135%1 && $guard#124%1)
Statement: smain.stato#145%1 == 4
Statement: $guard#145%1 == (!$cond#144%1 && $guard#144%1)
Statement: $cond#146%1 == TRUE
Statement: smain.stato#147%1 == 1
Statement: $guard#147%1 == ($cond#144%1 && $guard#144%1)
Statement: smain.OUTP#148%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Statement: smain.stato#phi148%1 == ($guard#147%1 ? smain.stato#147%1 : smain.stato#145%1)
Statement: $guard#148%1 == ($cond#146%1 && $guard#145%1 || $guard#147%1)
Statement: smain.OVERFLW#149%1 == FALSE
Statement: $cond#150%1 == TRUE
Statement: $cond#151%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
Statement: $guard#151%1 == ($cond#136%1 && $guard#136%1)
Statement: smain.stato#152%1 == 4
Statement: $guard#152%1 == (!$cond#151%1 && $guard#151%1)
Statement: $cond#153%1 == TRUE
Statement: smain.stato#154%1 == 1
Statement: $guard#154%1 == ($cond#151%1 && $guard#151%1)
Statement: smain.OUTP#155%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Statement: smain.stato#phi155%1 == ($guard#154%1 ? smain.stato#154%1 : smain.stato#152%1)
Statement: $guard#155%1 == ($cond#153%1 && $guard#152%1 || $guard#154%1)
Statement: smain.OVERFLW#156%1 == TRUE
Statement: $cond#157%1 == TRUE
Statement: $cond#158%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
Statement: $guard#158%1 == ($cond#137%1 && $guard#137%1)
Statement: smain.stato#159%1 == 5
Statement: $guard#159%1 == (!$cond#158%1 && $guard#158%1)
Statement: $cond#160%1 == TRUE
Statement: smain.stato#161%1 == 2
Statement: $guard#161%1 == ($cond#158%1 && $guard#158%1)
Statement: smain.OUTP#162%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Statement: smain.stato#phi162%1 == ($guard#161%1 ? smain.stato#161%1 : smain.stato#159%1)
Statement: $guard#162%1 == ($cond#160%1 && $guard#159%1 || $guard#161%1)
Statement: smain.OVERFLW#163%1 == FALSE
Statement: $cond#164%1 == TRUE
Statement: $cond#165%1 == (((signed int)LINE1#126%1 | (signed int)LINE2#128%1) == 0)
Statement: $guard#165%1 == ($cond#138%1 && $guard#138%1)
Statement: smain.stato#166%1 == 5
Statement: $guard#166%1 == (!$cond#165%1 && $guard#165%1)
Statement: $cond#167%1 == TRUE
Statement: smain.stato#168%1 == 2
Statement: $guard#168%1 == ($cond#165%1 && $guard#165%1)
Statement: smain.OUTP#169%1 == !(~((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Statement: smain.stato#phi169%1 == ($guard#168%1 ? smain.stato#168%1 : smain.stato#166%1)
Statement: $guard#169%1 == ($cond#167%1 && $guard#166%1 || $guard#168%1)
Statement: smain.OVERFLW#170%1 == FALSE
Statement: $cond#171%1 == TRUE
Statement: $cond#172%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
Statement: $guard#172%1 == ($cond#139%1 && $guard#139%1)
Statement: smain.stato#173%1 == 7
Statement: $guard#173%1 == (!$cond#172%1 && $guard#172%1)
Statement: $cond#174%1 == TRUE
Statement: smain.stato#175%1 == 6
Statement: $guard#175%1 == ($cond#172%1 && $guard#172%1)
Statement: smain.OUTP#176%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Statement: smain.stato#phi176%1 == ($guard#175%1 ? smain.stato#175%1 : smain.stato#173%1)
Statement: $guard#176%1 == ($cond#174%1 && $guard#173%1 || $guard#175%1)
Statement: smain.OVERFLW#177%1 == FALSE
Statement: $cond#178%1 == TRUE
Statement: $cond#179%1 == (((signed int)LINE1#126%1 | (signed int)LINE2#128%1) == 0)
Statement: $guard#179%1 == ($cond#140%1 && $guard#140%1)
Statement: smain.stato#180%1 == 7
Statement: $guard#180%1 == (!$cond#179%1 && $guard#179%1)
Statement: $cond#181%1 == TRUE
Statement: smain.stato#182%1 == 6
Statement: $guard#182%1 == ($cond#179%1 && $guard#179%1)
Statement: smain.OUTP#183%1 == !(~((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Statement: smain.stato#phi183%1 == ($guard#182%1 ? smain.stato#182%1 : smain.stato#180%1)
Statement: $guard#183%1 == ($cond#181%1 && $guard#180%1 || $guard#182%1)
Statement: smain.OVERFLW#184%1 == FALSE
Statement: $cond#185%1 == TRUE
Statement: $cond#186%1 == (((signed int)LINE1#126%1 & (signed int)LINE2#128%1) == 0)
Statement: $guard#186%1 == ($cond#141%1 && $guard#141%1)
Statement: smain.stato#187%1 == 3
Statement: $guard#187%1 == (!$cond#186%1 && $guard#186%1)
Statement: $cond#188%1 == TRUE
Statement: smain.stato#189%1 == 0
Statement: $guard#189%1 == ($cond#186%1 && $guard#186%1)
Statement: smain.OUTP#190%1 == !(((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Statement: smain.stato#phi190%1 == ($guard#189%1 ? smain.stato#189%1 : smain.stato#187%1)
Statement: $guard#190%1 == ($cond#188%1 && $guard#187%1 || $guard#189%1)
Statement: smain.OVERFLW#191%1 == FALSE
Statement: $cond#192%1 == TRUE
Statement: $cond#193%1 == (((signed int)LINE1#126%1 | (signed int)LINE2#128%1) == 0)
Statement: $guard#193%1 == ($cond#142%1 && $guard#142%1)
Statement: smain.stato#194%1 == 3
Statement: $guard#194%1 == (!$cond#193%1 && $guard#193%1)
Statement: $cond#195%1 == TRUE
Statement: smain.stato#196%1 == 0
Statement: $guard#196%1 == ($cond#193%1 && $guard#193%1)
Statement: smain.OUTP#197%1 == !(~((signed int)LINE1#126%1 ^ (signed int)LINE2#128%1) == 0)
Statement: smain.stato#phi197%1 == ($guard#196%1 ? smain.stato#196%1 : smain.stato#194%1)
Statement: $guard#197%1 == ($cond#195%1 && $guard#194%1 || $guard#196%1)
Statement: smain.OVERFLW#198%1 == FALSE
Statement: OUTP#199%1 == smain.OUTP#phi199%1
Statement: smain.OUTP#phi199%1 == ($guard#197%1 ? smain.OUTP#197%1 : ($cond#192%1 && $guard#190%1 ? smain.OUTP#190%1 : ($cond#185%1 && $guard#183%1 ? smain.OUTP#183%1 : ($cond#178%1 && $guard#176%1 ? smain.OUTP#176%1 : ($cond#171%1 && $guard#169%1 ? smain.OUTP#169%1 : ($cond#164%1 && $guard#162%1 ? smain.OUTP#162%1 : ($cond#157%1 && $guard#155%1 ? smain.OUTP#155%1 : ($cond#150%1 && $guard#148%1 ? smain.OUTP#148%1 : smain.OUTP#phi115%1))))))))
Statement: smain.OVERFLW#phi199%1 == ($guard#197%1 ? smain.OVERFLW#198%1 : ($cond#192%1 && $guard#190%1 ? smain.OVERFLW#191%1 : ($cond#185%1 && $guard#183%1 ? smain.OVERFLW#184%1 : ($cond#178%1 && $guard#176%1 ? smain.OVERFLW#177%1 : ($cond#171%1 && $guard#169%1 ? smain.OVERFLW#170%1 : ($cond#164%1 && $guard#162%1 ? smain.OVERFLW#163%1 : ($cond#157%1 && $guard#155%1 ? smain.OVERFLW#156%1 : ($cond#150%1 && $guard#148%1 ? smain.OVERFLW#149%1 : smain.OVERFLW#phi115%1))))))))
Statement: smain.stato#phi199%1 == ($guard#197%1 ? smain.stato#phi197%1 : ($cond#192%1 && $guard#190%1 ? smain.stato#phi190%1 : ($cond#185%1 && $guard#183%1 ? smain.stato#phi183%1 : ($cond#178%1 && $guard#176%1 ? smain.stato#phi176%1 : ($cond#171%1 && $guard#169%1 ? smain.stato#phi169%1 : ($cond#164%1 && $guard#162%1 ? smain.stato#phi162%1 : ($cond#157%1 && $guard#155%1 ? smain.stato#phi155%1 : ($cond#150%1 && $guard#148%1 ? smain.stato#phi148%1 : smain.stato#phi115%1))))))))
Statement: $guard#199%1 == ($cond#143%1 && $guard#143%1 || $cond#150%1 && $guard#148%1 || $cond#157%1 && $guard#155%1 || $cond#164%1 && $guard#162%1 || $cond#171%1 && $guard#169%1 || $cond#178%1 && $guard#176%1 || $cond#185%1 && $guard#183%1 || $cond#192%1 && $guard#190%1 || $guard#197%1)
Statement: OVERFLW#200%1 == smain.OVERFLW#phi199%1
Statement: LINE1#209%1 == LINE1#25
Statement: LINE2#211%1 == LINE2#27
Statement: OUTP#213%1 == &OUTP
Statement: OVERFLW#215%1 == &OVERFLW
Statement: clock#217%1 == clock#33
Statement: $cond#218%1 == ((signed int)smain.stato#phi199%1 == 0)
Statement: $cond#219%1 == ((signed int)smain.stato#phi199%1 == 3)
Statement: $guard#219%1 == (!$cond#218%1 && $guard#199%1)
Statement: $cond#220%1 == ((signed int)smain.stato#phi199%1 == 1)
Statement: $guard#220%1 == (!$cond#219%1 && $guard#219%1)
Statement: $cond#221%1 == ((signed int)smain.stato#phi199%1 == 4)
Statement: $guard#221%1 == (!$cond#220%1 && $guard#220%1)
Statement: $cond#222%1 == ((signed int)smain.stato#phi199%1 == 2)
Statement: $guard#222%1 == (!$cond#221%1 && $guard#221%1)
Statement: $cond#223%1 == ((signed int)smain.stato#phi199%1 == 5)
Statement: $guard#223%1 == (!$cond#222%1 && $guard#222%1)
Statement: $cond#224%1 == ((signed int)smain.stato#phi199%1 == 6)
Statement: $guard#224%1 == (!$cond#223%1 && $guard#223%1)
Statement: $cond#225%1 == ((signed int)smain.stato#phi199%1 == 7)
Statement: $guard#225%1 == (!$cond#224%1 && $guard#224%1)
Statement: $cond#226%1 == TRUE
Statement: $guard#226%1 == (!$cond#225%1 && $guard#225%1)
Statement: $cond#227%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
Statement: $guard#227%1 == ($cond#218%1 && $guard#199%1)
Statement: smain.stato#228%1 == 4
Statement: $guard#228%1 == (!$cond#227%1 && $guard#227%1)
Statement: $cond#229%1 == TRUE
Statement: smain.stato#230%1 == 1
Statement: $guard#230%1 == ($cond#227%1 && $guard#227%1)
Statement: smain.OUTP#231%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Statement: smain.stato#phi231%1 == ($guard#230%1 ? smain.stato#230%1 : smain.stato#228%1)
Statement: $guard#231%1 == ($cond#229%1 && $guard#228%1 || $guard#230%1)
Statement: smain.OVERFLW#232%1 == FALSE
Statement: $cond#233%1 == TRUE
Statement: $cond#234%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
Statement: $guard#234%1 == ($cond#219%1 && $guard#219%1)
Statement: smain.stato#235%1 == 4
Statement: $guard#235%1 == (!$cond#234%1 && $guard#234%1)
Statement: $cond#236%1 == TRUE
Statement: smain.stato#237%1 == 1
Statement: $guard#237%1 == ($cond#234%1 && $guard#234%1)
Statement: smain.OUTP#238%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Statement: smain.stato#phi238%1 == ($guard#237%1 ? smain.stato#237%1 : smain.stato#235%1)
Statement: $guard#238%1 == ($cond#236%1 && $guard#235%1 || $guard#237%1)
Statement: smain.OVERFLW#239%1 == TRUE
Statement: $cond#240%1 == TRUE
Statement: $cond#241%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
Statement: $guard#241%1 == ($cond#220%1 && $guard#220%1)
Statement: smain.stato#242%1 == 5
Statement: $guard#242%1 == (!$cond#241%1 && $guard#241%1)
Statement: $cond#243%1 == TRUE
Statement: smain.stato#244%1 == 2
Statement: $guard#244%1 == ($cond#241%1 && $guard#241%1)
Statement: smain.OUTP#245%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Statement: smain.stato#phi245%1 == ($guard#244%1 ? smain.stato#244%1 : smain.stato#242%1)
Statement: $guard#245%1 == ($cond#243%1 && $guard#242%1 || $guard#244%1)
Statement: smain.OVERFLW#246%1 == FALSE
Statement: $cond#247%1 == TRUE
Statement: $cond#248%1 == (((signed int)LINE1#209%1 | (signed int)LINE2#211%1) == 0)
Statement: $guard#248%1 == ($cond#221%1 && $guard#221%1)
Statement: smain.stato#249%1 == 5
Statement: $guard#249%1 == (!$cond#248%1 && $guard#248%1)
Statement: $cond#250%1 == TRUE
Statement: smain.stato#251%1 == 2
Statement: $guard#251%1 == ($cond#248%1 && $guard#248%1)
Statement: smain.OUTP#252%1 == !(~((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Statement: smain.stato#phi252%1 == ($guard#251%1 ? smain.stato#251%1 : smain.stato#249%1)
Statement: $guard#252%1 == ($cond#250%1 && $guard#249%1 || $guard#251%1)
Statement: smain.OVERFLW#253%1 == FALSE
Statement: $cond#254%1 == TRUE
Statement: $cond#255%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
Statement: $guard#255%1 == ($cond#222%1 && $guard#222%1)
Statement: smain.stato#256%1 == 7
Statement: $guard#256%1 == (!$cond#255%1 && $guard#255%1)
Statement: $cond#257%1 == TRUE
Statement: smain.stato#258%1 == 6
Statement: $guard#258%1 == ($cond#255%1 && $guard#255%1)
Statement: smain.OUTP#259%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Statement: smain.stato#phi259%1 == ($guard#258%1 ? smain.stato#258%1 : smain.stato#256%1)
Statement: $guard#259%1 == ($cond#257%1 && $guard#256%1 || $guard#258%1)
Statement: smain.OVERFLW#260%1 == FALSE
Statement: $cond#261%1 == TRUE
Statement: $cond#262%1 == (((signed int)LINE1#209%1 | (signed int)LINE2#211%1) == 0)
Statement: $guard#262%1 == ($cond#223%1 && $guard#223%1)
Statement: smain.stato#263%1 == 7
Statement: $guard#263%1 == (!$cond#262%1 && $guard#262%1)
Statement: $cond#264%1 == TRUE
Statement: smain.stato#265%1 == 6
Statement: $guard#265%1 == ($cond#262%1 && $guard#262%1)
Statement: smain.OUTP#266%1 == !(~((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Statement: smain.stato#phi266%1 == ($guard#265%1 ? smain.stato#265%1 : smain.stato#263%1)
Statement: $guard#266%1 == ($cond#264%1 && $guard#263%1 || $guard#265%1)
Statement: smain.OVERFLW#267%1 == FALSE
Statement: $cond#268%1 == TRUE
Statement: $cond#269%1 == (((signed int)LINE1#209%1 & (signed int)LINE2#211%1) == 0)
Statement: $guard#269%1 == ($cond#224%1 && $guard#224%1)
Statement: smain.stato#270%1 == 3
Statement: $guard#270%1 == (!$cond#269%1 && $guard#269%1)
Statement: $cond#271%1 == TRUE
Statement: smain.stato#272%1 == 0
Statement: $guard#272%1 == ($cond#269%1 && $guard#269%1)
Statement: smain.OUTP#273%1 == !(((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Statement: smain.stato#phi273%1 == ($guard#272%1 ? smain.stato#272%1 : smain.stato#270%1)
Statement: $guard#273%1 == ($cond#271%1 && $guard#270%1 || $guard#272%1)
Statement: smain.OVERFLW#274%1 == FALSE
Statement: $cond#275%1 == TRUE
Statement: $cond#276%1 == (((signed int)LINE1#209%1 | (signed int)LINE2#211%1) == 0)
Statement: $guard#276%1 == ($cond#225%1 && $guard#225%1)
Statement: smain.stato#277%1 == 3
Statement: $guard#277%1 == (!$cond#276%1 && $guard#276%1)
Statement: $cond#278%1 == TRUE
Statement: smain.stato#279%1 == 0
Statement: $guard#279%1 == ($cond#276%1 && $guard#276%1)
Statement: smain.OUTP#280%1 == !(~((signed int)LINE1#209%1 ^ (signed int)LINE2#211%1) == 0)
Statement: smain.stato#phi280%1 == ($guard#279%1 ? smain.stato#279%1 : smain.stato#277%1)
Statement: $guard#280%1 == ($cond#278%1 && $guard#277%1 || $guard#279%1)
Statement: smain.OVERFLW#281%1 == FALSE
Statement: OUTP#282%1 == smain.OUTP#phi282%1
Statement: smain.OUTP#phi282%1 == ($guard#280%1 ? smain.OUTP#280%1 : ($cond#275%1 && $guard#273%1 ? smain.OUTP#273%1 : ($cond#268%1 && $guard#266%1 ? smain.OUTP#266%1 : ($cond#261%1 && $guard#259%1 ? smain.OUTP#259%1 : ($cond#254%1 && $guard#252%1 ? smain.OUTP#252%1 : ($cond#247%1 && $guard#245%1 ? smain.OUTP#245%1 : ($cond#240%1 && $guard#238%1 ? smain.OUTP#238%1 : ($cond#233%1 && $guard#231%1 ? smain.OUTP#231%1 : smain.OUTP#phi199%1))))))))
Statement: smain.OVERFLW#phi282%1 == ($guard#280%1 ? smain.OVERFLW#281%1 : ($cond#275%1 && $guard#273%1 ? smain.OVERFLW#274%1 : ($cond#268%1 && $guard#266%1 ? smain.OVERFLW#267%1 : ($cond#261%1 && $guard#259%1 ? smain.OVERFLW#260%1 : ($cond#254%1 && $guard#252%1 ? smain.OVERFLW#253%1 : ($cond#247%1 && $guard#245%1 ? smain.OVERFLW#246%1 : ($cond#240%1 && $guard#238%1 ? smain.OVERFLW#239%1 : ($cond#233%1 && $guard#231%1 ? smain.OVERFLW#232%1 : smain.OVERFLW#phi199%1))))))))
Statement: smain.stato#phi282%1 == ($guard#280%1 ? smain.stato#phi280%1 : ($cond#275%1 && $guard#273%1 ? smain.stato#phi273%1 : ($cond#268%1 && $guard#266%1 ? smain.stato#phi266%1 : ($cond#261%1 && $guard#259%1 ? smain.stato#phi259%1 : ($cond#254%1 && $guard#252%1 ? smain.stato#phi252%1 : ($cond#247%1 && $guard#245%1 ? smain.stato#phi245%1 : ($cond#240%1 && $guard#238%1 ? smain.stato#phi238%1 : ($cond#233%1 && $guard#231%1 ? smain.stato#phi231%1 : smain.stato#phi199%1))))))))
Statement: $guard#282%1 == ($cond#226%1 && $guard#226%1 || $cond#233%1 && $guard#231%1 || $cond#240%1 && $guard#238%1 || $cond#247%1 && $guard#245%1 || $cond#254%1 && $guard#252%1 || $cond#261%1 && $guard#259%1 || $cond#268%1 && $guard#266%1 || $cond#275%1 && $guard#273%1 || $guard#280%1)
Statement: OVERFLW#283%1 == smain.OVERFLW#phi282%1
Statement: $cond#291%1 == ((signed int)smain.OVERFLW#phi282%1 == 0)
Statement: OUTP#phi292%1 == ($cond#291%1 && $guard#282%1 ? OUTP#282%1 : OUTP#115%1)
Statement: OVERFLW#phi292%1 == ($cond#291%1 && $guard#282%1 ? OVERFLW#283%1 : OVERFLW#116%1)
Statement: smain.OUTP#phi292%1 == ($cond#291%1 && $guard#282%1 ? smain.OUTP#phi282%1 : smain.OUTP#phi115%1)
Statement: smain.OVERFLW#phi292%1 == ($cond#291%1 && $guard#282%1 ? smain.OVERFLW#phi282%1 : smain.OVERFLW#phi115%1)
Statement: smain.stato#phi292%1 == ($cond#291%1 && $guard#282%1 ? smain.stato#phi282%1 : smain.stato#phi115%1)
Statement: $cond#292%1 == TRUE
Statement: $guard#292%1 == (!$cond#291%1 && $guard#282%1 || $cond#123%1 && $guard#115%1 || $cond#291%1 && $guard#282%1)
Statement: OUTP#phi39%0 == OUTP#phi292%1
Statement: OVERFLW#phi39%0 == OVERFLW#phi292%1
Statement: smain.OUTP#phi39%0 == smain.OUTP#phi292%1
Statement: smain.OVERFLW#phi39%0 == smain.OVERFLW#phi292%1
Statement: smain.stato#phi39%0 == smain.stato#phi292%1
Statement: $cond#39%0 == FALSE
Statement: $guard#39%0 == ($guard#292%1 && $cond#292%1)
Statement: !((signed int)smain.OVERFLW#phi282%1 == 0) || !$guard#282%1
Statement: OUTP#phi39%1 == ($guard#ls292%1 ? OUTP#lb292%1 : OUTP#29)
Statement: OVERFLW#phi39%1 == ($guard#ls292%1 ? OVERFLW#lb292%1 : OVERFLW#31)
Statement: smain.OUTP#phi39%1 == ($guard#ls292%1 ? smain.OUTP#lb292%1 : smain.OUTP#36)
Statement: smain.OVERFLW#phi39%1 == ($guard#ls292%1 ? smain.OVERFLW#lb292%1 : smain.OVERFLW#37)
Statement: smain.stato#phi39%1 == ($guard#ls292%1 ? smain.stato#lb292%1 : smain.stato#35)
Statement: $cond#39%1 == FALSE
Statement: $guard#39%1 == $guard#0
Statement: $cond#39 == ($guard#39%1 && $cond#39%1 ? $cond#39%1 : $cond#39%0)
Statement: $guard#39 == ($guard#39%1 && $cond#39%1 ? $guard#39%1 : $guard#39%0)
Statement: OUTP#phi39 == ($guard#39%1 && $cond#39%1 ? OUTP#phi39%1 : OUTP#phi39%0)
Statement: OVERFLW#phi39 == ($guard#39%1 && $cond#39%1 ? OVERFLW#phi39%1 : OVERFLW#phi39%0)
Statement: smain.OUTP#phi39 == ($guard#39%1 && $cond#39%1 ? smain.OUTP#phi39%1 : smain.OUTP#phi39%0)
Statement: smain.OVERFLW#phi39 == ($guard#39%1 && $cond#39%1 ? smain.OVERFLW#phi39%1 : smain.OVERFLW#phi39%0)
Statement: smain.stato#phi39 == ($guard#39%1 && $cond#39%1 ? smain.stato#phi39%1 : smain.stato#phi39%0)
The size of operands in assertions is 2

[startup+0.300147 s]
/proc/loadavg: 0.29 0.13 0.05 3/410 21048
/proc/meminfo: memFree=21452568/49446312 swapFree=0/4731340
[pid=21048] ppid=21046 vsize=41388 CPUtime=0.28 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6202 850 0 0 27 1 0 0 20 0 1 0 933307213 42381312 7369 18446744073709551615 4194304 8965104 140728309787952 140728309780832 6450006 0 24578 0 16384 0 0 0 17 3 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10347 7369 1521 1165 0 5971 0
Current children cumulated CPU time (s) 0.28
Current children cumulated vsize (KiB) 41388

[startup+0.700109 s]
/proc/loadavg: 0.29 0.13 0.05 3/410 21048
/proc/meminfo: memFree=21452568/49446312 swapFree=0/4731340
[pid=21048] ppid=21046 vsize=41388 CPUtime=0.68 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6202 850 0 0 67 1 0 0 20 0 1 0 933307213 42381312 7369 18446744073709551615 4194304 8965104 140728309787952 140728309780480 6653673 0 24578 0 16384 0 0 0 17 3 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10347 7369 1521 1165 0 5971 0
Current children cumulated CPU time (s) 0.68
Current children cumulated vsize (KiB) 41388

[startup+1.50011 s]
/proc/loadavg: 0.29 0.13 0.05 3/412 21053
/proc/meminfo: memFree=21429072/49446312 swapFree=0/4731452
[pid=21048] ppid=21046 vsize=41388 CPUtime=1.48 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6202 850 0 0 147 1 0 0 20 0 1 0 933307213 42381312 7369 18446744073709551615 4194304 8965104 140728309787952 140728309780832 6449931 0 24578 0 16384 0 0 0 17 3 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10347 7369 1521 1165 0 5971 0
Current children cumulated CPU time (s) 1.48
Current children cumulated vsize (KiB) 41388

[startup+3.10011 s]
/proc/loadavg: 0.29 0.13 0.05 3/412 21053
/proc/meminfo: memFree=21428328/49446312 swapFree=0/4731456
[pid=21048] ppid=21046 vsize=41388 CPUtime=3.07 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6202 850 0 0 306 1 0 0 20 0 1 0 933307213 42381312 7369 18446744073709551615 4194304 8965104 140728309787952 140728309780832 6449931 0 24578 0 16384 0 0 0 17 3 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10347 7369 1521 1165 0 5971 0
Current children cumulated CPU time (s) 3.07
Current children cumulated vsize (KiB) 41388

[startup+6.30018 s]
/proc/loadavg: 0.35 0.15 0.05 3/412 21053
/proc/meminfo: memFree=21428328/49446312 swapFree=0/4731456
[pid=21048] ppid=21046 vsize=41388 CPUtime=6.27 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6202 850 0 0 626 1 0 0 20 0 1 0 933307213 42381312 7369 18446744073709551615 4194304 8965104 140728309787952 140728309780880 6449931 0 24578 0 16384 0 0 0 17 2 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10347 7369 1521 1165 0 5971 0
Current children cumulated CPU time (s) 6.27
Current children cumulated vsize (KiB) 41388
The assertion checked now is: (!((signed int)smain.OVERFLW#phi282%0 == 0) || !$guard#282%0) && (!((signed int)smain.OVERFLW#phi282%1 == 0) || !$guard#282%1)
Printing all vars
$cond#101%0
$cond#101%1
$cond#102%0
$cond#102%1
$cond#104%0
$cond#104%1
$cond#108%0
$cond#108%1
$cond#109%0
$cond#109%1
$cond#111%0
$cond#111%1
$cond#123%0
$cond#123%1
$cond#135%0
$cond#135%1
$cond#136%0
$cond#136%1
$cond#137%0
$cond#137%1
$cond#138%0
$cond#138%1
$cond#139%0
$cond#139%1
$cond#140%0
$cond#140%1
$cond#141%0
$cond#141%1
$cond#142%0
$cond#142%1
$cond#143%0
$cond#143%1
$cond#144%0
$cond#144%1
$cond#146%0
$cond#146%1
$cond#150%0
$cond#150%1
$cond#151%0
$cond#151%1
$cond#153%0
$cond#153%1
$cond#157%0
$cond#157%1
$cond#158%0
$cond#158%1
$cond#160%0
$cond#160%1
$cond#164%0
$cond#164%1
$cond#165%0
$cond#165%1
$cond#167%0
$cond#167%1
$cond#171%0
$cond#171%1
$cond#172%0
$cond#172%1
$cond#174%0
$cond#174%1
$cond#178%0
$cond#178%1
$cond#179%0
$cond#179%1
$cond#181%0
$cond#181%1
$cond#185%0
$cond#185%1
$cond#186%0
$cond#186%1
$cond#188%0
$cond#188%1
$cond#192%0
$cond#192%1
$cond#193%0
$cond#193%1
$cond#195%0
$cond#195%1
$cond#218%0
$cond#218%1
$cond#219%0
$cond#219%1
$cond#220%0
$cond#220%1
$cond#221%0
$cond#221%1
$cond#222%0
$cond#222%1
$cond#223%0
$cond#223%1
$cond#224%0
$cond#224%1
$cond#225%0
$cond#225%1
$cond#226%0
$cond#226%1
$cond#227%0
$cond#227%1
$cond#229%0
$cond#229%1
$cond#233%0
$cond#233%1
$cond#234%0
$cond#234%1
$cond#236%0
$cond#236%1
$cond#240%0
$cond#240%1
$cond#241%0
$cond#241%1
$cond#243%0
$cond#243%1
$cond#247%0
$cond#247%1
$cond#248%0
$cond#248%1
$cond#250%0
$cond#250%1
$cond#254%0
$cond#254%1
$cond#255%0
$cond#255%1
$cond#257%0
$cond#257%1
$cond#261%0
$cond#261%1
$cond#262%0
$cond#262%1
$cond#264%0
$cond#264%1
$cond#268%0
$cond#268%1
$cond#269%0
$cond#269%1
$cond#271%0
$cond#271%1
$cond#275%0
$cond#275%1
$cond#276%0
$cond#276%1
$cond#278%0
$cond#278%1
$cond#291%0
$cond#291%1
$cond#292%1
$cond#39
$cond#39%0
$cond#39%1
$cond#51%0
$cond#51%1
$cond#52%0
$cond#52%1
$cond#53%0
$cond#53%1
$cond#54%0
$cond#54%1
$cond#55%0
$cond#55%1
$cond#56%0
$cond#56%1
$cond#57%0
$cond#57%1
$cond#58%0
$cond#58%1
$cond#59%0
$cond#59%1
$cond#60%0
$cond#60%1
$cond#62%0
$cond#62%1
$cond#66%0
$cond#66%1
$cond#67%0
$cond#67%1
$cond#69%0
$cond#69%1
$cond#73%0
$cond#73%1
$cond#74%0
$cond#74%1
$cond#76%0
$cond#76%1
$cond#80%0
$cond#80%1
$cond#81%0
$cond#81%1
$cond#83%0
$cond#83%1
$cond#87%0
$cond#87%1
$cond#88%0
$cond#88%1
$cond#90%0
$cond#90%1
$cond#94%0
$cond#94%1
$cond#95%0
$cond#95%1
$cond#97%0
$cond#97%1
$guard#0
$guard#102%0
$guard#102%1
$guard#103%0
$guard#103%1
$guard#105%0
$guard#105%1
$guard#106%0
$guard#106%1
$guard#109%0
$guard#109%1
$guard#110%0
$guard#110%1
$guard#112%0
$guard#112%1
$guard#113%0
$guard#113%1
$guard#115%0
$guard#115%1
$guard#124%0
$guard#124%1
$guard#136%0
$guard#136%1
$guard#137%0
$guard#137%1
$guard#138%0
$guard#138%1
$guard#139%0
$guard#139%1
$guard#140%0
$guard#140%1
$guard#141%0
$guard#141%1
$guard#142%0
$guard#142%1
$guard#143%0
$guard#143%1
$guard#144%0
$guard#144%1
$guard#145%0
$guard#145%1
$guard#147%0
$guard#147%1
$guard#148%0
$guard#148%1
$guard#151%0
$guard#151%1
$guard#152%0
$guard#152%1
$guard#154%0
$guard#154%1
$guard#155%0
$guard#155%1
$guard#158%0
$guard#158%1
$guard#159%0
$guard#159%1
$guard#161%0
$guard#161%1
$guard#162%0
$guard#162%1
$guard#165%0
$guard#165%1
$guard#166%0
$guard#166%1
$guard#168%0
$guard#168%1
$guard#169%0
$guard#169%1
$guard#172%0
$guard#172%1
$guard#173%0
$guard#173%1
$guard#175%0
$guard#175%1
$guard#176%0
$guard#176%1
$guard#179%0
$guard#179%1
$guard#180%0
$guard#180%1
$guard#182%0
$guard#182%1
$guard#183%0
$guard#183%1
$guard#186%0
$guard#186%1
$guard#187%0
$guard#187%1
$guard#189%0
$guard#189%1
$guard#190%0
$guard#190%1
$guard#193%0
$guard#193%1
$guard#194%0
$guard#194%1
$guard#196%0
$guard#196%1
$guard#197%0
$guard#197%1
$guard#199%0
$guard#199%1
$guard#219%0
$guard#219%1
$guard#220%0
$guard#220%1
$guard#221%0
$guard#221%1
$guard#222%0
$guard#222%1
$guard#223%0
$guard#223%1
$guard#224%0
$guard#224%1
$guard#225%0
$guard#225%1
$guard#226%0
$guard#226%1
$guard#227%0
$guard#227%1
$guard#228%0
$guard#228%1
$guard#230%0
$guard#230%1
$guard#231%0
$guard#231%1
$guard#234%0
$guard#234%1
$guard#235%0
$guard#235%1
$guard#237%0
$guard#237%1
$guard#238%0
$guard#238%1
$guard#241%0
$guard#241%1
$guard#242%0
$guard#242%1
$guard#244%0
$guard#244%1
$guard#245%0
$guard#245%1
$guard#248%0
$guard#248%1
$guard#249%0
$guard#249%1
$guard#251%0
$guard#251%1
$guard#252%0
$guard#252%1
$guard#255%0
$guard#255%1
$guard#256%0
$guard#256%1
$guard#258%0
$guard#258%1
$guard#259%0
$guard#259%1
$guard#262%0
$guard#262%1
$guard#263%0
$guard#263%1
$guard#265%0
$guard#265%1
$guard#266%0
$guard#266%1
$guard#269%0
$guard#269%1
$guard#270%0
$guard#270%1
$guard#272%0
$guard#272%1
$guard#273%0
$guard#273%1
$guard#276%0
$guard#276%1
$guard#277%0
$guard#277%1
$guard#279%0
$guard#279%1
$guard#280%0
$guard#280%1
$guard#282%0
$guard#282%1
$guard#292%0
$guard#292%1
$guard#293
$guard#39
$guard#39%0
$guard#39%1
$guard#40%0
$guard#40%1
$guard#52%0
$guard#52%1
$guard#53%0
$guard#53%1
$guard#54%0
$guard#54%1
$guard#55%0
$guard#55%1
$guard#56%0
$guard#56%1
$guard#57%0
$guard#57%1
$guard#58%0
$guard#58%1
$guard#59%0
$guard#59%1
$guard#60%0
$guard#60%1
$guard#61%0
$guard#61%1
$guard#63%0
$guard#63%1
$guard#64%0
$guard#64%1
$guard#67%0
$guard#67%1
$guard#68%0
$guard#68%1
$guard#70%0
$guard#70%1
$guard#71%0
$guard#71%1
$guard#74%0
$guard#74%1
$guard#75%0
$guard#75%1
$guard#77%0
$guard#77%1
$guard#78%0
$guard#78%1
$guard#81%0
$guard#81%1
$guard#82%0
$guard#82%1
$guard#84%0
$guard#84%1
$guard#85%0
$guard#85%1
$guard#88%0
$guard#88%1
$guard#89%0
$guard#89%1
$guard#91%0
$guard#91%1
$guard#92%0
$guard#92%1
$guard#95%0
$guard#95%1
$guard#96%0
$guard#96%1
$guard#98%0
$guard#98%1
$guard#99%0
$guard#99%1
$guard#ls292%1
LINE1#126%0
LINE1#126%1
LINE1#209%0
LINE1#209%1
LINE1#42%0
LINE1#42%1
LINE2#128%0
LINE2#128%1
LINE2#211%0
LINE2#211%1
LINE2#44%0
LINE2#44%1
LINE1#25
LINE2#27
OUTP#115%0
OUTP#115%1
OUTP#199%0
OUTP#199%1
OUTP#282%0
OUTP#282%1
OUTP#29
OUTP#lb292%1
OUTP#phi292%0
OUTP#phi292%1
OUTP#phi39
OUTP#phi39%0
OUTP#phi39%1
OVERFLW#116%0
OVERFLW#116%1
OVERFLW#200%0
OVERFLW#200%1
OVERFLW#283%0
OVERFLW#283%1
OVERFLW#31
OVERFLW#lb292%1
OVERFLW#phi292%0
OVERFLW#phi292%1
OVERFLW#phi39
OVERFLW#phi39%0
OVERFLW#phi39%1
smain.OUTP#106%0
smain.OUTP#106%1
smain.OUTP#113%0
smain.OUTP#113%1
smain.OUTP#148%0
smain.OUTP#148%1
smain.OUTP#155%0
smain.OUTP#155%1
smain.OUTP#162%0
smain.OUTP#162%1
smain.OUTP#169%0
smain.OUTP#169%1
smain.OUTP#176%0
smain.OUTP#176%1
smain.OUTP#183%0
smain.OUTP#183%1
smain.OUTP#190%0
smain.OUTP#190%1
smain.OUTP#197%0
smain.OUTP#197%1
smain.OUTP#231%0
smain.OUTP#231%1
smain.OUTP#238%0
smain.OUTP#238%1
smain.OUTP#245%0
smain.OUTP#245%1
smain.OUTP#252%0
smain.OUTP#252%1
smain.OUTP#259%0
smain.OUTP#259%1
smain.OUTP#266%0
smain.OUTP#266%1
smain.OUTP#273%0
smain.OUTP#273%1
smain.OUTP#280%0
smain.OUTP#280%1
smain.OUTP#36
smain.OUTP#64%0
smain.OUTP#64%1
smain.OUTP#71%0
smain.OUTP#71%1
smain.OUTP#78%0
smain.OUTP#78%1
smain.OUTP#85%0
smain.OUTP#85%1
smain.OUTP#92%0
smain.OUTP#92%1
smain.OUTP#99%0
smain.OUTP#99%1
smain.OUTP#lb292%1
smain.OUTP#phi115%0
smain.OUTP#phi115%1
smain.OUTP#phi199%0
smain.OUTP#phi199%1
smain.OUTP#phi282%0
smain.OUTP#phi282%1
smain.OUTP#phi292%0
smain.OUTP#phi292%1
smain.OUTP#phi39
smain.OUTP#phi39%0
smain.OUTP#phi39%1
smain.OVERFLW#100%0
smain.OVERFLW#100%1
smain.OVERFLW#107%0
smain.OVERFLW#107%1
smain.OVERFLW#114%0
smain.OVERFLW#114%1
smain.OVERFLW#149%0
smain.OVERFLW#149%1
smain.OVERFLW#156%0
smain.OVERFLW#156%1
smain.OVERFLW#163%0
smain.OVERFLW#163%1
smain.OVERFLW#170%0
smain.OVERFLW#170%1
smain.OVERFLW#177%0
smain.OVERFLW#177%1
smain.OVERFLW#184%0
smain.OVERFLW#184%1
smain.OVERFLW#191%0
smain.OVERFLW#191%1
smain.OVERFLW#198%0
smain.OVERFLW#198%1
smain.OVERFLW#232%0
smain.OVERFLW#232%1
smain.OVERFLW#239%0
smain.OVERFLW#239%1
smain.OVERFLW#246%0
smain.OVERFLW#246%1
smain.OVERFLW#253%0
smain.OVERFLW#253%1
smain.OVERFLW#260%0
smain.OVERFLW#260%1
smain.OVERFLW#267%0
smain.OVERFLW#267%1
smain.OVERFLW#274%0
smain.OVERFLW#274%1
smain.OVERFLW#281%0
smain.OVERFLW#281%1
smain.OVERFLW#37
smain.OVERFLW#65%0
smain.OVERFLW#65%1
smain.OVERFLW#72%0
smain.OVERFLW#72%1
smain.OVERFLW#79%0
smain.OVERFLW#79%1
smain.OVERFLW#86%0
smain.OVERFLW#86%1
smain.OVERFLW#93%0
smain.OVERFLW#93%1
smain.OVERFLW#lb292%1
smain.OVERFLW#phi115%0
smain.OVERFLW#phi115%1
smain.OVERFLW#phi199%0
smain.OVERFLW#phi199%1
smain.OVERFLW#phi282%0
smain.OVERFLW#phi282%1
smain.OVERFLW#phi292%0
smain.OVERFLW#phi292%1
smain.OVERFLW#phi39
smain.OVERFLW#phi39%0
smain.OVERFLW#phi39%1
smain.stato#103%0
smain.stato#103%1
smain.stato#105%0
smain.stato#105%1
smain.stato#110%0
smain.stato#110%1
smain.stato#112%0
smain.stato#112%1
smain.stato#145%0
smain.stato#145%1
smain.stato#147%0
smain.stato#147%1
smain.stato#152%0
smain.stato#152%1
smain.stato#154%0
smain.stato#154%1
smain.stato#159%0
smain.stato#159%1
smain.stato#161%0
smain.stato#161%1
smain.stato#166%0
smain.stato#166%1
smain.stato#168%0
smain.stato#168%1
smain.stato#173%0
smain.stato#173%1
smain.stato#175%0
smain.stato#175%1
smain.stato#180%0
smain.stato#180%1
smain.stato#182%0
smain.stato#182%1
smain.stato#187%0
smain.stato#187%1
smain.stato#189%0
smain.stato#189%1
smain.stato#194%0
smain.stato#194%1
smain.stato#196%0
smain.stato#196%1
smain.stato#228%0
smain.stato#228%1
smain.stato#230%0
smain.stato#230%1
smain.stato#235%0
smain.stato#235%1
smain.stato#237%0
smain.stato#237%1
smain.stato#242%0
smain.stato#242%1
smain.stato#244%0
smain.stato#244%1
smain.stato#249%0
smain.stato#249%1
smain.stato#251%0
smain.stato#251%1
smain.stato#256%0
smain.stato#256%1
smain.stato#258%0
smain.stato#258%1
smain.stato#263%0
smain.stato#263%1
smain.stato#265%0
smain.stato#265%1
smain.stato#270%0
smain.stato#270%1
smain.stato#272%0
smain.stato#272%1
smain.stato#277%0
smain.stato#277%1
smain.stato#279%0
smain.stato#279%1
smain.stato#35
smain.stato#61%0
smain.stato#61%1
smain.stato#63%0
smain.stato#63%1
smain.stato#68%0
smain.stato#68%1
smain.stato#70%0
smain.stato#70%1
smain.stato#75%0
smain.stato#75%1
smain.stato#77%0
smain.stato#77%1
smain.stato#82%0
smain.stato#82%1
smain.stato#84%0
smain.stato#84%1
smain.stato#89%0
smain.stato#89%1
smain.stato#91%0
smain.stato#91%1
smain.stato#96%0
smain.stato#96%1
smain.stato#98%0
smain.stato#98%1
smain.stato#lb292%1
smain.stato#phi106%0
smain.stato#phi106%1
smain.stato#phi113%0
smain.stato#phi113%1
smain.stato#phi115%0
smain.stato#phi115%1
smain.stato#phi148%0
smain.stato#phi148%1
smain.stato#phi155%0
smain.stato#phi155%1
smain.stato#phi162%0
smain.stato#phi162%1
smain.stato#phi169%0
smain.stato#phi169%1
smain.stato#phi176%0
smain.stato#phi176%1
smain.stato#phi183%0
smain.stato#phi183%1
smain.stato#phi190%0
smain.stato#phi190%1
smain.stato#phi197%0
smain.stato#phi197%1
smain.stato#phi199%0
smain.stato#phi199%1
smain.stato#phi231%0
smain.stato#phi231%1
smain.stato#phi238%0
smain.stato#phi238%1
smain.stato#phi245%0
smain.stato#phi245%1
smain.stato#phi252%0
smain.stato#phi252%1
smain.stato#phi259%0
smain.stato#phi259%1
smain.stato#phi266%0
smain.stato#phi266%1
smain.stato#phi273%0
smain.stato#phi273%1
smain.stato#phi280%0
smain.stato#phi280%1
smain.stato#phi282%0
smain.stato#phi282%1
smain.stato#phi292%0
smain.stato#phi292%1
smain.stato#phi39
smain.stato#phi39%0
smain.stato#phi39%1
smain.stato#phi64%0
smain.stato#phi64%1
smain.stato#phi71%0
smain.stato#phi71%1
smain.stato#phi78%0
smain.stato#phi78%1
smain.stato#phi85%0
smain.stato#phi85%1
smain.stato#phi92%0
smain.stato#phi92%1
smain.stato#phi99%0
smain.stato#phi99%1
The assertion checked now is: (!((signed int)smain.OVERFLW#phi282%0 == 0) || !$guard#282%0) && (!((signed int)smain.OVERFLW#phi282%1 == 0) || !$guard#282%1)
The assumption is TRUE
Printing all decision variables inside solver
$cond#102%0  , 
$cond#102%1  , 
$cond#109%0  , 
$cond#109%1  , 
$cond#123%0  , 
$cond#123%1  , 
$cond#135%0  , 
$cond#135%1  , 
$cond#136%0  , 
$cond#136%1  , 
$cond#137%0  , 
$cond#137%1  , 
$cond#138%0  , 
$cond#138%1  , 
$cond#139%0  , 
$cond#139%1  , 
$cond#140%0  , 
$cond#140%1  , 
$cond#141%0  , 
$cond#141%1  , 
$cond#142%0  , 
$cond#142%1  , 
$cond#144%0  , 
$cond#144%1  , 
$cond#151%0  , 
$cond#151%1  , 
$cond#158%0  , 
$cond#158%1  , 
$cond#165%0  , 
$cond#165%1  , 
$cond#172%0  , 
$cond#172%1  , 
$cond#179%0  , 
$cond#179%1  , 
$cond#186%0  , 
$cond#186%1  , 
$cond#193%0  , 
$cond#193%1  , 
$cond#218%0  , 
$cond#218%1  , 
$cond#219%0  , 
$cond#219%1  , 
$cond#220%0  , 
$cond#220%1  , 
$cond#221%0  , 
$cond#221%1  , 
$cond#222%0  , 
$cond#222%1  , 
$cond#223%0  , 
$cond#223%1  , 
$cond#224%0  , 
$cond#224%1  , 
$cond#225%0  , 
$cond#225%1  , 
$cond#227%0  , 
$cond#227%1  , 
$cond#234%0  , 
$cond#234%1  , 
$cond#241%0  , 
$cond#241%1  , 
$cond#248%0  , 
$cond#248%1  , 
$cond#255%0  , 
$cond#255%1  , 
$cond#262%0  , 
$cond#262%1  , 
$cond#269%0  , 
$cond#269%1  , 
$cond#276%0  , 
$cond#276%1  , 
$cond#291%0  , 
$cond#291%1  , 
$cond#39  , 
$cond#51%0  , 
$cond#51%1  , 
$cond#52%0  , 
$cond#52%1  , 
$cond#53%0  , 
$cond#53%1  , 
$cond#54%0  , 
$cond#54%1  , 
$cond#55%0  , 
$cond#55%1  , 
$cond#56%0  , 
$cond#56%1  , 
$cond#57%0  , 
$cond#57%1  , 
$cond#58%0  , 
$cond#58%1  , 
$cond#60%0  , 
$cond#60%1  , 
$cond#67%0  , 
$cond#67%1  , 
$cond#74%0  , 
$cond#74%1  , 
$cond#81%0  , 
$cond#81%1  , 
$cond#88%0  , 
$cond#88%1  , 
$cond#95%0  , 
$cond#95%1  , 
LINE1#126%0  , 
LINE1#126%1  , 
LINE1#209%0  , 
LINE1#209%1  , 
LINE1#42%0  , 
LINE1#42%1  , 
LINE2#128%0  , 
LINE2#128%1  , 
LINE2#211%0  , 
LINE2#211%1  , 
LINE2#44%0  , 
LINE2#44%1  , 
LINE1#25  , 
LINE2#27  , 
OUTP#115%0  , 
OUTP#115%1  , 
OUTP#199%0  , 
OUTP#199%1  , 
OUTP#282%0  , 
OUTP#282%1  , 
OUTP#29  , 
OVERFLW#116%0  , 
OVERFLW#116%1  , 
OVERFLW#200%0  , 
OVERFLW#200%1  , 
OVERFLW#283%0  , 
OVERFLW#283%1  , 
OVERFLW#31  , 
smain.OUTP#106%0  , 
smain.OUTP#106%1  , 
smain.OUTP#113%0  , 
smain.OUTP#113%1  , 
smain.OUTP#148%0  , 
smain.OUTP#148%1  , 
smain.OUTP#155%0  , 
smain.OUTP#155%1  , 
smain.OUTP#162%0  , 
smain.OUTP#162%1  , 
smain.OUTP#169%0  , 
smain.OUTP#169%1  , 
smain.OUTP#176%0  , 
smain.OUTP#176%1  , 
smain.OUTP#183%0  , 
smain.OUTP#183%1  , 
smain.OUTP#190%0  , 
smain.OUTP#190%1  , 
smain.OUTP#197%0  , 
smain.OUTP#197%1  , 
smain.OUTP#231%0  , 
smain.OUTP#231%1  , 
smain.OUTP#238%0  , 
smain.OUTP#238%1  , 
smain.OUTP#245%0  , 
smain.OUTP#245%1  , 
smain.OUTP#252%0  , 
smain.OUTP#252%1  , 
smain.OUTP#259%0  , 
smain.OUTP#259%1  , 
smain.OUTP#266%0  , 
smain.OUTP#266%1  , 
smain.OUTP#273%0  , 
smain.OUTP#273%1  , 
smain.OUTP#280%0  , 
smain.OUTP#280%1  , 
smain.OUTP#64%0  , 
smain.OUTP#64%1  , 
smain.OUTP#71%0  , 
smain.OUTP#71%1  , 
smain.OUTP#78%0  , 
smain.OUTP#78%1  , 
smain.OUTP#85%0  , 
smain.OUTP#85%1  , 
smain.OUTP#92%0  , 
smain.OUTP#92%1  , 
smain.OUTP#99%0  , 
smain.OUTP#99%1  , 
The additional constraint for the loop is: !$guard#ls292%1
Compiling
Compiling
prop_trail size is: 0
control_trail is empty
Now push all collected constraints
Inside Normalize Value
The trail before syntactic normalizing is 
Printing the value inside normalization
The assumption operand is TRUE
********************************
        DEDUCTION PHASE 
********************************
Starting Propagation in Propositional clauses
Propagation did not lead to CONFLICT in propositional clauses !!
Starting propagation using AI: forward and backward iteration
Pop: smain.OVERFLW#232%0 == FALSE
prop_trail size is: 0
control_trail is empty
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
Computing old abstract value of implication graph: 
Old: 
The list of live variables are 
smain.OVERFLW#232%0
[ACDL-DOMAIN] old value: 
DOMAIN projected live variables are: smain.OVERFLW#232%0 
WARNING: do not know how to propagate smain.OVERFLW#232%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 0
The variables are 
The total time for template generation is 8e-06 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 

[startup+12.7001 s]
/proc/loadavg: 0.48 0.18 0.07 3/411 21053
/proc/meminfo: memFree=21427724/49446312 swapFree=0/4731460
[pid=21048] ppid=21046 vsize=41388 CPUtime=12.65 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6220 850 0 0 1264 1 0 0 20 0 1 0 933307213 42381312 7677 18446744073709551615 4194304 8965104 140728309787952 140728309779384 4337284 0 24578 0 16384 0 0 0 17 2 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10347 7677 1804 1165 0 5971 0
Current children cumulated CPU time (s) 12.65
Current children cumulated vsize (KiB) 41388
New: 
prop_trail size is: 0
control_trail is empty
Now push all collected constraints
Computing new abstract value of implication graph: 
Pop: $cond#233%0 == TRUE
prop_trail size is: 0
control_trail is empty
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
Computing old abstract value of implication graph: 
Old: 
The list of live variables are 
$cond#233%0
[ACDL-DOMAIN] old value: 
DOMAIN projected live variables are: $cond#233%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#233%0): 
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#233%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#233%0): $cond#233%0
The total number of variables passed to the template generator is 0
The variables are 
The total time for template generation is 3e-06 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#233%0
conflict graph: $cond#233%0
Pushed into reason trail
The reason element pushed is:: $cond#233%0 == TRUEIndex:: Begin 4294967295End 0
New: $cond#233%0
prop_trail size is: 1
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#233%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#233%0
Pop: smain.OVERFLW#239%0 == TRUE
prop_trail size is: 1
control_trail is empty
Donot Preprocess value $cond#233%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
Computing old abstract value of implication graph: 
$cond#233%0
Old: $cond#233%0
The list of live variables are 
smain.OVERFLW#239%0
[ACDL-DOMAIN] old value: $cond#233%0
DOMAIN projected live variables are: smain.OVERFLW#239%0 
WARNING: do not know how to propagate smain.OVERFLW#239%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 1
The variables are 
$cond#233%0, 
The total time for template generation is 6e-06 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 1
control_trail is empty
Donot Preprocess value $cond#233%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
Pop: $cond#240%0 == TRUE
prop_trail size is: 1
control_trail is empty
Donot Preprocess value $cond#233%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
Computing old abstract value of implication graph: 
$cond#233%0
Old: $cond#233%0
The list of live variables are 
$cond#240%0
[ACDL-DOMAIN] old value: $cond#233%0
DOMAIN projected live variables are: $cond#240%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#240%0): $cond#233%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#240%0
Simplified expression is $cond#240%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#240%0): $cond#240%0
The total number of variables passed to the template generator is 1
The variables are 
$cond#233%0, 
The total time for template generation is 5e-06 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#240%0
conflict graph: $cond#240%0
Pushed into reason trail
The reason element pushed is:: $cond#240%0 == TRUEIndex:: Begin 0End 1
New: $cond#240%0
prop_trail size is: 2
control_trail is empty
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#240%0
$cond#233%0
$cond#240%0
Pop: smain.OVERFLW#246%0 == FALSE
prop_trail size is: 2
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
Old: $cond#233%0 && $cond#240%0
The list of live variables are 
smain.OVERFLW#246%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0
DOMAIN projected live variables are: smain.OVERFLW#246%0 
WARNING: do not know how to propagate smain.OVERFLW#246%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 2
The variables are 
$cond#233%0, 
$cond#240%0, 
The total time for template generation is 6e-06 s
Template variables: 

Template: 

<refinement-iteration>1</refinement-iteration>

RESULT: 
[ACDL-DOMAIN] deductions: 

[startup+25.5002 s]
/proc/loadavg: 0.82 0.27 0.10 3/411 21053
/proc/meminfo: memFree=21427600/49446312 swapFree=0/4731488
[pid=21048] ppid=21046 vsize=41388 CPUtime=25.41 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6228 850 0 0 2540 1 0 0 20 0 1 0 933307213 42381312 7677 18446744073709551615 4194304 8965104 140728309787952 140728309779200 139873740262072 0 24578 0 16384 0 0 0 17 2 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10347 7677 1804 1165 0 5971 0
Current children cumulated CPU time (s) 25.41
Current children cumulated vsize (KiB) 41388
New: 
prop_trail size is: 2
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
Pop: $cond#247%0 == TRUE
prop_trail size is: 2
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
Old: $cond#233%0 && $cond#240%0
The list of live variables are 
$cond#247%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0
DOMAIN projected live variables are: $cond#247%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#247%0): $cond#233%0 && $cond#240%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#247%0
Simplified expression is $cond#247%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#247%0): $cond#247%0
The total number of variables passed to the template generator is 2
The variables are 
$cond#233%0, 
$cond#240%0, 
The total time for template generation is 7e-06 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#247%0
conflict graph: $cond#247%0
Pushed into reason trail
The reason element pushed is:: $cond#247%0 == TRUEIndex:: Begin 1End 2
New: $cond#247%0
prop_trail size is: 3
control_trail is empty
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#247%0
$cond#233%0
$cond#240%0
$cond#247%0
Pop: smain.OVERFLW#253%0 == FALSE
prop_trail size is: 3
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0
The list of live variables are 
smain.OVERFLW#253%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0
DOMAIN projected live variables are: smain.OVERFLW#253%0 
WARNING: do not know how to propagate smain.OVERFLW#253%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 3
The variables are 
$cond#233%0, 
$cond#240%0, 
$cond#247%0, 
The total time for template generation is 9e-06 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 3
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
Pop: $cond#254%0 == TRUE
prop_trail size is: 3
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0
The list of live variables are 
$cond#254%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0
DOMAIN projected live variables are: $cond#254%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#254%0): $cond#233%0 && $cond#240%0 && $cond#247%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#254%0
Simplified expression is $cond#254%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#254%0): $cond#254%0
The total number of variables passed to the template generator is 3
The variables are 
$cond#233%0, 
$cond#240%0, 
$cond#247%0, 
The total time for template generation is 8e-06 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#254%0
conflict graph: $cond#254%0
Pushed into reason trail
The reason element pushed is:: $cond#254%0 == TRUEIndex:: Begin 2End 3
New: $cond#254%0
prop_trail size is: 4
control_trail is empty
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#254%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
Pop: smain.OVERFLW#260%0 == FALSE
prop_trail size is: 4
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0
The list of live variables are 
smain.OVERFLW#260%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0
DOMAIN projected live variables are: smain.OVERFLW#260%0 
WARNING: do not know how to propagate smain.OVERFLW#260%0 of type _Bool
checking whether statement maps to BOTTOM: <refinement-iteration>1</refinement-iteration>

no
The total number of variables passed to the template generator is 4
The variables are 
$cond#233%0, 
$cond#240%0, 
$cond#247%0, 
$cond#254%0, 
The total time for template generation is 1e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 4
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
Pop: $cond#261%0 == TRUE
prop_trail size is: 4
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0
The list of live variables are 
$cond#261%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0
DOMAIN projected live variables are: $cond#261%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#261%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#261%0
Simplified expression is $cond#261%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#261%0): $cond#261%0
The total number of variables passed to the template generator is 4
The variables are 
$cond#233%0, 
$cond#240%0, 
$cond#247%0, 
$cond#254%0, 
The total time for template generation is 9e-06 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#261%0
conflict graph: $cond#261%0
Pushed into reason trail
The reason element pushed is:: $cond#261%0 == TRUEIndex:: Begin 3End 4
New: $cond#261%0
prop_trail size is: 5
control_trail is empty
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#261%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
Pop: smain.OVERFLW#267%0 == FALSE
prop_trail size is: 5
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0
The list of live variables are 
smain.OVERFLW#267%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0
DOMAIN projected live variables are: smain.OVERFLW#267%0 
WARNING: do not know how to propagate smain.OVERFLW#267%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 5
The variables are 
$cond#233%0, 
$cond#240%0, 
$cond#247%0, 
$cond#254%0, 
$cond#261%0, 
The total time for template generation is 1.2e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 5
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
Pop: $cond#268%0 == TRUE
prop_trail size is: 5
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0
The list of live variables are 
$cond#268%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0
DOMAIN projected live variables are: $cond#268%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#268%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#268%0
Simplified expression is $cond#268%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#268%0): $cond#268%0
The total number of variables passed to the template generator is 5
The variables are 
$cond#233%0, 
$cond#240%0, 
$cond#247%0, 
$cond#254%0, 
$cond#261%0, 
The total time for template generation is 1.1e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#268%0
conflict graph: $cond#268%0
Pushed into reason trail
The reason element pushed is:: $cond#268%0 == TRUEIndex:: Begin 4End 5
New: $cond#268%0
prop_trail size is: 6
control_trail is empty
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#268%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
Pop: smain.OVERFLW#274%0 == FALSE
prop_trail size is: 6
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0
The list of live variables are 
smain.OVERFLW#274%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0
DOMAIN projected live variables are: smain.OVERFLW#274%0 
WARNING: do not know how to propagate smain.OVERFLW#274%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 6
The variables are 
$cond#233%0, 
$cond#240%0, 
$cond#247%0, 
$cond#254%0, 
$cond#261%0, 
$cond#268%0, 
The total time for template generation is 1.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 6
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
Pop: $cond#275%0 == TRUE
prop_trail size is: 6
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0
The list of live variables are 
$cond#275%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0
DOMAIN projected live variables are: $cond#275%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#275%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#275%0
Simplified expression is $cond#275%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#275%0): $cond#275%0
The total number of variables passed to the template generator is 6
The variables are 
$cond#233%0, 
$cond#240%0, 
$cond#247%0, 
$cond#254%0, 
$cond#261%0, 
$cond#268%0, 
The total time for template generation is 1.2e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#275%0
conflict graph: $cond#275%0
Pushed into reason trail
The reason element pushed is:: $cond#275%0 == TRUEIndex:: Begin 5End 6
New: $cond#275%0
prop_trail size is: 7
control_trail is empty
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#275%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
Pop: smain.OVERFLW#281%0 == FALSE
prop_trail size is: 7
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0
The list of live variables are 
smain.OVERFLW#281%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0
DOMAIN projected live variables are: smain.OVERFLW#281%0 
WARNING: do not know how to propagate smain.OVERFLW#281%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 7
The variables are 
$cond#233%0, 
$cond#240%0, 
$cond#247%0, 
$cond#254%0, 
$cond#261%0, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 1.5e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 

[startup+51.1002 s]
/proc/loadavg: 1.22 0.41 0.15 3/411 21059
/proc/meminfo: memFree=21426608/49446312 swapFree=0/4731548
[pid=21048] ppid=21046 vsize=41388 CPUtime=50.94 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6248 850 0 0 5093 1 0 0 20 0 1 0 933307213 42381312 7677 18446744073709551615 4194304 8965104 140728309787952 140728309779216 139873730876091 0 24578 0 16384 0 0 0 17 2 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10347 7677 1804 1165 0 5971 0
Current children cumulated CPU time (s) 50.94
Current children cumulated vsize (KiB) 41388
New: 
prop_trail size is: 7
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
Pop: $cond#226%0 == TRUE
prop_trail size is: 7
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0
The list of live variables are 
$cond#226%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0
DOMAIN projected live variables are: $cond#226%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#226%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#226%0
Simplified expression is $cond#226%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#226%0): $cond#226%0
The total number of variables passed to the template generator is 7
The variables are 
$cond#233%0, 
$cond#240%0, 
$cond#247%0, 
$cond#254%0, 
$cond#261%0, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 1.4e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#226%0
conflict graph: $cond#226%0
Pushed into reason trail
The reason element pushed is:: $cond#226%0 == TRUEIndex:: Begin 6End 7
New: $cond#226%0
prop_trail size is: 8
control_trail is empty
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#226%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
Pop: smain.OVERFLW#232%1 == FALSE
prop_trail size is: 8
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0
The list of live variables are 
smain.OVERFLW#232%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0
DOMAIN projected live variables are: smain.OVERFLW#232%1 
WARNING: do not know how to propagate smain.OVERFLW#232%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 8
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#240%0, 
$cond#247%0, 
$cond#254%0, 
$cond#261%0, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 1.6e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 8
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
Pop: $cond#233%1 == TRUE
prop_trail size is: 8
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0
The list of live variables are 
$cond#233%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0
DOMAIN projected live variables are: $cond#233%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#233%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#233%1
Simplified expression is $cond#233%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#233%1): $cond#233%1
The total number of variables passed to the template generator is 8
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#240%0, 
$cond#247%0, 
$cond#254%0, 
$cond#261%0, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 1.9e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#233%1
conflict graph: $cond#233%1
Pushed into reason trail
The reason element pushed is:: $cond#233%1 == TRUEIndex:: Begin 7End 8
New: $cond#233%1
prop_trail size is: 9
control_trail is empty
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
Pop: smain.OVERFLW#239%1 == TRUE
prop_trail size is: 9
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1
The list of live variables are 
smain.OVERFLW#239%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1
DOMAIN projected live variables are: smain.OVERFLW#239%1 
WARNING: do not know how to propagate smain.OVERFLW#239%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 9
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#247%0, 
$cond#254%0, 
$cond#261%0, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 1.7e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 9
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
Pop: $cond#240%1 == TRUE
prop_trail size is: 9
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1
The list of live variables are 
$cond#240%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1
DOMAIN projected live variables are: $cond#240%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#240%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#240%1
Simplified expression is $cond#240%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#240%1): $cond#240%1
The total number of variables passed to the template generator is 9
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#247%0, 
$cond#254%0, 
$cond#261%0, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 1.7e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#240%1
conflict graph: $cond#240%1
Pushed into reason trail
The reason element pushed is:: $cond#240%1 == TRUEIndex:: Begin 8End 9
New: $cond#240%1
prop_trail size is: 10
control_trail is empty
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#240%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
Pop: smain.OVERFLW#246%1 == FALSE
prop_trail size is: 10
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1
The list of live variables are 
smain.OVERFLW#246%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1
DOMAIN projected live variables are: smain.OVERFLW#246%1 
WARNING: do not know how to propagate smain.OVERFLW#246%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 10
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#254%0, 
$cond#261%0, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 1.9e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 10
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
Pop: $cond#247%1 == TRUE
prop_trail size is: 10
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1
The list of live variables are 
$cond#247%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1
DOMAIN projected live variables are: $cond#247%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#247%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#247%1
Simplified expression is $cond#247%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#247%1): $cond#247%1
The total number of variables passed to the template generator is 10
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#254%0, 
$cond#261%0, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 1.8e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#247%1
conflict graph: $cond#247%1
Pushed into reason trail
The reason element pushed is:: $cond#247%1 == TRUEIndex:: Begin 9End 10
New: $cond#247%1
prop_trail size is: 11
control_trail is empty
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#247%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
Pop: smain.OVERFLW#253%1 == FALSE
prop_trail size is: 11
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1
The list of live variables are 
smain.OVERFLW#253%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1
DOMAIN projected live variables are: smain.OVERFLW#253%1 
WARNING: do not know how to propagate smain.OVERFLW#253%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 11
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#261%0, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 2e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 11
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
Pop: $cond#254%1 == TRUE
prop_trail size is: 11
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1
The list of live variables are 
$cond#254%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1
DOMAIN projected live variables are: $cond#254%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#254%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#254%1
Simplified expression is $cond#254%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#254%1): $cond#254%1
The total number of variables passed to the template generator is 11
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#261%0, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 1.9e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#254%1
conflict graph: $cond#254%1
Pushed into reason trail
The reason element pushed is:: $cond#254%1 == TRUEIndex:: Begin 10End 11
New: $cond#254%1
prop_trail size is: 12
control_trail is empty
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#254%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
Pop: smain.OVERFLW#260%1 == FALSE
prop_trail size is: 12
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1
The list of live variables are 
smain.OVERFLW#260%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1
DOMAIN projected live variables are: smain.OVERFLW#260%1 
WARNING: do not know how to propagate smain.OVERFLW#260%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 12
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 2.1e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 12
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
Pop: $cond#261%1 == TRUE
prop_trail size is: 12
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1
The list of live variables are 
$cond#261%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1
DOMAIN projected live variables are: $cond#261%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#261%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#261%1
Simplified expression is $cond#261%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#261%1): $cond#261%1
The total number of variables passed to the template generator is 12
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 2.1e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#261%1
conflict graph: $cond#261%1
Pushed into reason trail
The reason element pushed is:: $cond#261%1 == TRUEIndex:: Begin 11End 12
New: $cond#261%1
prop_trail size is: 13
control_trail is empty
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#261%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
Pop: smain.OVERFLW#267%1 == FALSE
prop_trail size is: 13
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1
The list of live variables are 
smain.OVERFLW#267%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1
DOMAIN projected live variables are: smain.OVERFLW#267%1 
WARNING: do not know how to propagate smain.OVERFLW#267%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 13
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 2.2e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 13
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
Pop: $cond#268%1 == TRUE
prop_trail size is: 13
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1
The list of live variables are 
$cond#268%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1
DOMAIN projected live variables are: $cond#268%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#268%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#268%1
Simplified expression is $cond#268%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#268%1): $cond#268%1
The total number of variables passed to the template generator is 13
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#275%0, 
The total time for template generation is 2.2e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#268%1
conflict graph: $cond#268%1
Pushed into reason trail
The reason element pushed is:: $cond#268%1 == TRUEIndex:: Begin 12End 13
New: $cond#268%1
prop_trail size is: 14
control_trail is empty
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#268%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
Pop: smain.OVERFLW#274%1 == FALSE
prop_trail size is: 14
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1
The list of live variables are 
smain.OVERFLW#274%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1
DOMAIN projected live variables are: smain.OVERFLW#274%1 
WARNING: do not know how to propagate smain.OVERFLW#274%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 14
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
The total time for template generation is 2.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 14
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
Pop: $cond#275%1 == TRUE
prop_trail size is: 14
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1
The list of live variables are 
$cond#275%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1
DOMAIN projected live variables are: $cond#275%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#275%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#275%1
Simplified expression is $cond#275%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#275%1): $cond#275%1
The total number of variables passed to the template generator is 14
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
The total time for template generation is 2.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#275%1
conflict graph: $cond#275%1
Pushed into reason trail
The reason element pushed is:: $cond#275%1 == TRUEIndex:: Begin 13End 14
New: $cond#275%1
prop_trail size is: 15
control_trail is empty
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#275%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
Pop: smain.OVERFLW#281%1 == FALSE
prop_trail size is: 15
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1
The list of live variables are 
smain.OVERFLW#281%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1
DOMAIN projected live variables are: smain.OVERFLW#281%1 
WARNING: do not know how to propagate smain.OVERFLW#281%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 15
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 2.5e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 15
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
Pop: $cond#226%1 == TRUE
prop_trail size is: 15
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1
The list of live variables are 
$cond#226%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1
DOMAIN projected live variables are: $cond#226%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#226%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#226%1
Simplified expression is $cond#226%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#226%1): $cond#226%1
The total number of variables passed to the template generator is 15
The variables are 
$cond#226%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 2.4e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#226%1
conflict graph: $cond#226%1
Pushed into reason trail
The reason element pushed is:: $cond#226%1 == TRUEIndex:: Begin 14End 15
New: $cond#226%1
prop_trail size is: 16
control_trail is empty
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#226%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
Pop: smain.OVERFLW#149%0 == FALSE
prop_trail size is: 16
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1
The list of live variables are 
smain.OVERFLW#149%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1
DOMAIN projected live variables are: smain.OVERFLW#149%0 
WARNING: do not know how to propagate smain.OVERFLW#149%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 16
The variables are 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 2.5e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 16
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
Pop: $cond#150%0 == TRUE
prop_trail size is: 16
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1
The list of live variables are 
$cond#150%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1
DOMAIN projected live variables are: $cond#150%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#150%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#150%0
Simplified expression is $cond#150%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#150%0): $cond#150%0
The total number of variables passed to the template generator is 16
The variables are 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 2.5e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#150%0
conflict graph: $cond#150%0
Pushed into reason trail
The reason element pushed is:: $cond#150%0 == TRUEIndex:: Begin 15End 16

[startup+102.305 s]
/proc/loadavg: 1.66 0.66 0.25 3/413 21108
/proc/meminfo: memFree=21424800/49446312 swapFree=0/4731632
[pid=21048] ppid=21046 vsize=41388 CPUtime=102 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6286 850 0 0 10199 1 0 0 20 0 1 0 933307213 42381312 7677 18446744073709551615 4194304 8965104 140728309787952 140728309779424 139873730891529 0 24578 0 16384 0 0 0 17 2 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10347 7677 1804 1165 0 5971 0
Current children cumulated CPU time (s) 102
Current children cumulated vsize (KiB) 41388
New: $cond#150%0
prop_trail size is: 17
control_trail is empty
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#150%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
Pop: smain.OVERFLW#156%0 == TRUE
prop_trail size is: 17
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0
The list of live variables are 
smain.OVERFLW#156%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0
DOMAIN projected live variables are: smain.OVERFLW#156%0 
WARNING: do not know how to propagate smain.OVERFLW#156%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 17
The variables are 
$cond#150%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 2.8e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 17
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
Pop: $cond#157%0 == TRUE
prop_trail size is: 17
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0
The list of live variables are 
$cond#157%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0
DOMAIN projected live variables are: $cond#157%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#157%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#157%0
Simplified expression is $cond#157%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#157%0): $cond#157%0
The total number of variables passed to the template generator is 17
The variables are 
$cond#150%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 2.7e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#157%0
conflict graph: $cond#157%0
Pushed into reason trail
The reason element pushed is:: $cond#157%0 == TRUEIndex:: Begin 16End 17
New: $cond#157%0
prop_trail size is: 18
control_trail is empty
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#157%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
Pop: smain.OVERFLW#163%0 == FALSE
prop_trail size is: 18
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0
The list of live variables are 
smain.OVERFLW#163%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0
DOMAIN projected live variables are: smain.OVERFLW#163%0 
WARNING: do not know how to propagate smain.OVERFLW#163%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 18
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 18
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
Pop: $cond#164%0 == TRUE
prop_trail size is: 18
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0
The list of live variables are 
$cond#164%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0
DOMAIN projected live variables are: $cond#164%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#164%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#164%0
Simplified expression is $cond#164%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#164%0): $cond#164%0
The total number of variables passed to the template generator is 18
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 2.9e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#164%0
conflict graph: $cond#164%0
Pushed into reason trail
The reason element pushed is:: $cond#164%0 == TRUEIndex:: Begin 17End 18
New: $cond#164%0
prop_trail size is: 19
control_trail is empty
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#164%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
Pop: smain.OVERFLW#170%0 == FALSE
prop_trail size is: 19
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0
The list of live variables are 
smain.OVERFLW#170%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0
DOMAIN projected live variables are: smain.OVERFLW#170%0 
WARNING: do not know how to propagate smain.OVERFLW#170%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 19
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3.1e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 19
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
Pop: $cond#171%0 == TRUE
prop_trail size is: 19
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0
The list of live variables are 
$cond#171%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0
DOMAIN projected live variables are: $cond#171%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#171%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#171%0
Simplified expression is $cond#171%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#171%0): $cond#171%0
The total number of variables passed to the template generator is 19
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3.1e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#171%0
conflict graph: $cond#171%0
Pushed into reason trail
The reason element pushed is:: $cond#171%0 == TRUEIndex:: Begin 18End 19
New: $cond#171%0
prop_trail size is: 20
control_trail is empty
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#171%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
Pop: smain.OVERFLW#177%0 == FALSE
prop_trail size is: 20
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0
The list of live variables are 
smain.OVERFLW#177%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0
DOMAIN projected live variables are: smain.OVERFLW#177%0 
WARNING: do not know how to propagate smain.OVERFLW#177%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 20
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3.2e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 20
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
Pop: $cond#178%0 == TRUE
prop_trail size is: 20
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0
The list of live variables are 
$cond#178%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0
DOMAIN projected live variables are: $cond#178%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#178%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#178%0
Simplified expression is $cond#178%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#178%0): $cond#178%0
The total number of variables passed to the template generator is 20
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3.2e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#178%0
conflict graph: $cond#178%0
Pushed into reason trail
The reason element pushed is:: $cond#178%0 == TRUEIndex:: Begin 19End 20
New: $cond#178%0
prop_trail size is: 21
control_trail is empty
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#178%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
Pop: smain.OVERFLW#184%0 == FALSE
prop_trail size is: 21
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0
The list of live variables are 
smain.OVERFLW#184%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0
DOMAIN projected live variables are: smain.OVERFLW#184%0 
WARNING: do not know how to propagate smain.OVERFLW#184%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 21
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 21
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
Pop: $cond#185%0 == TRUE
prop_trail size is: 21
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0
The list of live variables are 
$cond#185%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0
DOMAIN projected live variables are: $cond#185%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#185%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#185%0
Simplified expression is $cond#185%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#185%0): $cond#185%0
The total number of variables passed to the template generator is 21
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3.2e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#185%0
conflict graph: $cond#185%0
Pushed into reason trail
The reason element pushed is:: $cond#185%0 == TRUEIndex:: Begin 20End 21
New: $cond#185%0
prop_trail size is: 22
control_trail is empty
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#185%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
Pop: smain.OVERFLW#191%0 == FALSE
prop_trail size is: 22
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0
The list of live variables are 
smain.OVERFLW#191%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0
DOMAIN projected live variables are: smain.OVERFLW#191%0 
WARNING: do not know how to propagate smain.OVERFLW#191%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 22
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3.5e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 22
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
Pop: $cond#192%0 == TRUE
prop_trail size is: 22
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0
The list of live variables are 
$cond#192%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0
DOMAIN projected live variables are: $cond#192%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#192%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#192%0
Simplified expression is $cond#192%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#192%0): $cond#192%0
The total number of variables passed to the template generator is 22
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#192%0
conflict graph: $cond#192%0
Pushed into reason trail
The reason element pushed is:: $cond#192%0 == TRUEIndex:: Begin 21End 22
New: $cond#192%0
prop_trail size is: 23
control_trail is empty
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#192%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
Pop: smain.OVERFLW#198%0 == FALSE
prop_trail size is: 23
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0
The list of live variables are 
smain.OVERFLW#198%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0
DOMAIN projected live variables are: smain.OVERFLW#198%0 
WARNING: do not know how to propagate smain.OVERFLW#198%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 23
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3.6e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 23
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
Pop: $cond#229%0 == TRUE
prop_trail size is: 23
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0
The list of live variables are 
$cond#229%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0
DOMAIN projected live variables are: $cond#229%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#229%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#229%0
Simplified expression is $cond#229%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#229%0): $cond#229%0
The total number of variables passed to the template generator is 23
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3.5e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#229%0
conflict graph: $cond#229%0
Pushed into reason trail
The reason element pushed is:: $cond#229%0 == TRUEIndex:: Begin 22End 23
New: $cond#229%0
prop_trail size is: 24
control_trail is empty
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#229%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
Pop: $cond#236%0 == TRUE
prop_trail size is: 24
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0
The list of live variables are 
$cond#236%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0
DOMAIN projected live variables are: $cond#236%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#236%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#236%0
Simplified expression is $cond#236%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#236%0): $cond#236%0
The total number of variables passed to the template generator is 24
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3.7e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#236%0
conflict graph: $cond#236%0
Pushed into reason trail
The reason element pushed is:: $cond#236%0 == TRUEIndex:: Begin 23End 24
New: $cond#236%0
prop_trail size is: 25
control_trail is empty
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#236%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
Pop: $cond#243%0 == TRUE
prop_trail size is: 25
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0
The list of live variables are 
$cond#243%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0
DOMAIN projected live variables are: $cond#243%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#243%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#243%0
Simplified expression is $cond#243%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#243%0): $cond#243%0
The total number of variables passed to the template generator is 25
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3.8e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#243%0
conflict graph: $cond#243%0
Pushed into reason trail
The reason element pushed is:: $cond#243%0 == TRUEIndex:: Begin 24End 25
New: $cond#243%0
prop_trail size is: 26
control_trail is empty
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#243%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
Pop: $cond#250%0 == TRUE
prop_trail size is: 26
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0
The list of live variables are 
$cond#250%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0
DOMAIN projected live variables are: $cond#250%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#250%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#250%0
Simplified expression is $cond#250%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#250%0): $cond#250%0
The total number of variables passed to the template generator is 26
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 3.9e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#250%0
conflict graph: $cond#250%0
Pushed into reason trail
The reason element pushed is:: $cond#250%0 == TRUEIndex:: Begin 25End 26
New: $cond#250%0
prop_trail size is: 27
control_trail is empty
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#250%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
Pop: $cond#257%0 == TRUE
prop_trail size is: 27
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0
The list of live variables are 
$cond#257%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0
DOMAIN projected live variables are: $cond#257%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#257%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#257%0
Simplified expression is $cond#257%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#257%0): $cond#257%0
The total number of variables passed to the template generator is 27
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 4.1e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#257%0
conflict graph: $cond#257%0
Pushed into reason trail
The reason element pushed is:: $cond#257%0 == TRUEIndex:: Begin 26End 27
New: $cond#257%0
prop_trail size is: 28
control_trail is empty
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#257%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
Pop: $cond#264%0 == TRUE
prop_trail size is: 28
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0
The list of live variables are 
$cond#264%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0
DOMAIN projected live variables are: $cond#264%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#264%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#264%0
Simplified expression is $cond#264%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#264%0): $cond#264%0
The total number of variables passed to the template generator is 28
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 4.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#264%0
conflict graph: $cond#264%0
Pushed into reason trail
The reason element pushed is:: $cond#264%0 == TRUEIndex:: Begin 27End 28
New: $cond#264%0
prop_trail size is: 29
control_trail is empty
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#264%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
Pop: $cond#271%0 == TRUE
prop_trail size is: 29
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0
The list of live variables are 
$cond#271%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0
DOMAIN projected live variables are: $cond#271%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#271%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#271%0
Simplified expression is $cond#271%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#271%0): $cond#271%0
The total number of variables passed to the template generator is 29
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 4.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#271%0
conflict graph: $cond#271%0
Pushed into reason trail
The reason element pushed is:: $cond#271%0 == TRUEIndex:: Begin 28End 29
New: $cond#271%0
prop_trail size is: 30
control_trail is empty
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#271%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
Pop: $cond#278%0 == TRUE
prop_trail size is: 30
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0
The list of live variables are 
$cond#278%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0
DOMAIN projected live variables are: $cond#278%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#278%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#278%0
Simplified expression is $cond#278%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#278%0): $cond#278%0
The total number of variables passed to the template generator is 30
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
The total time for template generation is 4.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#278%0
conflict graph: $cond#278%0
Pushed into reason trail
The reason element pushed is:: $cond#278%0 == TRUEIndex:: Begin 29End 30

[startup+162.3 s]
/proc/loadavg: 1.88 0.90 0.36 3/414 21240
/proc/meminfo: memFree=21423884/49446312 swapFree=0/4731816
[pid=21048] ppid=21046 vsize=41388 CPUtime=161.83 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6328 850 0 0 16181 2 0 0 20 0 1 0 933307213 42381312 7677 18446744073709551615 4194304 8965104 140728309787952 140728309779400 4263488 0 24578 0 16384 0 0 0 17 2 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10347 7677 1804 1165 0 5971 0
Current children cumulated CPU time (s) 161.83
Current children cumulated vsize (KiB) 41388
New: $cond#278%0
prop_trail size is: 31
control_trail is empty
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#278%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
Pop: $cond#66%0 == TRUE
prop_trail size is: 31
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0
The list of live variables are 
$cond#66%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0
DOMAIN projected live variables are: $cond#66%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#66%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#66%0
Simplified expression is $cond#66%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#66%0): $cond#66%0
The total number of variables passed to the template generator is 31
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
The total time for template generation is 4.5e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#66%0
conflict graph: $cond#66%0
Pushed into reason trail
The reason element pushed is:: $cond#66%0 == TRUEIndex:: Begin 30End 31
New: $cond#66%0
prop_trail size is: 32
control_trail is empty
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#66%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
Pop: $cond#73%0 == TRUE
prop_trail size is: 32
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0
The list of live variables are 
$cond#73%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0
DOMAIN projected live variables are: $cond#73%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#73%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#73%0
Simplified expression is $cond#73%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#73%0): $cond#73%0
The total number of variables passed to the template generator is 32
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
The total time for template generation is 4.6e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#73%0
conflict graph: $cond#73%0
Pushed into reason trail
The reason element pushed is:: $cond#73%0 == TRUEIndex:: Begin 31End 32
New: $cond#73%0
prop_trail size is: 33
control_trail is empty
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#73%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
Pop: $cond#80%0 == TRUE
prop_trail size is: 33
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0
The list of live variables are 
$cond#80%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0
DOMAIN projected live variables are: $cond#80%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#80%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#80%0
Simplified expression is $cond#80%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#80%0): $cond#80%0
The total number of variables passed to the template generator is 33
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
The total time for template generation is 4.9e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#80%0
conflict graph: $cond#80%0
Pushed into reason trail
The reason element pushed is:: $cond#80%0 == TRUEIndex:: Begin 32End 33
New: $cond#80%0
prop_trail size is: 34
control_trail is empty
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#80%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
Pop: $cond#87%0 == TRUE
prop_trail size is: 34
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0
The list of live variables are 
$cond#87%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0
DOMAIN projected live variables are: $cond#87%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#87%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#87%0
Simplified expression is $cond#87%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#87%0): $cond#87%0
The total number of variables passed to the template generator is 34
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
The total time for template generation is 5e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#87%0
conflict graph: $cond#87%0
Pushed into reason trail
The reason element pushed is:: $cond#87%0 == TRUEIndex:: Begin 33End 34
New: $cond#87%0
prop_trail size is: 35
control_trail is empty
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#87%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
Pop: $cond#94%0 == TRUE
prop_trail size is: 35
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0
The list of live variables are 
$cond#94%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0
DOMAIN projected live variables are: $cond#94%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#94%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#94%0
Simplified expression is $cond#94%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#94%0): $cond#94%0
The total number of variables passed to the template generator is 35
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
The total time for template generation is 5.1e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#94%0
conflict graph: $cond#94%0
Pushed into reason trail
The reason element pushed is:: $cond#94%0 == TRUEIndex:: Begin 34End 35
New: $cond#94%0
prop_trail size is: 36
control_trail is empty
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#94%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
Pop: $cond#101%0 == TRUE
prop_trail size is: 36
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0
The list of live variables are 
$cond#101%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0
DOMAIN projected live variables are: $cond#101%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#101%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#101%0
Simplified expression is $cond#101%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#101%0): $cond#101%0
The total number of variables passed to the template generator is 36
The variables are 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 5.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#101%0
conflict graph: $cond#101%0
Pushed into reason trail
The reason element pushed is:: $cond#101%0 == TRUEIndex:: Begin 35End 36
New: $cond#101%0
prop_trail size is: 37
control_trail is empty
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#101%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
Pop: $cond#108%0 == TRUE
prop_trail size is: 37
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0
The list of live variables are 
$cond#108%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0
DOMAIN projected live variables are: $cond#108%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#108%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#108%0
Simplified expression is $cond#108%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#108%0): $cond#108%0
The total number of variables passed to the template generator is 37
The variables are 
$cond#101%0, 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 5.4e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#108%0
conflict graph: $cond#108%0
Pushed into reason trail
The reason element pushed is:: $cond#108%0 == TRUEIndex:: Begin 36End 37
New: $cond#108%0
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#108%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Pop: smain.OVERFLW#65%0 == FALSE
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
The list of live variables are 
smain.OVERFLW#65%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
DOMAIN projected live variables are: smain.OVERFLW#65%0 
WARNING: do not know how to propagate smain.OVERFLW#65%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 38
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 5.8e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Pop: smain.OVERFLW#72%0 == TRUE
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
The list of live variables are 
smain.OVERFLW#72%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
DOMAIN projected live variables are: smain.OVERFLW#72%0 
WARNING: do not know how to propagate smain.OVERFLW#72%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 38
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 5.7e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Pop: smain.OVERFLW#79%0 == FALSE
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
The list of live variables are 
smain.OVERFLW#79%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
DOMAIN projected live variables are: smain.OVERFLW#79%0 
WARNING: do not know how to propagate smain.OVERFLW#79%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 38
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 5.6e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Pop: smain.OVERFLW#86%0 == FALSE
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
The list of live variables are 
smain.OVERFLW#86%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
DOMAIN projected live variables are: smain.OVERFLW#86%0 
WARNING: do not know how to propagate smain.OVERFLW#86%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 38
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 5.8e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Pop: smain.OVERFLW#93%0 == FALSE
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
The list of live variables are 
smain.OVERFLW#93%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
DOMAIN projected live variables are: smain.OVERFLW#93%0 
WARNING: do not know how to propagate smain.OVERFLW#93%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 38
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 5.8e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Pop: smain.OVERFLW#100%0 == FALSE
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
The list of live variables are 
smain.OVERFLW#100%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
DOMAIN projected live variables are: smain.OVERFLW#100%0 
WARNING: do not know how to propagate smain.OVERFLW#100%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 38
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Pop: smain.OVERFLW#107%0 == FALSE
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
The list of live variables are 
smain.OVERFLW#107%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
DOMAIN projected live variables are: smain.OVERFLW#107%0 
WARNING: do not know how to propagate smain.OVERFLW#107%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 38
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Pop: smain.OVERFLW#114%0 == FALSE
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
The list of live variables are 
smain.OVERFLW#114%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
DOMAIN projected live variables are: smain.OVERFLW#114%0 
WARNING: do not know how to propagate smain.OVERFLW#114%0 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 38
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 5.9e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Pop: $cond#59%0 == TRUE
prop_trail size is: 38
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
The list of live variables are 
$cond#59%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
DOMAIN projected live variables are: $cond#59%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#59%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#59%0
Simplified expression is $cond#59%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#59%0): $cond#59%0
The total number of variables passed to the template generator is 38
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#59%0
conflict graph: $cond#59%0
Pushed into reason trail
The reason element pushed is:: $cond#59%0 == TRUEIndex:: Begin 37End 38
New: $cond#59%0
prop_trail size is: 39
control_trail is empty
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#59%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
Pop: smain.OVERFLW#149%1 == FALSE
prop_trail size is: 39
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0
The list of live variables are 
smain.OVERFLW#149%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0
DOMAIN projected live variables are: smain.OVERFLW#149%1 
WARNING: do not know how to propagate smain.OVERFLW#149%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 39
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6.1e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 39
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
Pop: $cond#150%1 == TRUE
prop_trail size is: 39
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0
The list of live variables are 
$cond#150%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0
DOMAIN projected live variables are: $cond#150%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#150%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#150%1
Simplified expression is $cond#150%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#150%1): $cond#150%1
The total number of variables passed to the template generator is 39
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6.1e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#150%1
conflict graph: $cond#150%1
Pushed into reason trail
The reason element pushed is:: $cond#150%1 == TRUEIndex:: Begin 38End 39
New: $cond#150%1
prop_trail size is: 40
control_trail is empty
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#150%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
Pop: smain.OVERFLW#156%1 == TRUE
prop_trail size is: 40
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1
The list of live variables are 
smain.OVERFLW#156%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1
DOMAIN projected live variables are: smain.OVERFLW#156%1 
WARNING: do not know how to propagate smain.OVERFLW#156%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 40
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6.7e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 40
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
Pop: $cond#157%1 == TRUE
prop_trail size is: 40
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1
The list of live variables are 
$cond#157%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1
DOMAIN projected live variables are: $cond#157%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#157%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#157%1
Simplified expression is $cond#157%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#157%1): $cond#157%1
The total number of variables passed to the template generator is 40
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6.1e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#157%1
conflict graph: $cond#157%1
Pushed into reason trail
The reason element pushed is:: $cond#157%1 == TRUEIndex:: Begin 39End 40

[startup+222.3 s]
/proc/loadavg: 1.92 1.09 0.46 3/409 21254
/proc/meminfo: memFree=21426160/49446312 swapFree=0/4732112
[pid=21048] ppid=21046 vsize=41388 CPUtime=221.66 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6368 850 0 0 22164 2 0 0 20 0 1 0 933307213 42381312 7677 18446744073709551615 4194304 8965104 140728309787952 140728309779376 6451035 0 24578 0 16384 0 0 0 17 2 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10347 7677 1804 1165 0 5971 0
Current children cumulated CPU time (s) 221.66
Current children cumulated vsize (KiB) 41388
New: $cond#157%1
prop_trail size is: 41
control_trail is empty
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#157%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
Pop: smain.OVERFLW#163%1 == FALSE
prop_trail size is: 41
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1
The list of live variables are 
smain.OVERFLW#163%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1
DOMAIN projected live variables are: smain.OVERFLW#163%1 
WARNING: do not know how to propagate smain.OVERFLW#163%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 41
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6.4e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 41
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
Pop: $cond#164%1 == TRUE
prop_trail size is: 41
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1
The list of live variables are 
$cond#164%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1
DOMAIN projected live variables are: $cond#164%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#164%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#164%1
Simplified expression is $cond#164%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#164%1): $cond#164%1
The total number of variables passed to the template generator is 41
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#164%1
conflict graph: $cond#164%1
Pushed into reason trail
The reason element pushed is:: $cond#164%1 == TRUEIndex:: Begin 40End 41
New: $cond#164%1
prop_trail size is: 42
control_trail is empty
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#164%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
Pop: smain.OVERFLW#170%1 == FALSE
prop_trail size is: 42
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1
The list of live variables are 
smain.OVERFLW#170%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1
DOMAIN projected live variables are: smain.OVERFLW#170%1 
WARNING: do not know how to propagate smain.OVERFLW#170%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 42
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6.4e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 42
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
Pop: $cond#171%1 == TRUE
prop_trail size is: 42
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1
The list of live variables are 
$cond#171%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1
DOMAIN projected live variables are: $cond#171%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#171%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#171%1
Simplified expression is $cond#171%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#171%1): $cond#171%1
The total number of variables passed to the template generator is 42
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6.4e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#171%1
conflict graph: $cond#171%1
Pushed into reason trail
The reason element pushed is:: $cond#171%1 == TRUEIndex:: Begin 41End 42
New: $cond#171%1
prop_trail size is: 43
control_trail is empty
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#171%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
Pop: smain.OVERFLW#177%1 == FALSE
prop_trail size is: 43
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1
The list of live variables are 
smain.OVERFLW#177%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1
DOMAIN projected live variables are: smain.OVERFLW#177%1 
WARNING: do not know how to propagate smain.OVERFLW#177%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 43
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6.6e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 43
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
Pop: $cond#178%1 == TRUE
prop_trail size is: 43
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1
The list of live variables are 
$cond#178%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1
DOMAIN projected live variables are: $cond#178%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#178%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#178%1
Simplified expression is $cond#178%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#178%1): $cond#178%1
The total number of variables passed to the template generator is 43
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6.6e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#178%1
conflict graph: $cond#178%1
Pushed into reason trail
The reason element pushed is:: $cond#178%1 == TRUEIndex:: Begin 42End 43
New: $cond#178%1
prop_trail size is: 44
control_trail is empty
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#178%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
Pop: smain.OVERFLW#184%1 == FALSE
prop_trail size is: 44
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1
The list of live variables are 
smain.OVERFLW#184%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1
DOMAIN projected live variables are: smain.OVERFLW#184%1 
WARNING: do not know how to propagate smain.OVERFLW#184%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 44
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6.7e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 44
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
Pop: $cond#185%1 == TRUE
prop_trail size is: 44
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1
The list of live variables are 
$cond#185%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1
DOMAIN projected live variables are: $cond#185%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#185%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#185%1
Simplified expression is $cond#185%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#185%1): $cond#185%1
The total number of variables passed to the template generator is 44
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 6.8e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#185%1
conflict graph: $cond#185%1
Pushed into reason trail
The reason element pushed is:: $cond#185%1 == TRUEIndex:: Begin 43End 44
New: $cond#185%1
prop_trail size is: 45
control_trail is empty
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#185%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
Pop: smain.OVERFLW#191%1 == FALSE
prop_trail size is: 45
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1
The list of live variables are 
smain.OVERFLW#191%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1
DOMAIN projected live variables are: smain.OVERFLW#191%1 
WARNING: do not know how to propagate smain.OVERFLW#191%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 45
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 7e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 45
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
Pop: $cond#192%1 == TRUE
prop_trail size is: 45
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1
The list of live variables are 
$cond#192%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1
DOMAIN projected live variables are: $cond#192%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#192%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#192%1
Simplified expression is $cond#192%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#192%1): $cond#192%1
The total number of variables passed to the template generator is 45
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 7.1e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#192%1
conflict graph: $cond#192%1
Pushed into reason trail
The reason element pushed is:: $cond#192%1 == TRUEIndex:: Begin 44End 45
New: $cond#192%1
prop_trail size is: 46
control_trail is empty
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#192%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
Pop: smain.OVERFLW#198%1 == FALSE
prop_trail size is: 46
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1
The list of live variables are 
smain.OVERFLW#198%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1
DOMAIN projected live variables are: smain.OVERFLW#198%1 
WARNING: do not know how to propagate smain.OVERFLW#198%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 46
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 7.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 46
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
Pop: $cond#229%1 == TRUE
prop_trail size is: 46
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1
The list of live variables are 
$cond#229%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1
DOMAIN projected live variables are: $cond#229%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#229%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#229%1
Simplified expression is $cond#229%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#229%1): $cond#229%1
The total number of variables passed to the template generator is 46
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 7.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#229%1
conflict graph: $cond#229%1
Pushed into reason trail
The reason element pushed is:: $cond#229%1 == TRUEIndex:: Begin 45End 46
New: $cond#229%1
prop_trail size is: 47
control_trail is empty
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#229%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
Pop: $cond#236%1 == TRUE
prop_trail size is: 47
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1
The list of live variables are 
$cond#236%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1
DOMAIN projected live variables are: $cond#236%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#236%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#236%1
Simplified expression is $cond#236%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#236%1): $cond#236%1
The total number of variables passed to the template generator is 47
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 7.4e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#236%1
conflict graph: $cond#236%1
Pushed into reason trail
The reason element pushed is:: $cond#236%1 == TRUEIndex:: Begin 46End 47
New: $cond#236%1
prop_trail size is: 48
control_trail is empty
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#236%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
Pop: $cond#243%1 == TRUE
prop_trail size is: 48
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1
The list of live variables are 
$cond#243%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1
DOMAIN projected live variables are: $cond#243%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#243%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#243%1
Simplified expression is $cond#243%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#243%1): $cond#243%1
The total number of variables passed to the template generator is 48
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 7.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#243%1
conflict graph: $cond#243%1
Pushed into reason trail
The reason element pushed is:: $cond#243%1 == TRUEIndex:: Begin 47End 48
New: $cond#243%1
prop_trail size is: 49
control_trail is empty
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#243%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
Pop: $cond#250%1 == TRUE
prop_trail size is: 49
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1
The list of live variables are 
$cond#250%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1
DOMAIN projected live variables are: $cond#250%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#250%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#250%1
Simplified expression is $cond#250%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#250%1): $cond#250%1
The total number of variables passed to the template generator is 49
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 7.6e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#250%1
conflict graph: $cond#250%1
Pushed into reason trail
The reason element pushed is:: $cond#250%1 == TRUEIndex:: Begin 48End 49
New: $cond#250%1
prop_trail size is: 50
control_trail is empty
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#250%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
Pop: $cond#257%1 == TRUE
prop_trail size is: 50
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1
The list of live variables are 
$cond#257%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1
DOMAIN projected live variables are: $cond#257%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#257%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#257%1
Simplified expression is $cond#257%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#257%1): $cond#257%1
The total number of variables passed to the template generator is 50
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 7.6e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#257%1
conflict graph: $cond#257%1
Pushed into reason trail
The reason element pushed is:: $cond#257%1 == TRUEIndex:: Begin 49End 50
New: $cond#257%1
prop_trail size is: 51
control_trail is empty
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#257%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
Pop: $cond#264%1 == TRUE
prop_trail size is: 51
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1
The list of live variables are 
$cond#264%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1
DOMAIN projected live variables are: $cond#264%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#264%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#264%1
Simplified expression is $cond#264%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#264%1): $cond#264%1
The total number of variables passed to the template generator is 51
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 7.8e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#264%1
conflict graph: $cond#264%1
Pushed into reason trail
The reason element pushed is:: $cond#264%1 == TRUEIndex:: Begin 50End 51
New: $cond#264%1
prop_trail size is: 52
control_trail is empty
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#264%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
Pop: $cond#271%1 == TRUE
prop_trail size is: 52
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1
The list of live variables are 
$cond#271%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1
DOMAIN projected live variables are: $cond#271%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#271%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#271%1
Simplified expression is $cond#271%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#271%1): $cond#271%1
The total number of variables passed to the template generator is 52
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 7.8e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#271%1
conflict graph: $cond#271%1
Pushed into reason trail
The reason element pushed is:: $cond#271%1 == TRUEIndex:: Begin 51End 52

[startup+282.3 s]
/proc/loadavg: 2.32 1.34 0.59 4/416 21300
/proc/meminfo: memFree=21340440/49446312 swapFree=0/4788436
[pid=21048] ppid=21046 vsize=41388 CPUtime=281.49 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6404 850 0 0 28146 3 0 0 20 0 1 0 933307213 42381312 7677 18446744073709551615 4194304 8965104 140728309787952 140728309779360 139873730891705 0 24578 0 16384 0 0 0 17 4 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10347 7677 1804 1165 0 5971 0
Current children cumulated CPU time (s) 281.49
Current children cumulated vsize (KiB) 41388
New: $cond#271%1
prop_trail size is: 53
control_trail is empty
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#271%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
Pop: $cond#278%1 == TRUE
prop_trail size is: 53
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1
The list of live variables are 
$cond#278%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1
DOMAIN projected live variables are: $cond#278%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#278%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#278%1
Simplified expression is $cond#278%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#278%1): $cond#278%1
The total number of variables passed to the template generator is 53
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 8e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#278%1
conflict graph: $cond#278%1
Pushed into reason trail
The reason element pushed is:: $cond#278%1 == TRUEIndex:: Begin 52End 53
New: $cond#278%1
prop_trail size is: 54
control_trail is empty
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#278%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
Pop: $cond#66%1 == TRUE
prop_trail size is: 54
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1
The list of live variables are 
$cond#66%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1
DOMAIN projected live variables are: $cond#66%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#66%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#66%1
Simplified expression is $cond#66%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#66%1): $cond#66%1
The total number of variables passed to the template generator is 54
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 8e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#66%1
conflict graph: $cond#66%1
Pushed into reason trail
The reason element pushed is:: $cond#66%1 == TRUEIndex:: Begin 53End 54
New: $cond#66%1
prop_trail size is: 55
control_trail is empty
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#66%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
Pop: $cond#73%1 == TRUE
prop_trail size is: 55
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1
The list of live variables are 
$cond#73%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1
DOMAIN projected live variables are: $cond#73%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#73%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#73%1
Simplified expression is $cond#73%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#73%1): $cond#73%1
The total number of variables passed to the template generator is 55
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 8.2e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#73%1
conflict graph: $cond#73%1
Pushed into reason trail
The reason element pushed is:: $cond#73%1 == TRUEIndex:: Begin 54End 55
New: $cond#73%1
prop_trail size is: 56
control_trail is empty
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#73%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
Pop: $cond#80%1 == TRUE
prop_trail size is: 56
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1
The list of live variables are 
$cond#80%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1
DOMAIN projected live variables are: $cond#80%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#80%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#80%1
Simplified expression is $cond#80%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#80%1): $cond#80%1
The total number of variables passed to the template generator is 56
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 8.4e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#80%1
conflict graph: $cond#80%1
Pushed into reason trail
The reason element pushed is:: $cond#80%1 == TRUEIndex:: Begin 55End 56
New: $cond#80%1
prop_trail size is: 57
control_trail is empty
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#80%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
Pop: $cond#87%1 == TRUE
prop_trail size is: 57
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1
The list of live variables are 
$cond#87%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1
DOMAIN projected live variables are: $cond#87%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#87%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#87%1
Simplified expression is $cond#87%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#87%1): $cond#87%1
The total number of variables passed to the template generator is 57
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#94%0, 
The total time for template generation is 8.5e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#87%1
conflict graph: $cond#87%1
Pushed into reason trail
The reason element pushed is:: $cond#87%1 == TRUEIndex:: Begin 56End 57
New: $cond#87%1
prop_trail size is: 58
control_trail is empty
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#87%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
Pop: $cond#94%1 == TRUE
prop_trail size is: 58
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1
The list of live variables are 
$cond#94%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1
DOMAIN projected live variables are: $cond#94%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#94%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#94%1
Simplified expression is $cond#94%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#94%1): $cond#94%1
The total number of variables passed to the template generator is 58
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
The total time for template generation is 8.6e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#94%1
conflict graph: $cond#94%1
Pushed into reason trail
The reason element pushed is:: $cond#94%1 == TRUEIndex:: Begin 57End 58
New: $cond#94%1
prop_trail size is: 59
control_trail is empty
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#94%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
Pop: $cond#101%1 == TRUE
prop_trail size is: 59
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1
The list of live variables are 
$cond#101%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1
DOMAIN projected live variables are: $cond#101%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#101%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#101%1
Simplified expression is $cond#101%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#101%1): $cond#101%1
The total number of variables passed to the template generator is 59
The variables are 
$cond#101%0, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 8.8e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#101%1
conflict graph: $cond#101%1
Pushed into reason trail
The reason element pushed is:: $cond#101%1 == TRUEIndex:: Begin 58End 59
New: $cond#101%1
prop_trail size is: 60
control_trail is empty
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#101%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
Pop: $cond#108%1 == TRUE
prop_trail size is: 60
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1
The list of live variables are 
$cond#108%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1
DOMAIN projected live variables are: $cond#108%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#108%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#108%1
Simplified expression is $cond#108%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#108%1): $cond#108%1
The total number of variables passed to the template generator is 60
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 9e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#108%1
conflict graph: $cond#108%1
Pushed into reason trail
The reason element pushed is:: $cond#108%1 == TRUEIndex:: Begin 59End 60
New: $cond#108%1
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#108%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Pop: smain.OVERFLW#65%1 == FALSE
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
The list of live variables are 
smain.OVERFLW#65%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
DOMAIN projected live variables are: smain.OVERFLW#65%1 
WARNING: do not know how to propagate smain.OVERFLW#65%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 61
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 9e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Pop: smain.OVERFLW#72%1 == TRUE
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
The list of live variables are 
smain.OVERFLW#72%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
DOMAIN projected live variables are: smain.OVERFLW#72%1 
WARNING: do not know how to propagate smain.OVERFLW#72%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 61
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 9e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Pop: smain.OVERFLW#79%1 == FALSE
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
The list of live variables are 
smain.OVERFLW#79%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
DOMAIN projected live variables are: smain.OVERFLW#79%1 
WARNING: do not know how to propagate smain.OVERFLW#79%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 61
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 9e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Pop: smain.OVERFLW#86%1 == FALSE
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
The list of live variables are 
smain.OVERFLW#86%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
DOMAIN projected live variables are: smain.OVERFLW#86%1 
WARNING: do not know how to propagate smain.OVERFLW#86%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 61
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 9.3e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Pop: smain.OVERFLW#93%1 == FALSE
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
The list of live variables are 
smain.OVERFLW#93%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
DOMAIN projected live variables are: smain.OVERFLW#93%1 
WARNING: do not know how to propagate smain.OVERFLW#93%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 61
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 9.2e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Pop: smain.OVERFLW#100%1 == FALSE
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
The list of live variables are 
smain.OVERFLW#100%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
DOMAIN projected live variables are: smain.OVERFLW#100%1 
WARNING: do not know how to propagate smain.OVERFLW#100%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 61
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 9.4e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Pop: smain.OVERFLW#107%1 == FALSE
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
The list of live variables are 
smain.OVERFLW#107%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
DOMAIN projected live variables are: smain.OVERFLW#107%1 
WARNING: do not know how to propagate smain.OVERFLW#107%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 61
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 9.4e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Pop: smain.OVERFLW#114%1 == FALSE
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
The list of live variables are 
smain.OVERFLW#114%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
DOMAIN projected live variables are: smain.OVERFLW#114%1 
WARNING: do not know how to propagate smain.OVERFLW#114%1 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 61
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 9.5e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Pop: $cond#59%1 == TRUE
prop_trail size is: 61
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
The list of live variables are 
$cond#59%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
DOMAIN projected live variables are: $cond#59%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#59%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#59%1
Simplified expression is $cond#59%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#59%1): $cond#59%1
The total number of variables passed to the template generator is 61
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 9.5e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#59%1
conflict graph: $cond#59%1
Pushed into reason trail
The reason element pushed is:: $cond#59%1 == TRUEIndex:: Begin 60End 61

[startup+342.3 s]
/proc/loadavg: 2.75 1.64 0.74 4/417 21317
/proc/meminfo: memFree=21226700/49446312 swapFree=0/4898344
[pid=21048] ppid=21046 vsize=41388 CPUtime=341.32 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6438 850 0 0 34128 4 0 0 20 0 1 0 933307213 42381312 7677 18446744073709551615 4194304 8965104 140728309787952 140728309779344 4337323 0 24578 0 16384 0 0 0 17 4 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 10347 7677 1804 1165 0 5971 0
Current children cumulated CPU time (s) 341.32
Current children cumulated vsize (KiB) 41388
New: $cond#59%1
prop_trail size is: 62
control_trail is empty
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#59%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
Pop: $cond#292%1 == TRUE
prop_trail size is: 62
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1
The list of live variables are 
$cond#292%1
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1
DOMAIN projected live variables are: $cond#292%1 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#292%1): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#292%1
Simplified expression is $cond#292%1
[ACDL-DOMAIN] boolean deductions(ssa::$cond#292%1): $cond#292%1
The total number of variables passed to the template generator is 62
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 9.4e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#292%1
conflict graph: $cond#292%1
Pushed into reason trail
The reason element pushed is:: $cond#292%1 == TRUEIndex:: Begin 61End 62
New: $cond#292%1
prop_trail size is: 63
control_trail is empty
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#292%1
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
Pop: $cond#146%0 == TRUE
prop_trail size is: 63
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1
The list of live variables are 
$cond#146%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1
DOMAIN projected live variables are: $cond#146%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#146%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#146%0
Simplified expression is $cond#146%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#146%0): $cond#146%0
The total number of variables passed to the template generator is 63
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 9.5e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#146%0
conflict graph: $cond#146%0
Pushed into reason trail
The reason element pushed is:: $cond#146%0 == TRUEIndex:: Begin 62End 63
New: $cond#146%0
prop_trail size is: 64
control_trail is empty
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#146%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
Pop: $cond#153%0 == TRUE
prop_trail size is: 64
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0
The list of live variables are 
$cond#153%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0
DOMAIN projected live variables are: $cond#153%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#153%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#153%0
Simplified expression is $cond#153%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#153%0): $cond#153%0
The total number of variables passed to the template generator is 64
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 9.8e-05 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#153%0
conflict graph: $cond#153%0
Pushed into reason trail
The reason element pushed is:: $cond#153%0 == TRUEIndex:: Begin 63End 64
New: $cond#153%0
prop_trail size is: 65
control_trail is empty
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#153%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
Pop: $cond#160%0 == TRUE
prop_trail size is: 65
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0
The list of live variables are 
$cond#160%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0
DOMAIN projected live variables are: $cond#160%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#160%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#160%0
Simplified expression is $cond#160%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#160%0): $cond#160%0
The total number of variables passed to the template generator is 65
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 0.0001 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#160%0
conflict graph: $cond#160%0
Pushed into reason trail
The reason element pushed is:: $cond#160%0 == TRUEIndex:: Begin 64End 65
New: $cond#160%0
prop_trail size is: 66
control_trail is empty
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#160%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
Pop: $cond#167%0 == TRUE
prop_trail size is: 66
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0
The list of live variables are 
$cond#167%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0
DOMAIN projected live variables are: $cond#167%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#167%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#167%0
Simplified expression is $cond#167%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#167%0): $cond#167%0
The total number of variables passed to the template generator is 66
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 0.0001 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#167%0
conflict graph: $cond#167%0
Pushed into reason trail
The reason element pushed is:: $cond#167%0 == TRUEIndex:: Begin 65End 66
New: $cond#167%0
prop_trail size is: 67
control_trail is empty
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#167%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
Pop: $cond#174%0 == TRUE
prop_trail size is: 67
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0
The list of live variables are 
$cond#174%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0
DOMAIN projected live variables are: $cond#174%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#174%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#174%0
Simplified expression is $cond#174%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#174%0): $cond#174%0
The total number of variables passed to the template generator is 67
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 0.000101 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#174%0
conflict graph: $cond#174%0
Pushed into reason trail
The reason element pushed is:: $cond#174%0 == TRUEIndex:: Begin 66End 67
New: $cond#174%0
prop_trail size is: 68
control_trail is empty
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#174%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
Pop: $cond#181%0 == TRUE
prop_trail size is: 68
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0
The list of live variables are 
$cond#181%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0
DOMAIN projected live variables are: $cond#181%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#181%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#181%0
Simplified expression is $cond#181%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#181%0): $cond#181%0
The total number of variables passed to the template generator is 68
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 0.000105 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#181%0
conflict graph: $cond#181%0
Pushed into reason trail
The reason element pushed is:: $cond#181%0 == TRUEIndex:: Begin 67End 68
New: $cond#181%0
prop_trail size is: 69
control_trail is empty
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#181%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
Pop: $cond#188%0 == TRUE
prop_trail size is: 69
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0
The list of live variables are 
$cond#188%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0
DOMAIN projected live variables are: $cond#188%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#188%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#188%0
Simplified expression is $cond#188%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#188%0): $cond#188%0
The total number of variables passed to the template generator is 69
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 0.000106 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#188%0
conflict graph: $cond#188%0
Pushed into reason trail
The reason element pushed is:: $cond#188%0 == TRUEIndex:: Begin 68End 69
New: $cond#188%0
prop_trail size is: 70
control_trail is empty
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#188%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
Pop: $cond#195%0 == TRUE
prop_trail size is: 70
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0
The list of live variables are 
$cond#195%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0
DOMAIN projected live variables are: $cond#195%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#195%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#195%0
Simplified expression is $cond#195%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#195%0): $cond#195%0
The total number of variables passed to the template generator is 70
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 0.000104 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#195%0
conflict graph: $cond#195%0
Pushed into reason trail
The reason element pushed is:: $cond#195%0 == TRUEIndex:: Begin 69End 70
New: $cond#195%0
prop_trail size is: 71
control_trail is empty
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#195%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
Pop: $cond#143%0 == TRUE
prop_trail size is: 71
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0
The list of live variables are 
$cond#143%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0
DOMAIN projected live variables are: $cond#143%0 
checking whether statement maps to BOTTOM: no
[ACDL-DOMAIN] projected(ssa::$cond#143%0): $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0
deducing in SAT
actually deducing
Subsumption test of meet irreducible $cond#143%0
Simplified expression is $cond#143%0
[ACDL-DOMAIN] boolean deductions(ssa::$cond#143%0): $cond#143%0
The total number of variables passed to the template generator is 71
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
The total time for template generation is 0.000106 s
Template variables: 

Template: 

RESULT: 
[ACDL-DOMAIN] deductions: $cond#143%0
conflict graph: $cond#143%0
Pushed into reason trail
The reason element pushed is:: $cond#143%0 == TRUEIndex:: Begin 70End 71
New: $cond#143%0
prop_trail size is: 72
control_trail is empty
Donot Preprocess value $cond#143%0
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#143%0
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
Pop: smain.stato#228%0 == 4
prop_trail size is: 72
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0
The list of live variables are 
smain.stato#228%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0
DOMAIN projected live variables are: smain.stato#228%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 73
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
The total time for template generation is 0.000114 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#228%0 >= 5)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
[ACDL-DOMAIN] deductions: !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
conflict graph: !(smain.stato#228%0 >= 5)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Pushed into reason trail
The reason element pushed is:: smain.stato#228%0 == 4Index:: Begin 71End 73
Pushed into reason trail
The reason element pushed is:: smain.stato#228%0 == 4Index:: Begin 71End 73
New: !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
prop_trail size is: 74
control_trail is empty
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Pop: smain.stato#230%0 == 1
prop_trail size is: 74
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The list of live variables are 
smain.stato#230%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
DOMAIN projected live variables are: smain.stato#230%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 74
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
The total time for template generation is 0.000119 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#230%0 >= 2)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
[ACDL-DOMAIN] deductions: !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
conflict graph: !(smain.stato#230%0 >= 2)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Pushed into reason trail
The reason element pushed is:: smain.stato#230%0 == 1Index:: Begin 73End 75
Pushed into reason trail
The reason element pushed is:: smain.stato#230%0 == 1Index:: Begin 73End 75
New: !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
prop_trail size is: 76
control_trail is empty
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Pop: smain.stato#235%0 == 4
prop_trail size is: 76
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The list of live variables are 
smain.stato#235%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
DOMAIN projected live variables are: smain.stato#235%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 75
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
The total time for template generation is 0.000133 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#235%0 >= 5)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
[ACDL-DOMAIN] deductions: !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
conflict graph: !(smain.stato#235%0 >= 5)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Pushed into reason trail
The reason element pushed is:: smain.stato#235%0 == 4Index:: Begin 75End 77
Pushed into reason trail
The reason element pushed is:: smain.stato#235%0 == 4Index:: Begin 75End 77
New: !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
prop_trail size is: 78
control_trail is empty
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Pop: smain.stato#237%0 == 1
prop_trail size is: 78
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The list of live variables are 
smain.stato#237%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
DOMAIN projected live variables are: smain.stato#237%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 76
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
The total time for template generation is 0.000146 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#237%0 >= 2)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
[ACDL-DOMAIN] deductions: !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
conflict graph: !(smain.stato#237%0 >= 2)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Pushed into reason trail
The reason element pushed is:: smain.stato#237%0 == 1Index:: Begin 77End 79
Pushed into reason trail
The reason element pushed is:: smain.stato#237%0 == 1Index:: Begin 77End 79
New: !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
prop_trail size is: 80
control_trail is empty
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Pop: smain.stato#242%0 == 5
prop_trail size is: 80
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The list of live variables are 
smain.stato#242%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
DOMAIN projected live variables are: smain.stato#242%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 77
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
The total time for template generation is 0.000148 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#242%0 >= 6)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
[ACDL-DOMAIN] deductions: !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
conflict graph: !(smain.stato#242%0 >= 6)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Pushed into reason trail
The reason element pushed is:: smain.stato#242%0 == 5Index:: Begin 79End 81
Pushed into reason trail
The reason element pushed is:: smain.stato#242%0 == 5Index:: Begin 79End 81

[startup+402.3 s]
/proc/loadavg: 2.91 1.89 0.88 4/417 21338
/proc/meminfo: memFree=21111292/49446312 swapFree=0/5008496
[pid=21048] ppid=21046 vsize=45740 CPUtime=401.16 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6485 850 0 0 40111 5 0 0 20 0 1 0 933307213 46837760 7677 18446744073709551615 4194304 8965104 140728309787952 140728309779192 4337546 0 24578 0 16384 0 0 0 17 4 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 11435 7677 1804 1165 0 7059 0
Current children cumulated CPU time (s) 401.16
Current children cumulated vsize (KiB) 45740
New: !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
prop_trail size is: 82
control_trail is empty
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Pop: smain.stato#244%0 == 2
prop_trail size is: 82
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The list of live variables are 
smain.stato#244%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
DOMAIN projected live variables are: smain.stato#244%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 78
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
smain.stato#244%0, 
The total time for template generation is 0.000159 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0
(OUT)  TRUE: smain.stato#244%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#244%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#244%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
smain.stato#242%0 < 6 is subsumed bysmain.stato#242%0 < 6
IS_SUBSUMED: 
  !(smain.stato#244%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#244%0 >= 3)
Simplified expression is !(smain.stato#244%0 >= 3)
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#244%0 >= 3)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
lhs matches, push into lhs container smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
[ACDL-DOMAIN] deductions: !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
conflict graph: !(smain.stato#244%0 >= 3)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Pushed into reason trail
The reason element pushed is:: smain.stato#244%0 == 2Index:: Begin 81End 83
Pushed into reason trail
The reason element pushed is:: smain.stato#244%0 == 2Index:: Begin 81End 83
New: !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
prop_trail size is: 84
control_trail is empty
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Pop: smain.stato#249%0 == 5
prop_trail size is: 84
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The list of live variables are 
smain.stato#249%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
DOMAIN projected live variables are: smain.stato#249%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 79
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
smain.stato#244%0, 
smain.stato#249%0, 
The total time for template generation is 0.000166 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0
(OUT)  TRUE: smain.stato#244%0
(OUT)  TRUE: smain.stato#249%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#244%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#244%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#249%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#249%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(smain.stato#244%0 >= 3) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
smain.stato#242%0 < 6 is subsumed bysmain.stato#242%0 < 6
IS_SUBSUMED: 
  !(smain.stato#244%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#244%0 >= 3)
Simplified expression is !(smain.stato#244%0 >= 3)
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
smain.stato#244%0 < 3 is subsumed bysmain.stato#244%0 < 3
IS_SUBSUMED: 
  !(smain.stato#249%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#249%0 >= 6)
Simplified expression is !(smain.stato#249%0 >= 6)
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#249%0 >= 6)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
lhs matches, push into lhs container smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
lhs matches, push into lhs container smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
[ACDL-DOMAIN] deductions: !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
conflict graph: !(smain.stato#249%0 >= 6)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Pushed into reason trail
The reason element pushed is:: smain.stato#249%0 == 5Index:: Begin 83End 85
Pushed into reason trail
The reason element pushed is:: smain.stato#249%0 == 5Index:: Begin 83End 85
New: !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
prop_trail size is: 86
control_trail is empty
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Pop: smain.stato#251%0 == 2
prop_trail size is: 86
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The list of live variables are 
smain.stato#251%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
DOMAIN projected live variables are: smain.stato#251%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 80
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
smain.stato#244%0, 
smain.stato#249%0, 
smain.stato#251%0, 
The total time for template generation is 0.000174 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0
(OUT)  TRUE: smain.stato#244%0
(OUT)  TRUE: smain.stato#249%0
(OUT)  TRUE: smain.stato#251%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#244%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#244%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#249%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#249%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#251%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#251%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(smain.stato#244%0 >= 3) && !(smain.stato#249%0 >= 6) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
smain.stato#242%0 < 6 is subsumed bysmain.stato#242%0 < 6
IS_SUBSUMED: 
  !(smain.stato#244%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#244%0 >= 3)
Simplified expression is !(smain.stato#244%0 >= 3)
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
smain.stato#244%0 < 3 is subsumed bysmain.stato#244%0 < 3
IS_SUBSUMED: 
  !(smain.stato#249%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#249%0 >= 6)
Simplified expression is !(smain.stato#249%0 >= 6)
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
smain.stato#249%0 < 6 is subsumed bysmain.stato#249%0 < 6
IS_SUBSUMED: 
  !(smain.stato#251%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(smain.stato#251%0 >= 3)
Simplified expression is !(smain.stato#251%0 >= 3)
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#251%0 >= 3)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
lhs matches, push into lhs container smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
lhs matches, push into lhs container smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
lhs matches, push into lhs container smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
[ACDL-DOMAIN] deductions: !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
conflict graph: !(smain.stato#251%0 >= 3)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Pushed into reason trail
The reason element pushed is:: smain.stato#251%0 == 2Index:: Begin 85End 87
Pushed into reason trail
The reason element pushed is:: smain.stato#251%0 == 2Index:: Begin 85End 87
New: !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
prop_trail size is: 88
control_trail is empty
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Pop: smain.stato#256%0 == 7
prop_trail size is: 88
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The list of live variables are 
smain.stato#256%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
DOMAIN projected live variables are: smain.stato#256%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 81
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
smain.stato#244%0, 
smain.stato#249%0, 
smain.stato#251%0, 
smain.stato#256%0, 
The total time for template generation is 0.000177 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0
(OUT)  TRUE: smain.stato#244%0
(OUT)  TRUE: smain.stato#249%0
(OUT)  TRUE: smain.stato#251%0
(OUT)  TRUE: smain.stato#256%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#244%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#244%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#249%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#249%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#251%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#251%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#256%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#256%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(smain.stato#244%0 >= 3) && !(smain.stato#249%0 >= 6) && !(smain.stato#251%0 >= 3) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
smain.stato#242%0 < 6 is subsumed bysmain.stato#242%0 < 6
IS_SUBSUMED: 
  !(smain.stato#244%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#244%0 >= 3)
Simplified expression is !(smain.stato#244%0 >= 3)
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
smain.stato#244%0 < 3 is subsumed bysmain.stato#244%0 < 3
IS_SUBSUMED: 
  !(smain.stato#249%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#249%0 >= 6)
Simplified expression is !(smain.stato#249%0 >= 6)
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
smain.stato#249%0 < 6 is subsumed bysmain.stato#249%0 < 6
IS_SUBSUMED: 
  !(smain.stato#251%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#251%0 >= 3)
Simplified expression is !(smain.stato#251%0 >= 3)
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
smain.stato#251%0 < 3 is subsumed bysmain.stato#251%0 < 3
IS_SUBSUMED: 
  !(smain.stato#256%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(smain.stato#256%0 >= 8)
Simplified expression is !(smain.stato#256%0 >= 8)
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#256%0 >= 8)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
lhs matches, push into lhs container smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
lhs matches, push into lhs container smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
lhs matches, push into lhs container smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
lhs matches, push into lhs container smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
[ACDL-DOMAIN] deductions: !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
conflict graph: !(smain.stato#256%0 >= 8)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Pushed into reason trail
The reason element pushed is:: smain.stato#256%0 == 7Index:: Begin 87End 89
Pushed into reason trail
The reason element pushed is:: smain.stato#256%0 == 7Index:: Begin 87End 89
New: !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
prop_trail size is: 90
control_trail is empty
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Pop: smain.stato#258%0 == 6
prop_trail size is: 90
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The list of live variables are 
smain.stato#258%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
DOMAIN projected live variables are: smain.stato#258%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 82
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
smain.stato#244%0, 
smain.stato#249%0, 
smain.stato#251%0, 
smain.stato#256%0, 
smain.stato#258%0, 
The total time for template generation is 0.000178 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0
(OUT)  TRUE: smain.stato#244%0
(OUT)  TRUE: smain.stato#249%0
(OUT)  TRUE: smain.stato#251%0
(OUT)  TRUE: smain.stato#256%0
(OUT)  TRUE: smain.stato#258%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#244%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#244%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#249%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#249%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#251%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#251%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#256%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#256%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#258%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#258%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(smain.stato#244%0 >= 3) && !(smain.stato#249%0 >= 6) && !(smain.stato#251%0 >= 3) && !(smain.stato#256%0 >= 8) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
smain.stato#242%0 < 6 is subsumed bysmain.stato#242%0 < 6
IS_SUBSUMED: 
  !(smain.stato#244%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#244%0 >= 3)
Simplified expression is !(smain.stato#244%0 >= 3)
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
smain.stato#244%0 < 3 is subsumed bysmain.stato#244%0 < 3
IS_SUBSUMED: 
  !(smain.stato#249%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#249%0 >= 6)
Simplified expression is !(smain.stato#249%0 >= 6)
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
smain.stato#249%0 < 6 is subsumed bysmain.stato#249%0 < 6
IS_SUBSUMED: 
  !(smain.stato#251%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#251%0 >= 3)
Simplified expression is !(smain.stato#251%0 >= 3)
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
smain.stato#251%0 < 3 is subsumed bysmain.stato#251%0 < 3
IS_SUBSUMED: 
  !(smain.stato#256%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#256%0 >= 8)
Simplified expression is !(smain.stato#256%0 >= 8)
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
smain.stato#256%0 < 8 is subsumed bysmain.stato#256%0 < 8
IS_SUBSUMED: 
  !(smain.stato#258%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#258%0 >= 7)
Simplified expression is !(smain.stato#258%0 >= 7)
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#258%0 >= 7)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
lhs matches, push into lhs container smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
lhs matches, push into lhs container smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
lhs matches, push into lhs container smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
lhs matches, push into lhs container smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
lhs matches, push into lhs container smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
[ACDL-DOMAIN] deductions: !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
conflict graph: !(smain.stato#258%0 >= 7)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Pushed into reason trail
The reason element pushed is:: smain.stato#258%0 == 6Index:: Begin 89End 91
Pushed into reason trail
The reason element pushed is:: smain.stato#258%0 == 6Index:: Begin 89End 91
New: !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
prop_trail size is: 92
control_trail is empty
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Pop: smain.stato#263%0 == 7
prop_trail size is: 92
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The list of live variables are 
smain.stato#263%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
DOMAIN projected live variables are: smain.stato#263%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 83
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
smain.stato#244%0, 
smain.stato#249%0, 
smain.stato#251%0, 
smain.stato#256%0, 
smain.stato#258%0, 
smain.stato#263%0, 
The total time for template generation is 0.000194 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0
(OUT)  TRUE: smain.stato#244%0
(OUT)  TRUE: smain.stato#249%0
(OUT)  TRUE: smain.stato#251%0
(OUT)  TRUE: smain.stato#256%0
(OUT)  TRUE: smain.stato#258%0
(OUT)  TRUE: smain.stato#263%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#244%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#244%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#249%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#249%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#251%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#251%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#256%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#256%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#258%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#258%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#263%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#263%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(smain.stato#244%0 >= 3) && !(smain.stato#249%0 >= 6) && !(smain.stato#251%0 >= 3) && !(smain.stato#256%0 >= 8) && !(smain.stato#258%0 >= 7) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
smain.stato#242%0 < 6 is subsumed bysmain.stato#242%0 < 6
IS_SUBSUMED: 
  !(smain.stato#244%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#244%0 >= 3)
Simplified expression is !(smain.stato#244%0 >= 3)
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
smain.stato#244%0 < 3 is subsumed bysmain.stato#244%0 < 3
IS_SUBSUMED: 
  !(smain.stato#249%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#249%0 >= 6)
Simplified expression is !(smain.stato#249%0 >= 6)
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
smain.stato#249%0 < 6 is subsumed bysmain.stato#249%0 < 6
IS_SUBSUMED: 
  !(smain.stato#251%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#251%0 >= 3)
Simplified expression is !(smain.stato#251%0 >= 3)
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
smain.stato#251%0 < 3 is subsumed bysmain.stato#251%0 < 3
IS_SUBSUMED: 
  !(smain.stato#256%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#256%0 >= 8)
Simplified expression is !(smain.stato#256%0 >= 8)
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
smain.stato#256%0 < 8 is subsumed bysmain.stato#256%0 < 8
IS_SUBSUMED: 
  !(smain.stato#258%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#258%0 >= 7)
Simplified expression is !(smain.stato#258%0 >= 7)
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
smain.stato#258%0 < 7 is subsumed bysmain.stato#258%0 < 7
IS_SUBSUMED: 
  !(smain.stato#263%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#263%0 >= 8)
Simplified expression is !(smain.stato#263%0 >= 8)
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#263%0 >= 8)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
lhs matches, push into lhs container smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
lhs matches, push into lhs container smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
lhs matches, push into lhs container smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
lhs matches, push into lhs container smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
lhs matches, push into lhs container smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
lhs matches, push into lhs container smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
[ACDL-DOMAIN] deductions: !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
conflict graph: !(smain.stato#263%0 >= 8)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Pushed into reason trail
The reason element pushed is:: smain.stato#263%0 == 7Index:: Begin 91End 93
Pushed into reason trail
The reason element pushed is:: smain.stato#263%0 == 7Index:: Begin 91End 93
New: !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
prop_trail size is: 94
control_trail is empty
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Pop: smain.stato#265%0 == 6
prop_trail size is: 94
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The list of live variables are 
smain.stato#265%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
DOMAIN projected live variables are: smain.stato#265%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 84
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
smain.stato#244%0, 
smain.stato#249%0, 
smain.stato#251%0, 
smain.stato#256%0, 
smain.stato#258%0, 
smain.stato#263%0, 
smain.stato#265%0, 
The total time for template generation is 0.000189 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0
(OUT)  TRUE: smain.stato#244%0
(OUT)  TRUE: smain.stato#249%0
(OUT)  TRUE: smain.stato#251%0
(OUT)  TRUE: smain.stato#256%0
(OUT)  TRUE: smain.stato#258%0
(OUT)  TRUE: smain.stato#263%0
(OUT)  TRUE: smain.stato#265%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#244%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#244%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#249%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#249%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#251%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#251%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#256%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#256%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#258%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#258%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#263%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#263%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#265%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#265%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(smain.stato#244%0 >= 3) && !(smain.stato#249%0 >= 6) && !(smain.stato#251%0 >= 3) && !(smain.stato#256%0 >= 8) && !(smain.stato#258%0 >= 7) && !(smain.stato#263%0 >= 8) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
smain.stato#242%0 < 6 is subsumed bysmain.stato#242%0 < 6
IS_SUBSUMED: 
  !(smain.stato#244%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#244%0 >= 3)
Simplified expression is !(smain.stato#244%0 >= 3)
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
smain.stato#244%0 < 3 is subsumed bysmain.stato#244%0 < 3
IS_SUBSUMED: 
  !(smain.stato#249%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#249%0 >= 6)
Simplified expression is !(smain.stato#249%0 >= 6)
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
smain.stato#249%0 < 6 is subsumed bysmain.stato#249%0 < 6
IS_SUBSUMED: 
  !(smain.stato#251%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#251%0 >= 3)
Simplified expression is !(smain.stato#251%0 >= 3)
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
smain.stato#251%0 < 3 is subsumed bysmain.stato#251%0 < 3
IS_SUBSUMED: 
  !(smain.stato#256%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#256%0 >= 8)
Simplified expression is !(smain.stato#256%0 >= 8)
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
smain.stato#256%0 < 8 is subsumed bysmain.stato#256%0 < 8
IS_SUBSUMED: 
  !(smain.stato#258%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#258%0 >= 7)
Simplified expression is !(smain.stato#258%0 >= 7)
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
smain.stato#258%0 < 7 is subsumed bysmain.stato#258%0 < 7
IS_SUBSUMED: 
  !(smain.stato#263%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#263%0 >= 8)
Simplified expression is !(smain.stato#263%0 >= 8)
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
smain.stato#263%0 < 8 is subsumed bysmain.stato#263%0 < 8
IS_SUBSUMED: 
  !(smain.stato#265%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(smain.stato#265%0 >= 7)
Simplified expression is !(smain.stato#265%0 >= 7)
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#265%0 >= 7)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
lhs matches, push into lhs container smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
lhs matches, push into lhs container smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
lhs matches, push into lhs container smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
lhs matches, push into lhs container smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
lhs matches, push into lhs container smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
lhs matches, push into lhs container smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
lhs matches, push into lhs container smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
[ACDL-DOMAIN] deductions: !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
conflict graph: !(smain.stato#265%0 >= 7)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Pushed into reason trail
The reason element pushed is:: smain.stato#265%0 == 6Index:: Begin 93End 95
Pushed into reason trail
The reason element pushed is:: smain.stato#265%0 == 6Index:: Begin 93End 95
New: !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
prop_trail size is: 96
control_trail is empty
Donot Preprocess value !(smain.stato#265%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Donot Preprocess value !(smain.stato#265%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Pop: smain.stato#270%0 == 3
prop_trail size is: 96
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Donot Preprocess value !(smain.stato#265%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The list of live variables are 
smain.stato#270%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
DOMAIN projected live variables are: smain.stato#270%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 85
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
smain.stato#244%0, 
smain.stato#249%0, 
smain.stato#251%0, 
smain.stato#256%0, 
smain.stato#258%0, 
smain.stato#263%0, 
smain.stato#265%0, 
smain.stato#270%0, 
The total time for template generation is 0.000218 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0
(OUT)  TRUE: smain.stato#244%0
(OUT)  TRUE: smain.stato#249%0
(OUT)  TRUE: smain.stato#251%0
(OUT)  TRUE: smain.stato#256%0
(OUT)  TRUE: smain.stato#258%0
(OUT)  TRUE: smain.stato#263%0
(OUT)  TRUE: smain.stato#265%0
(OUT)  TRUE: smain.stato#270%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#244%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#244%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#249%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#249%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#251%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#251%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#256%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#256%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#258%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#258%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#263%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#263%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#265%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#265%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#270%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#270%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(smain.stato#244%0 >= 3) && !(smain.stato#249%0 >= 6) && !(smain.stato#251%0 >= 3) && !(smain.stato#256%0 >= 8) && !(smain.stato#258%0 >= 7) && !(smain.stato#263%0 >= 8) && !(smain.stato#265%0 >= 7) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
smain.stato#242%0 < 6 is subsumed bysmain.stato#242%0 < 6
IS_SUBSUMED: 
  !(smain.stato#244%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#244%0 >= 3)
Simplified expression is !(smain.stato#244%0 >= 3)
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
smain.stato#244%0 < 3 is subsumed bysmain.stato#244%0 < 3
IS_SUBSUMED: 
  !(smain.stato#249%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#249%0 >= 6)
Simplified expression is !(smain.stato#249%0 >= 6)
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
smain.stato#249%0 < 6 is subsumed bysmain.stato#249%0 < 6
IS_SUBSUMED: 
  !(smain.stato#251%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#251%0 >= 3)
Simplified expression is !(smain.stato#251%0 >= 3)
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
smain.stato#251%0 < 3 is subsumed bysmain.stato#251%0 < 3
IS_SUBSUMED: 
  !(smain.stato#256%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#256%0 >= 8)
Simplified expression is !(smain.stato#256%0 >= 8)
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
smain.stato#256%0 < 8 is subsumed bysmain.stato#256%0 < 8
IS_SUBSUMED: 
  !(smain.stato#258%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#258%0 >= 7)
Simplified expression is !(smain.stato#258%0 >= 7)
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
smain.stato#258%0 < 7 is subsumed bysmain.stato#258%0 < 7
IS_SUBSUMED: 
  !(smain.stato#263%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#263%0 >= 8)
Simplified expression is !(smain.stato#263%0 >= 8)
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
smain.stato#263%0 < 8 is subsumed bysmain.stato#263%0 < 8
IS_SUBSUMED: 
  !(smain.stato#265%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#265%0 >= 7)
Simplified expression is !(smain.stato#265%0 >= 7)
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
smain.stato#265%0 < 7 is subsumed bysmain.stato#265%0 < 7
IS_SUBSUMED: 
  !(smain.stato#270%0 >= 4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(smain.stato#270%0 >= 4)
Simplified expression is !(smain.stato#270%0 >= 4)
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#270%0 >= 4)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
lhs matches, push into lhs container smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
lhs matches, push into lhs container smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
lhs matches, push into lhs container smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
lhs matches, push into lhs container smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
lhs matches, push into lhs container smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
lhs matches, push into lhs container smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
lhs matches, push into lhs container smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
lhs matches, push into lhs container smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
[ACDL-DOMAIN] deductions: !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
conflict graph: !(smain.stato#270%0 >= 4)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Pushed into reason trail
The reason element pushed is:: smain.stato#270%0 == 3Index:: Begin 95End 97
Pushed into reason trail
The reason element pushed is:: smain.stato#270%0 == 3Index:: Begin 95End 97
New: !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
prop_trail size is: 98
control_trail is empty
Donot Preprocess value !(smain.stato#270%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Donot Preprocess value !(smain.stato#265%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Donot Preprocess value !(smain.stato#270%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Pop: smain.stato#272%0 == 0
prop_trail size is: 98
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Donot Preprocess value !(smain.stato#265%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Donot Preprocess value !(smain.stato#270%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The list of live variables are 
smain.stato#272%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
DOMAIN projected live variables are: smain.stato#272%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 86
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
smain.stato#244%0, 
smain.stato#249%0, 
smain.stato#251%0, 
smain.stato#256%0, 
smain.stato#258%0, 
smain.stato#263%0, 
smain.stato#265%0, 
smain.stato#270%0, 
smain.stato#272%0, 
The total time for template generation is 0.000224 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0
(OUT)  TRUE: smain.stato#244%0
(OUT)  TRUE: smain.stato#249%0
(OUT)  TRUE: smain.stato#251%0
(OUT)  TRUE: smain.stato#256%0
(OUT)  TRUE: smain.stato#258%0
(OUT)  TRUE: smain.stato#263%0
(OUT)  TRUE: smain.stato#265%0
(OUT)  TRUE: smain.stato#270%0
(OUT)  TRUE: smain.stato#272%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#244%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#244%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#249%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#249%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#251%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#251%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#256%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#256%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#258%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#258%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#263%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#263%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#265%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#265%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#270%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#270%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#272%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#272%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(smain.stato#244%0 >= 3) && !(smain.stato#249%0 >= 6) && !(smain.stato#251%0 >= 3) && !(smain.stato#256%0 >= 8) && !(smain.stato#258%0 >= 7) && !(smain.stato#263%0 >= 8) && !(smain.stato#265%0 >= 7) && !(smain.stato#270%0 >= 4) && !(smain.stato#272%0 >= 1) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
smain.stato#242%0 < 6 is subsumed bysmain.stato#242%0 < 6
IS_SUBSUMED: 
  !(smain.stato#244%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#244%0 >= 3)
Simplified expression is !(smain.stato#244%0 >= 3)
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
smain.stato#244%0 < 3 is subsumed bysmain.stato#244%0 < 3
IS_SUBSUMED: 
  !(smain.stato#249%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#249%0 >= 6)
Simplified expression is !(smain.stato#249%0 >= 6)
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
smain.stato#249%0 < 6 is subsumed bysmain.stato#249%0 < 6
IS_SUBSUMED: 
  !(smain.stato#251%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#251%0 >= 3)
Simplified expression is !(smain.stato#251%0 >= 3)
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
smain.stato#251%0 < 3 is subsumed bysmain.stato#251%0 < 3
IS_SUBSUMED: 
  !(smain.stato#256%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#256%0 >= 8)
Simplified expression is !(smain.stato#256%0 >= 8)
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
smain.stato#256%0 < 8 is subsumed bysmain.stato#256%0 < 8
IS_SUBSUMED: 
  !(smain.stato#258%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#258%0 >= 7)
Simplified expression is !(smain.stato#258%0 >= 7)
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
smain.stato#258%0 < 7 is subsumed bysmain.stato#258%0 < 7
IS_SUBSUMED: 
  !(smain.stato#263%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#263%0 >= 8)
Simplified expression is !(smain.stato#263%0 >= 8)
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
smain.stato#263%0 < 8 is subsumed bysmain.stato#263%0 < 8
IS_SUBSUMED: 
  !(smain.stato#265%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#265%0 >= 7)
Simplified expression is !(smain.stato#265%0 >= 7)
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
smain.stato#265%0 < 7 is subsumed bysmain.stato#265%0 < 7
IS_SUBSUMED: 
  !(smain.stato#270%0 >= 4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#270%0 >= 4)
Simplified expression is !(smain.stato#270%0 >= 4)
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
smain.stato#270%0 < 4 is subsumed bysmain.stato#270%0 < 4
IS_SUBSUMED: 
  !(smain.stato#272%0 >= 1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#272%0 >= 1)
Simplified expression is !(smain.stato#272%0 >= 1)
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#272%0 >= 1)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
lhs matches, push into lhs container smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
lhs matches, push into lhs container smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
lhs matches, push into lhs container smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
lhs matches, push into lhs container smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
lhs matches, push into lhs container smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
lhs matches, push into lhs container smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
lhs matches, push into lhs container smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
lhs matches, push into lhs container smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
lhs matches, push into lhs container smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
-((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
[ACDL-DOMAIN] numerical deductions: !(smain.stato#272%0 >= 1)
[ACDL-DOMAIN] deductions: !(smain.stato#272%0 >= 1)
conflict graph: !(smain.stato#272%0 >= 1)
Pushed into reason trail
The reason element pushed is:: smain.stato#272%0 == 0Index:: Begin 97End 98
New: !(smain.stato#272%0 >= 1)
prop_trail size is: 99
control_trail is empty
Donot Preprocess value !(smain.stato#272%0 >= 1)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Donot Preprocess value !(smain.stato#265%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Donot Preprocess value !(smain.stato#270%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Donot Preprocess value !(smain.stato#272%0 >= 1)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#272%0 >= 1)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
!(smain.stato#272%0 >= 1)
Pop: smain.stato#277%0 == 3
prop_trail size is: 99
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Donot Preprocess value !(smain.stato#265%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Donot Preprocess value !(smain.stato#270%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Donot Preprocess value !(smain.stato#272%0 >= 1)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
!(smain.stato#272%0 >= 1)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
!(smain.stato#272%0 >= 1)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
The list of live variables are 
smain.stato#277%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
DOMAIN projected live variables are: smain.stato#277%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 87
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
smain.stato#244%0, 
smain.stato#249%0, 
smain.stato#251%0, 
smain.stato#256%0, 
smain.stato#258%0, 
smain.stato#263%0, 
smain.stato#265%0, 
smain.stato#270%0, 
smain.stato#272%0, 
smain.stato#277%0, 
The total time for template generation is 0.000232 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0
(OUT)  TRUE: smain.stato#244%0
(OUT)  TRUE: smain.stato#249%0
(OUT)  TRUE: smain.stato#251%0
(OUT)  TRUE: smain.stato#256%0
(OUT)  TRUE: smain.stato#258%0
(OUT)  TRUE: smain.stato#263%0
(OUT)  TRUE: smain.stato#265%0
(OUT)  TRUE: smain.stato#270%0
(OUT)  TRUE: smain.stato#272%0
(OUT)  TRUE: smain.stato#277%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#244%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#244%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#249%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#249%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#251%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#251%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#256%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#256%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#258%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#258%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#263%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#263%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#265%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#265%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#270%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#270%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#272%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#272%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#277%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#277%0)<=CONST )

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(smain.stato#244%0 >= 3) && !(smain.stato#249%0 >= 6) && !(smain.stato#251%0 >= 3) && !(smain.stato#256%0 >= 8) && !(smain.stato#258%0 >= 7) && !(smain.stato#263%0 >= 8) && !(smain.stato#265%0 >= 7) && !(smain.stato#270%0 >= 4) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
smain.stato#242%0 < 6 is subsumed bysmain.stato#242%0 < 6
IS_SUBSUMED: 
  !(smain.stato#244%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#244%0 >= 3)
Simplified expression is !(smain.stato#244%0 >= 3)
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
smain.stato#244%0 < 3 is subsumed bysmain.stato#244%0 < 3
IS_SUBSUMED: 
  !(smain.stato#249%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#249%0 >= 6)
Simplified expression is !(smain.stato#249%0 >= 6)
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
smain.stato#249%0 < 6 is subsumed bysmain.stato#249%0 < 6
IS_SUBSUMED: 
  !(smain.stato#251%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#251%0 >= 3)
Simplified expression is !(smain.stato#251%0 >= 3)
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
smain.stato#251%0 < 3 is subsumed bysmain.stato#251%0 < 3
IS_SUBSUMED: 
  !(smain.stato#256%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#256%0 >= 8)
Simplified expression is !(smain.stato#256%0 >= 8)
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
smain.stato#256%0 < 8 is subsumed bysmain.stato#256%0 < 8
IS_SUBSUMED: 
  !(smain.stato#258%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#258%0 >= 7)
Simplified expression is !(smain.stato#258%0 >= 7)
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
smain.stato#258%0 < 7 is subsumed bysmain.stato#258%0 < 7
IS_SUBSUMED: 
  !(smain.stato#263%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#263%0 >= 8)
Simplified expression is !(smain.stato#263%0 >= 8)
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
smain.stato#263%0 < 8 is subsumed bysmain.stato#263%0 < 8
IS_SUBSUMED: 
  !(smain.stato#265%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#265%0 >= 7)
Simplified expression is !(smain.stato#265%0 >= 7)
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
smain.stato#265%0 < 7 is subsumed bysmain.stato#265%0 < 7
IS_SUBSUMED: 
  !(smain.stato#270%0 >= 4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#270%0 >= 4)
Simplified expression is !(smain.stato#270%0 >= 4)
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
smain.stato#270%0 < 4 is subsumed bysmain.stato#270%0 < 4
IS_SUBSUMED: 
  !(smain.stato#272%0 >= 1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#272%0 >= 1)
Simplified expression is !(smain.stato#272%0 >= 1)
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
smain.stato#272%0 < 1 is subsumed bysmain.stato#272%0 < 1
IS_SUBSUMED: 
  !(smain.stato#277%0 >= 4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#277%0 >= 4)
Simplified expression is !(smain.stato#277%0 >= 4)
The original not expression is !(smain.stato#277%0 >= 4)
The new non-negated expression is smain.stato#277%0 < 4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#277%0 >= 4)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
lhs matches, push into lhs container smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
lhs matches, push into lhs container smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
lhs matches, push into lhs container smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
lhs matches, push into lhs container smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
lhs matches, push into lhs container smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
lhs matches, push into lhs container smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
lhs matches, push into lhs container smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
lhs matches, push into lhs container smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
lhs matches, push into lhs container smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
-((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
[ACDL-DOMAIN] numerical deductions: !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
[ACDL-DOMAIN] deductions: !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
conflict graph: !(smain.stato#277%0 >= 4)
conflict graph: !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Pushed into reason trail
The reason element pushed is:: smain.stato#277%0 == 3Index:: Begin 98End 100
Pushed into reason trail
The reason element pushed is:: smain.stato#277%0 == 3Index:: Begin 98End 100
New: !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
prop_trail size is: 101
control_trail is empty
Donot Preprocess value !(smain.stato#277%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Donot Preprocess value !(smain.stato#265%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Donot Preprocess value !(smain.stato#270%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Donot Preprocess value !(smain.stato#272%0 >= 1)
Donot Preprocess value !(smain.stato#277%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#277%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
!(smain.stato#272%0 >= 1)
!(smain.stato#277%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Pop: smain.stato#279%0 == 0
prop_trail size is: 101
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Donot Preprocess value !(smain.stato#265%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Donot Preprocess value !(smain.stato#270%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Donot Preprocess value !(smain.stato#272%0 >= 1)
Donot Preprocess value !(smain.stato#277%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
!(smain.stato#272%0 >= 1)
!(smain.stato#277%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
!(smain.stato#272%0 >= 1)
!(smain.stato#277%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The list of live variables are 
smain.stato#279%0
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
DOMAIN projected live variables are: smain.stato#279%0 
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 88
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
smain.stato#244%0, 
smain.stato#249%0, 
smain.stato#251%0, 
smain.stato#256%0, 
smain.stato#258%0, 
smain.stato#263%0, 
smain.stato#265%0, 
smain.stato#270%0, 
smain.stato#272%0, 
smain.stato#277%0, 
smain.stato#279%0, 
The total time for template generation is 0.000237 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0
(OUT)  TRUE: smain.stato#244%0
(OUT)  TRUE: smain.stato#249%0
(OUT)  TRUE: smain.stato#251%0
(OUT)  TRUE: smain.stato#256%0
(OUT)  TRUE: smain.stato#258%0
(OUT)  TRUE: smain.stato#263%0
(OUT)  TRUE: smain.stato#265%0
(OUT)  TRUE: smain.stato#270%0
(OUT)  TRUE: smain.stato#272%0
(OUT)  TRUE: smain.stato#277%0
(OUT)  TRUE: smain.stato#279%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#244%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#244%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#249%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#249%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#251%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#251%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#256%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#256%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#258%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#258%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#263%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#263%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#265%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#265%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#270%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#270%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#272%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#272%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#277%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#277%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#279%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#279%0)<=CONST )

<refinement-iteration>1</refinement-iteration>

<refinement-iteration>1</refinement-iteration>

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(smain.stato#244%0 >= 3) && !(smain.stato#249%0 >= 6) && !(smain.stato#251%0 >= 3) && !(smain.stato#256%0 >= 8) && !(smain.stato#258%0 >= 7) && !(smain.stato#263%0 >= 8) && !(smain.stato#265%0 >= 7) && !(smain.stato#270%0 >= 4) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(smain.stato#279%0 >= 1) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
smain.stato#242%0 < 6 is subsumed bysmain.stato#242%0 < 6
IS_SUBSUMED: 
  !(smain.stato#244%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#244%0 >= 3)
Simplified expression is !(smain.stato#244%0 >= 3)
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
smain.stato#244%0 < 3 is subsumed bysmain.stato#244%0 < 3
IS_SUBSUMED: 
  !(smain.stato#249%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#249%0 >= 6)
Simplified expression is !(smain.stato#249%0 >= 6)
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
smain.stato#249%0 < 6 is subsumed bysmain.stato#249%0 < 6
IS_SUBSUMED: 
  !(smain.stato#251%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#251%0 >= 3)
Simplified expression is !(smain.stato#251%0 >= 3)
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
smain.stato#251%0 < 3 is subsumed bysmain.stato#251%0 < 3
IS_SUBSUMED: 
  !(smain.stato#256%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#256%0 >= 8)
Simplified expression is !(smain.stato#256%0 >= 8)
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
smain.stato#256%0 < 8 is subsumed bysmain.stato#256%0 < 8
IS_SUBSUMED: 
  !(smain.stato#258%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#258%0 >= 7)
Simplified expression is !(smain.stato#258%0 >= 7)
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
smain.stato#258%0 < 7 is subsumed bysmain.stato#258%0 < 7
IS_SUBSUMED: 
  !(smain.stato#263%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#263%0 >= 8)
Simplified expression is !(smain.stato#263%0 >= 8)
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
smain.stato#263%0 < 8 is subsumed bysmain.stato#263%0 < 8
IS_SUBSUMED: 
  !(smain.stato#265%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#265%0 >= 7)
Simplified expression is !(smain.stato#265%0 >= 7)
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
smain.stato#265%0 < 7 is subsumed bysmain.stato#265%0 < 7
IS_SUBSUMED: 
  !(smain.stato#270%0 >= 4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#270%0 >= 4)
Simplified expression is !(smain.stato#270%0 >= 4)
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
smain.stato#270%0 < 4 is subsumed bysmain.stato#270%0 < 4
IS_SUBSUMED: 
  !(smain.stato#272%0 >= 1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#272%0 >= 1)
Simplified expression is !(smain.stato#272%0 >= 1)
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
smain.stato#272%0 < 1 is subsumed bysmain.stato#272%0 < 1
IS_SUBSUMED: 
  !(smain.stato#277%0 >= 4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#277%0 >= 4)
Simplified expression is !(smain.stato#277%0 >= 4)
The original not expression is !(smain.stato#277%0 >= 4)
The new non-negated expression is smain.stato#277%0 < 4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#277%0 >= 4)
The new non-negated expression is smain.stato#277%0 < 4
smain.stato#277%0 < 4 is subsumed bysmain.stato#277%0 < 4
IS_SUBSUMED: 
  !(smain.stato#279%0 >= 1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(smain.stato#279%0 >= 1)
Simplified expression is !(smain.stato#279%0 >= 1)
The original not expression is !(smain.stato#279%0 >= 1)
The new non-negated expression is smain.stato#279%0 < 1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#277%0 >= 4)
The new non-negated expression is smain.stato#277%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2
No matching lhs found, so checking against whole value 
SUBSUMPTION RESULT:: not subsumed
adding new value !(smain.stato#279%0 >= 1)
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
lhs matches, push into lhs container smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
lhs matches, push into lhs container smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
lhs matches, push into lhs container smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
lhs matches, push into lhs container smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
lhs matches, push into lhs container smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
lhs matches, push into lhs container smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
lhs matches, push into lhs container smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
lhs matches, push into lhs container smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
lhs matches, push into lhs container smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
-((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#277%0 >= 4)
The new non-negated expression is smain.stato#277%0 < 4
lhs matches, push into lhs container smain.stato#277%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2
-((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2
[ACDL-DOMAIN] numerical deductions: !(smain.stato#279%0 >= 1)
[ACDL-DOMAIN] deductions: !(smain.stato#279%0 >= 1)
conflict graph: !(smain.stato#279%0 >= 1)
Pushed into reason trail
The reason element pushed is:: smain.stato#279%0 == 0Index:: Begin 100End 101
New: !(smain.stato#279%0 >= 1)
prop_trail size is: 102
control_trail is empty
Donot Preprocess value !(smain.stato#279%0 >= 1)
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Donot Preprocess value !(smain.stato#265%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Donot Preprocess value !(smain.stato#270%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Donot Preprocess value !(smain.stato#272%0 >= 1)
Donot Preprocess value !(smain.stato#277%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Donot Preprocess value !(smain.stato#279%0 >= 1)
Now push all collected constraints
Computing new abstract value of implication graph: 
!(smain.stato#279%0 >= 1)
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
!(smain.stato#272%0 >= 1)
!(smain.stato#277%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
!(smain.stato#279%0 >= 1)
Pop: LINE1#209%0 == LINE1#25
prop_trail size is: 102
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Donot Preprocess value !(smain.stato#265%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Donot Preprocess value !(smain.stato#270%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Donot Preprocess value !(smain.stato#272%0 >= 1)
Donot Preprocess value !(smain.stato#277%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Donot Preprocess value !(smain.stato#279%0 >= 1)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
!(smain.stato#272%0 >= 1)
!(smain.stato#277%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
!(smain.stato#279%0 >= 1)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
!(smain.stato#272%0 >= 1)
!(smain.stato#277%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
!(smain.stato#279%0 >= 1)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
The list of live variables are 
LINE1#209%0
LINE1#25
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
DOMAIN projected live variables are: LINE1#209%0 LINE1#25 
WARNING: do not know how to propagate b01::LINE1#209%0 of type _Bool
WARNING: do not know how to propagate main::1::LINE1#25 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 88
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
smain.stato#244%0, 
smain.stato#249%0, 
smain.stato#251%0, 
smain.stato#256%0, 
smain.stato#258%0, 
smain.stato#263%0, 
smain.stato#265%0, 
smain.stato#270%0, 
smain.stato#272%0, 
smain.stato#277%0, 
smain.stato#279%0, 
The total time for template generation is 0.000243 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0
(OUT)  TRUE: smain.stato#244%0
(OUT)  TRUE: smain.stato#249%0
(OUT)  TRUE: smain.stato#251%0
(OUT)  TRUE: smain.stato#256%0
(OUT)  TRUE: smain.stato#258%0
(OUT)  TRUE: smain.stato#263%0
(OUT)  TRUE: smain.stato#265%0
(OUT)  TRUE: smain.stato#270%0
(OUT)  TRUE: smain.stato#272%0
(OUT)  TRUE: smain.stato#277%0
(OUT)  TRUE: smain.stato#279%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#244%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#244%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#249%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#249%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#251%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#251%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#256%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#256%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#258%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#258%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#263%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#263%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#265%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#265%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#270%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#270%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#272%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#272%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#277%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#277%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#279%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#279%0)<=CONST )

<refinement-iteration>1</refinement-iteration>

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(smain.stato#244%0 >= 3) && !(smain.stato#249%0 >= 6) && !(smain.stato#251%0 >= 3) && !(smain.stato#256%0 >= 8) && !(smain.stato#258%0 >= 7) && !(smain.stato#263%0 >= 8) && !(smain.stato#265%0 >= 7) && !(smain.stato#270%0 >= 4) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(smain.stato#279%0 >= 1) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
smain.stato#242%0 < 6 is subsumed bysmain.stato#242%0 < 6
IS_SUBSUMED: 
  !(smain.stato#244%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#244%0 >= 3)
Simplified expression is !(smain.stato#244%0 >= 3)
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
smain.stato#244%0 < 3 is subsumed bysmain.stato#244%0 < 3
IS_SUBSUMED: 
  !(smain.stato#249%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#249%0 >= 6)
Simplified expression is !(smain.stato#249%0 >= 6)
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
smain.stato#249%0 < 6 is subsumed bysmain.stato#249%0 < 6
IS_SUBSUMED: 
  !(smain.stato#251%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#251%0 >= 3)
Simplified expression is !(smain.stato#251%0 >= 3)
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
smain.stato#251%0 < 3 is subsumed bysmain.stato#251%0 < 3
IS_SUBSUMED: 
  !(smain.stato#256%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#256%0 >= 8)
Simplified expression is !(smain.stato#256%0 >= 8)
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
smain.stato#256%0 < 8 is subsumed bysmain.stato#256%0 < 8
IS_SUBSUMED: 
  !(smain.stato#258%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#258%0 >= 7)
Simplified expression is !(smain.stato#258%0 >= 7)
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
smain.stato#258%0 < 7 is subsumed bysmain.stato#258%0 < 7
IS_SUBSUMED: 
  !(smain.stato#263%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#263%0 >= 8)
Simplified expression is !(smain.stato#263%0 >= 8)
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
smain.stato#263%0 < 8 is subsumed bysmain.stato#263%0 < 8
IS_SUBSUMED: 
  !(smain.stato#265%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#265%0 >= 7)
Simplified expression is !(smain.stato#265%0 >= 7)
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
smain.stato#265%0 < 7 is subsumed bysmain.stato#265%0 < 7
IS_SUBSUMED: 
  !(smain.stato#270%0 >= 4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#270%0 >= 4)
Simplified expression is !(smain.stato#270%0 >= 4)
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
smain.stato#270%0 < 4 is subsumed bysmain.stato#270%0 < 4
IS_SUBSUMED: 
  !(smain.stato#272%0 >= 1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#272%0 >= 1)
Simplified expression is !(smain.stato#272%0 >= 1)
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
smain.stato#272%0 < 1 is subsumed bysmain.stato#272%0 < 1
IS_SUBSUMED: 
  !(smain.stato#277%0 >= 4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#277%0 >= 4)
Simplified expression is !(smain.stato#277%0 >= 4)
The original not expression is !(smain.stato#277%0 >= 4)
The new non-negated expression is smain.stato#277%0 < 4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#277%0 >= 4)
The new non-negated expression is smain.stato#277%0 < 4
smain.stato#277%0 < 4 is subsumed bysmain.stato#277%0 < 4
IS_SUBSUMED: 
  !(smain.stato#279%0 >= 1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#279%0 >= 1)
Simplified expression is !(smain.stato#279%0 >= 1)
The original not expression is !(smain.stato#279%0 >= 1)
The new non-negated expression is smain.stato#279%0 < 1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#277%0 >= 4)
The new non-negated expression is smain.stato#277%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2
The original not expression is !(smain.stato#279%0 >= 1)
The new non-negated expression is smain.stato#279%0 < 1
smain.stato#279%0 < 1 is subsumed bysmain.stato#279%0 < 1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
lhs matches, push into lhs container smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
lhs matches, push into lhs container smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
lhs matches, push into lhs container smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
lhs matches, push into lhs container smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
lhs matches, push into lhs container smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
lhs matches, push into lhs container smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
lhs matches, push into lhs container smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
lhs matches, push into lhs container smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
lhs matches, push into lhs container smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
-((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#277%0 >= 4)
The new non-negated expression is smain.stato#277%0 < 4
lhs matches, push into lhs container smain.stato#277%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2
-((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2
[ACDL-DOMAIN] numerical deductions: 
[ACDL-DOMAIN] deductions: 
New: 
prop_trail size is: 102
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Donot Preprocess value !(smain.stato#265%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Donot Preprocess value !(smain.stato#270%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Donot Preprocess value !(smain.stato#272%0 >= 1)
Donot Preprocess value !(smain.stato#277%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Donot Preprocess value !(smain.stato#279%0 >= 1)
Now push all collected constraints
Computing new abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
!(smain.stato#272%0 >= 1)
!(smain.stato#277%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
!(smain.stato#279%0 >= 1)
Pop: LINE2#211%0 == LINE2#27
prop_trail size is: 102
control_trail is empty
Donot Preprocess value $cond#233%0
Donot Preprocess value $cond#240%0
Donot Preprocess value $cond#247%0
Donot Preprocess value $cond#254%0
Donot Preprocess value $cond#261%0
Donot Preprocess value $cond#268%0
Donot Preprocess value $cond#275%0
Donot Preprocess value $cond#226%0
Donot Preprocess value $cond#233%1
Donot Preprocess value $cond#240%1
Donot Preprocess value $cond#247%1
Donot Preprocess value $cond#254%1
Donot Preprocess value $cond#261%1
Donot Preprocess value $cond#268%1
Donot Preprocess value $cond#275%1
Donot Preprocess value $cond#226%1
Donot Preprocess value $cond#150%0
Donot Preprocess value $cond#157%0
Donot Preprocess value $cond#164%0
Donot Preprocess value $cond#171%0
Donot Preprocess value $cond#178%0
Donot Preprocess value $cond#185%0
Donot Preprocess value $cond#192%0
Donot Preprocess value $cond#229%0
Donot Preprocess value $cond#236%0
Donot Preprocess value $cond#243%0
Donot Preprocess value $cond#250%0
Donot Preprocess value $cond#257%0
Donot Preprocess value $cond#264%0
Donot Preprocess value $cond#271%0
Donot Preprocess value $cond#278%0
Donot Preprocess value $cond#66%0
Donot Preprocess value $cond#73%0
Donot Preprocess value $cond#80%0
Donot Preprocess value $cond#87%0
Donot Preprocess value $cond#94%0
Donot Preprocess value $cond#101%0
Donot Preprocess value $cond#108%0
Donot Preprocess value $cond#59%0
Donot Preprocess value $cond#150%1
Donot Preprocess value $cond#157%1
Donot Preprocess value $cond#164%1
Donot Preprocess value $cond#171%1
Donot Preprocess value $cond#178%1
Donot Preprocess value $cond#185%1
Donot Preprocess value $cond#192%1
Donot Preprocess value $cond#229%1
Donot Preprocess value $cond#236%1
Donot Preprocess value $cond#243%1
Donot Preprocess value $cond#250%1
Donot Preprocess value $cond#257%1
Donot Preprocess value $cond#264%1
Donot Preprocess value $cond#271%1
Donot Preprocess value $cond#278%1
Donot Preprocess value $cond#66%1
Donot Preprocess value $cond#73%1
Donot Preprocess value $cond#80%1
Donot Preprocess value $cond#87%1
Donot Preprocess value $cond#94%1
Donot Preprocess value $cond#101%1
Donot Preprocess value $cond#108%1
Donot Preprocess value $cond#59%1
Donot Preprocess value $cond#292%1
Donot Preprocess value $cond#146%0
Donot Preprocess value $cond#153%0
Donot Preprocess value $cond#160%0
Donot Preprocess value $cond#167%0
Donot Preprocess value $cond#174%0
Donot Preprocess value $cond#181%0
Donot Preprocess value $cond#188%0
Donot Preprocess value $cond#195%0
Donot Preprocess value $cond#143%0
Donot Preprocess value !(smain.stato#228%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Donot Preprocess value !(smain.stato#230%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Donot Preprocess value !(smain.stato#235%0 >= 5)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Donot Preprocess value !(smain.stato#237%0 >= 2)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Donot Preprocess value !(smain.stato#242%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Donot Preprocess value !(smain.stato#244%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Donot Preprocess value !(smain.stato#249%0 >= 6)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Donot Preprocess value !(smain.stato#251%0 >= 3)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Donot Preprocess value !(smain.stato#256%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Donot Preprocess value !(smain.stato#258%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Donot Preprocess value !(smain.stato#263%0 >= 8)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Donot Preprocess value !(smain.stato#265%0 >= 7)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Donot Preprocess value !(smain.stato#270%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Donot Preprocess value !(smain.stato#272%0 >= 1)
Donot Preprocess value !(smain.stato#277%0 >= 4)
Donot Preprocess value !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Donot Preprocess value !(smain.stato#279%0 >= 1)
Now push all collected constraints
Computing preprocessed abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
!(smain.stato#272%0 >= 1)
!(smain.stato#277%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
!(smain.stato#279%0 >= 1)
Computing old abstract value of implication graph: 
$cond#233%0
$cond#240%0
$cond#247%0
$cond#254%0
$cond#261%0
$cond#268%0
$cond#275%0
$cond#226%0
$cond#233%1
$cond#240%1
$cond#247%1
$cond#254%1
$cond#261%1
$cond#268%1
$cond#275%1
$cond#226%1
$cond#150%0
$cond#157%0
$cond#164%0
$cond#171%0
$cond#178%0
$cond#185%0
$cond#192%0
$cond#229%0
$cond#236%0
$cond#243%0
$cond#250%0
$cond#257%0
$cond#264%0
$cond#271%0
$cond#278%0
$cond#66%0
$cond#73%0
$cond#80%0
$cond#87%0
$cond#94%0
$cond#101%0
$cond#108%0
$cond#59%0
$cond#150%1
$cond#157%1
$cond#164%1
$cond#171%1
$cond#178%1
$cond#185%1
$cond#192%1
$cond#229%1
$cond#236%1
$cond#243%1
$cond#250%1
$cond#257%1
$cond#264%1
$cond#271%1
$cond#278%1
$cond#66%1
$cond#73%1
$cond#80%1
$cond#87%1
$cond#94%1
$cond#101%1
$cond#108%1
$cond#59%1
$cond#292%1
$cond#146%0
$cond#153%0
$cond#160%0
$cond#167%0
$cond#174%0
$cond#181%0
$cond#188%0
$cond#195%0
$cond#143%0
!(smain.stato#228%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
!(smain.stato#230%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
!(smain.stato#235%0 >= 5)
!(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
!(smain.stato#237%0 >= 2)
!(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
!(smain.stato#242%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
!(smain.stato#244%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
!(smain.stato#249%0 >= 6)
!(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
!(smain.stato#251%0 >= 3)
!(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
!(smain.stato#256%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
!(smain.stato#258%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
!(smain.stato#263%0 >= 8)
!(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
!(smain.stato#265%0 >= 7)
!(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
!(smain.stato#270%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
!(smain.stato#272%0 >= 1)
!(smain.stato#277%0 >= 4)
!(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
!(smain.stato#279%0 >= 1)
Old: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
The list of live variables are 
LINE2#211%0
LINE2#27
[ACDL-DOMAIN] old value: $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
DOMAIN projected live variables are: LINE2#211%0 LINE2#27 
WARNING: do not know how to propagate b01::LINE2#211%0 of type _Bool
WARNING: do not know how to propagate main::1::LINE2#27 of type _Bool
checking whether statement maps to BOTTOM: no
The total number of variables passed to the template generator is 88
The variables are 
$cond#101%0, 
$cond#101%1, 
$cond#108%0, 
$cond#108%1, 
$cond#143%0, 
$cond#146%0, 
$cond#150%0, 
$cond#150%1, 
$cond#153%0, 
$cond#157%0, 
$cond#157%1, 
$cond#160%0, 
$cond#164%0, 
$cond#164%1, 
$cond#167%0, 
$cond#171%0, 
$cond#171%1, 
$cond#174%0, 
$cond#178%0, 
$cond#178%1, 
$cond#181%0, 
$cond#185%0, 
$cond#185%1, 
$cond#188%0, 
$cond#192%0, 
$cond#192%1, 
$cond#195%0, 
$cond#226%0, 
$cond#226%1, 
$cond#229%0, 
$cond#229%1, 
$cond#233%0, 
$cond#233%1, 
$cond#236%0, 
$cond#236%1, 
$cond#240%0, 
$cond#240%1, 
$cond#243%0, 
$cond#243%1, 
$cond#247%0, 
$cond#247%1, 
$cond#250%0, 
$cond#250%1, 
$cond#254%0, 
$cond#254%1, 
$cond#257%0, 
$cond#257%1, 
$cond#261%0, 
$cond#261%1, 
$cond#264%0, 
$cond#264%1, 
$cond#268%0, 
$cond#268%1, 
$cond#271%0, 
$cond#271%1, 
$cond#275%0, 
$cond#275%1, 
$cond#278%0, 
$cond#278%1, 
$cond#292%1, 
$cond#59%0, 
$cond#59%1, 
$cond#66%0, 
$cond#66%1, 
$cond#73%0, 
$cond#73%1, 
$cond#80%0, 
$cond#80%1, 
$cond#87%0, 
$cond#87%1, 
$cond#94%0, 
$cond#94%1, 
smain.stato#228%0, 
smain.stato#230%0, 
smain.stato#235%0, 
smain.stato#237%0, 
smain.stato#242%0, 
smain.stato#244%0, 
smain.stato#249%0, 
smain.stato#251%0, 
smain.stato#256%0, 
smain.stato#258%0, 
smain.stato#263%0, 
smain.stato#265%0, 
smain.stato#270%0, 
smain.stato#272%0, 
smain.stato#277%0, 
smain.stato#279%0, 
The total time for template generation is 0.000239 s
Template variables: 
(OUT)  TRUE: smain.stato#228%0
(OUT)  TRUE: smain.stato#230%0
(OUT)  TRUE: smain.stato#235%0
(OUT)  TRUE: smain.stato#237%0
(OUT)  TRUE: smain.stato#242%0
(OUT)  TRUE: smain.stato#244%0
(OUT)  TRUE: smain.stato#249%0
(OUT)  TRUE: smain.stato#251%0
(OUT)  TRUE: smain.stato#256%0
(OUT)  TRUE: smain.stato#258%0
(OUT)  TRUE: smain.stato#263%0
(OUT)  TRUE: smain.stato#265%0
(OUT)  TRUE: smain.stato#270%0
(OUT)  TRUE: smain.stato#272%0
(OUT)  TRUE: smain.stato#277%0
(OUT)  TRUE: smain.stato#279%0

Template: 
(OUT)  TRUE===> 
      ( smain.stato#228%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#228%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#230%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#230%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#235%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#235%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#237%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#237%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#242%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#242%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#244%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#244%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#249%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#249%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#251%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#251%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#256%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#256%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#258%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#258%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#263%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#263%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#265%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#265%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#270%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#270%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#272%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#272%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#277%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#277%0)<=CONST )
(OUT)  TRUE===> 
      ( smain.stato#279%0<=CONST )
(OUT)  TRUE===> 
      ( -((signed __CPROVER_bitvector[9])smain.stato#279%0)<=CONST )

<refinement-iteration>1</refinement-iteration>

RESULT: !(smain.stato#228%0 >= 5) && !(smain.stato#230%0 >= 2) && !(smain.stato#235%0 >= 5) && !(smain.stato#237%0 >= 2) && !(smain.stato#242%0 >= 6) && !(smain.stato#244%0 >= 3) && !(smain.stato#249%0 >= 6) && !(smain.stato#251%0 >= 3) && !(smain.stato#256%0 >= 8) && !(smain.stato#258%0 >= 7) && !(smain.stato#263%0 >= 8) && !(smain.stato#265%0 >= 7) && !(smain.stato#270%0 >= 4) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(smain.stato#279%0 >= 1) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
IS_SUBSUMED: 
  !(smain.stato#228%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#228%0 >= 5)
Simplified expression is !(smain.stato#228%0 >= 5)
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
smain.stato#228%0 < 5 is subsumed bysmain.stato#228%0 < 5
IS_SUBSUMED: 
  !(smain.stato#230%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#230%0 >= 2)
Simplified expression is !(smain.stato#230%0 >= 2)
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
smain.stato#230%0 < 2 is subsumed bysmain.stato#230%0 < 2
IS_SUBSUMED: 
  !(smain.stato#235%0 >= 5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#235%0 >= 5)
Simplified expression is !(smain.stato#235%0 >= 5)
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
smain.stato#235%0 < 5 is subsumed bysmain.stato#235%0 < 5
IS_SUBSUMED: 
  !(smain.stato#237%0 >= 2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#237%0 >= 2)
Simplified expression is !(smain.stato#237%0 >= 2)
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
smain.stato#237%0 < 2 is subsumed bysmain.stato#237%0 < 2
IS_SUBSUMED: 
  !(smain.stato#242%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#242%0 >= 6)
Simplified expression is !(smain.stato#242%0 >= 6)
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
smain.stato#242%0 < 6 is subsumed bysmain.stato#242%0 < 6
IS_SUBSUMED: 
  !(smain.stato#244%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#244%0 >= 3)
Simplified expression is !(smain.stato#244%0 >= 3)
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
smain.stato#244%0 < 3 is subsumed bysmain.stato#244%0 < 3
IS_SUBSUMED: 
  !(smain.stato#249%0 >= 6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#249%0 >= 6)
Simplified expression is !(smain.stato#249%0 >= 6)
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
smain.stato#249%0 < 6 is subsumed bysmain.stato#249%0 < 6
IS_SUBSUMED: 
  !(smain.stato#251%0 >= 3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#251%0 >= 3)
Simplified expression is !(smain.stato#251%0 >= 3)
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
smain.stato#251%0 < 3 is subsumed bysmain.stato#251%0 < 3
IS_SUBSUMED: 
  !(smain.stato#256%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#256%0 >= 8)
Simplified expression is !(smain.stato#256%0 >= 8)
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
smain.stato#256%0 < 8 is subsumed bysmain.stato#256%0 < 8
IS_SUBSUMED: 
  !(smain.stato#258%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#258%0 >= 7)
Simplified expression is !(smain.stato#258%0 >= 7)
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
smain.stato#258%0 < 7 is subsumed bysmain.stato#258%0 < 7
IS_SUBSUMED: 
  !(smain.stato#263%0 >= 8)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#263%0 >= 8)
Simplified expression is !(smain.stato#263%0 >= 8)
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
smain.stato#263%0 < 8 is subsumed bysmain.stato#263%0 < 8
IS_SUBSUMED: 
  !(smain.stato#265%0 >= 7)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#265%0 >= 7)
Simplified expression is !(smain.stato#265%0 >= 7)
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
smain.stato#265%0 < 7 is subsumed bysmain.stato#265%0 < 7
IS_SUBSUMED: 
  !(smain.stato#270%0 >= 4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#270%0 >= 4)
Simplified expression is !(smain.stato#270%0 >= 4)
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
smain.stato#270%0 < 4 is subsumed bysmain.stato#270%0 < 4
IS_SUBSUMED: 
  !(smain.stato#272%0 >= 1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#272%0 >= 1)
Simplified expression is !(smain.stato#272%0 >= 1)
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
smain.stato#272%0 < 1 is subsumed bysmain.stato#272%0 < 1
IS_SUBSUMED: 
  !(smain.stato#277%0 >= 4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#277%0 >= 4)
Simplified expression is !(smain.stato#277%0 >= 4)
The original not expression is !(smain.stato#277%0 >= 4)
The new non-negated expression is smain.stato#277%0 < 4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#277%0 >= 4)
The new non-negated expression is smain.stato#277%0 < 4
smain.stato#277%0 < 4 is subsumed bysmain.stato#277%0 < 4
IS_SUBSUMED: 
  !(smain.stato#279%0 >= 1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(smain.stato#279%0 >= 1)
Simplified expression is !(smain.stato#279%0 >= 1)
The original not expression is !(smain.stato#279%0 >= 1)
The new non-negated expression is smain.stato#279%0 < 1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#277%0 >= 4)
The new non-negated expression is smain.stato#277%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2
The original not expression is !(smain.stato#279%0 >= 1)
The new non-negated expression is smain.stato#279%0 < 1
smain.stato#279%0 < 1 is subsumed bysmain.stato#279%0 < 1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
lhs matches, push into lhs container smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
lhs matches, push into lhs container smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
lhs matches, push into lhs container smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
lhs matches, push into lhs container smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
lhs matches, push into lhs container smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
lhs matches, push into lhs container smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
lhs matches, push into lhs container smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
lhs matches, push into lhs container smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
lhs matches, push into lhs container smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
lhs matches, push into lhs container smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
lhs matches, push into lhs container smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
lhs matches, push into lhs container smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
-((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
lhs matches, push into lhs container smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
-((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
IS_SUBSUMED: 
  !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
  $cond#233%0 && $cond#240%0 && $cond#247%0 && $cond#254%0 && $cond#261%0 && $cond#268%0 && $cond#275%0 && $cond#226%0 && $cond#233%1 && $cond#240%1 && $cond#247%1 && $cond#254%1 && $cond#261%1 && $cond#268%1 && $cond#275%1 && $cond#226%1 && $cond#150%0 && $cond#157%0 && $cond#164%0 && $cond#171%0 && $cond#178%0 && $cond#185%0 && $cond#192%0 && $cond#229%0 && $cond#236%0 && $cond#243%0 && $cond#250%0 && $cond#257%0 && $cond#264%0 && $cond#271%0 && $cond#278%0 && $cond#66%0 && $cond#73%0 && $cond#80%0 && $cond#87%0 && $cond#94%0 && $cond#101%0 && $cond#108%0 && $cond#59%0 && $cond#150%1 && $cond#157%1 && $cond#164%1 && $cond#171%1 && $cond#178%1 && $cond#185%1 && $cond#192%1 && $cond#229%1 && $cond#236%1 && $cond#243%1 && $cond#250%1 && $cond#257%1 && $cond#264%1 && $cond#271%1 && $cond#278%1 && $cond#66%1 && $cond#73%1 && $cond#80%1 && $cond#87%1 && $cond#94%1 && $cond#101%1 && $cond#108%1 && $cond#59%1 && $cond#292%1 && $cond#146%0 && $cond#153%0 && $cond#160%0 && $cond#167%0 && $cond#174%0 && $cond#181%0 && $cond#188%0 && $cond#195%0 && $cond#143%0 && !(smain.stato#228%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3) && !(smain.stato#230%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0) && !(smain.stato#235%0 >= 5) && !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3) && !(smain.stato#237%0 >= 2) && !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0) && !(smain.stato#242%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4) && !(smain.stato#244%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1) && !(smain.stato#249%0 >= 6) && !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4) && !(smain.stato#251%0 >= 3) && !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1) && !(smain.stato#256%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6) && !(smain.stato#258%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5) && !(smain.stato#263%0 >= 8) && !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6) && !(smain.stato#265%0 >= 7) && !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5) && !(smain.stato#270%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2) && !(smain.stato#272%0 >= 1) && !(smain.stato#277%0 >= 4) && !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2) && !(smain.stato#279%0 >= 1)
Subsumption test of meet irreducible !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
Simplified expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2
The original not expression is !(smain.stato#228%0 >= 5)
The new non-negated expression is smain.stato#228%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#228%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#228%0) < -3
The original not expression is !(smain.stato#230%0 >= 2)
The new non-negated expression is smain.stato#230%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#230%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#230%0) < 0
The original not expression is !(smain.stato#235%0 >= 5)
The new non-negated expression is smain.stato#235%0 < 5
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#235%0) >= -3)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#235%0) < -3
The original not expression is !(smain.stato#237%0 >= 2)
The new non-negated expression is smain.stato#237%0 < 2
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#237%0) >= 0)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#237%0) < 0
The original not expression is !(smain.stato#242%0 >= 6)
The new non-negated expression is smain.stato#242%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#242%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#242%0) < -4
The original not expression is !(smain.stato#244%0 >= 3)
The new non-negated expression is smain.stato#244%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#244%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#244%0) < -1
The original not expression is !(smain.stato#249%0 >= 6)
The new non-negated expression is smain.stato#249%0 < 6
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#249%0) >= -4)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#249%0) < -4
The original not expression is !(smain.stato#251%0 >= 3)
The new non-negated expression is smain.stato#251%0 < 3
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#251%0) >= -1)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#251%0) < -1
The original not expression is !(smain.stato#256%0 >= 8)
The new non-negated expression is smain.stato#256%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#256%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#256%0) < -6
The original not expression is !(smain.stato#258%0 >= 7)
The new non-negated expression is smain.stato#258%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#258%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#258%0) < -5
The original not expression is !(smain.stato#263%0 >= 8)
The new non-negated expression is smain.stato#263%0 < 8
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#263%0) >= -6)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#263%0) < -6
The original not expression is !(smain.stato#265%0 >= 7)
The new non-negated expression is smain.stato#265%0 < 7
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#265%0) >= -5)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#265%0) < -5
The original not expression is !(smain.stato#270%0 >= 4)
The new non-negated expression is smain.stato#270%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#270%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#270%0) < -2
The original not expression is !(smain.stato#272%0 >= 1)
The new non-negated expression is smain.stato#272%0 < 1
The original not expression is !(smain.stato#277%0 >= 4)
The new non-negated expression is smain.stato#277%0 < 4
lhs matches, push into lhs container smain.stato#277%0 < 4
The original not expression is !(-((signed __CPROVER_bitvector[9])smain.stato#277%0) >= -2)
The new non-negated expression is -((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2
-((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2 is subsumed by-((signed __CPROVER_bitvector[9])smain.stato#277%0) < -2
[ACDL-DOMAIN] numerical deductions: 
[ACDL-DOMAIN] deductions: 

[startup+462.3 s]
/proc/loadavg: 3.65 2.27 1.08 4/421 21358
/proc/meminfo: memFree=16101632/49446312 swapFree=0/9939156
[pid=21048] ppid=21046 vsize=46728 CPUtime=460.85 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6718 850 0 0 46078 7 0 0 20 0 1 0 933307213 47849472 7869 18446744073709551615 4194304 8965104 140728309787952 140728309779216 4337441 0 24578 0 16384 0 0 0 17 0 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 11682 7869 1804 1165 0 7306 0
Current children cumulated CPU time (s) 460.85
Current children cumulated vsize (KiB) 46728
Recieved signal SIGINT setting flag.


Shutdown Reason:
Received SIGTERM or SIGINT, killing child
Stop Solver Thread: Should Execute
Timer Thread detected shutdown flag, shutting downStop Solver Thread: Timer Thread Stopped

[startup+462.8 s]
/proc/loadavg: 3.65 2.27 1.08 5/420 21358
/proc/meminfo: memFree=15937924/49446312 swapFree=0/10100176
[pid=21048] ppid=21046 vsize=46728 CPUtime=461.45 cores=0-7
/proc/21048/stat : 21048 (2ls) R 21046 21048 20874 34816 21040 4210688 6718 850 0 0 46138 7 0 0 20 0 1 0 933307213 47849472 7869 18446744073709551615 4194304 8965104 140728309787952 140728309779408 139873730876393 0 24578 0 16384 0 0 0 17 0 0 0 0 0 0 11066088 11080756 36773888 140728309789750 140728309789897 140728309789897 140728309792723 0
/proc/21048/statm: 11682 7869 1804 1165 0 7306 0
Current children cumulated CPU time (s) 461.45
Current children cumulated vsize (KiB) 46728

Sending SIGTERM to process tree (bottom up)
Stop Solver Thread: SIGTERM sent, waiting and sending SIGKILL
Sleeping 1 seconds

Sending SIGKILL to process tree (bottom up)

Sending SIGKILL to -21048
Stop Solver Thread: DONE
Requesting Timer Thread Should Shutdown 
Setting solver is running = false 
Joining on timer Thread 
Timer Thread Done
Waiting for stop solver thread
Sending fallback SIGKILL signal to process group

Solver just ended. Dumping a history of the last processes samples

Child ended because it received signal 9 (SIGKILL)
Real time (s): 463.938
runsolver_walltime: 463.938
CPU time (s): 462.475
runsolver_cputime: 462.475
CPU user time (s): 462.393
CPU system time (s): 0.082604
CPU usage (%): 99.6848
Max. virtual memory (cumulated for all children) (KiB): 46728

getrusage(RUSAGE_CHILDREN,...) data:
user time used= 462.393
system time used= 0.082604
maximum resident set size= 31712
integral shared memory size= 0
integral unshared data size= 0
integral unshared stack size= 0
page reclaims= 7568
page faults= 0
swaps= 0
block input operations= 0
block output operations= 5648
messages sent= 0
messages received= 0
signals received= 0
voluntary context switches= 70
involuntary context switches= 438

runsolver used 1.03568 second user time and 1.63963 second system time

The end
